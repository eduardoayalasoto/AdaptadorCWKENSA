<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:exsl="http://exslt.org/common"
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xs="http://www.w3.org/2001/XMLSchema"
  exclude-result-prefixes="xs" version="1.0" extension-element-prefixes="exsl"
  xmlns:w="http://www.cargowise.com/Schemas/Universal/2011/11"
  xmlns:a="http://www.tralix.com/cfd/40">
  <xsl:output method="xml" encoding="UTF-8" indent="yes"/>
  <xsl:template match="/">
    <a:Comprobante version="2.0">
      <!--Variables de acondicionamiento-->
      <xsl:variable name="lowercase" select="'abcdefghijklmnopqrstuvwxyz'"/>
      <xsl:variable name="uppercase" select="'ABCDEFGHIJKLMNOPQRSTUVWXYZ'"/>
      <!-- Leer tipo de documento para desplegar tipo de documento -->
      <xsl:variable name="invoiceType"
        select="//w:ShipmentCollection/w:Shipment/w:DataContext/w:DataSourceCollection/w:DataSource/w:Type[1]"/>

      <xsl:variable name="tipoDeComprobante">
        <xsl:choose>
          <xsl:when test="//w:TransactionInfo/w:TransactionType = 'INV'">
            <xsl:value-of select="'I'"/>
          </xsl:when>
          <xsl:when test="//w:TransactionInfo/w:TransactionType = 'CRD'">
            <xsl:value-of select="'E'"/>
          </xsl:when>
        </xsl:choose>
      </xsl:variable>

      <xsl:variable name="FacturaAdministrativa">
        <xsl:choose>
          <xsl:when test="contains(//w:TransactionInfo/w:Description, 'AR INVOICE')">
            <xsl:value-of select="'true'"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="'false'"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:variable>

      <xsl:variable name="configuracionOrganizacionMetodoyFormaDePago">
        <xsl:choose>
          <xsl:when
            test="//w:PostingJournalCollection/w:PostingJournal/w:ChargeCode/w:Code = 'MXFMP'">
            <xsl:value-of select="'false'"/>
          </xsl:when>
          <xsl:when test="contains(//w:TransactionInfo/w:AgreedPaymentMethod, '03')">
            <xsl:value-of select="'true'"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="'false'"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:variable>

      <xsl:if test="contains(//w:TransactionInfo/w:Description, 'REVERSAL')">
        <xsl:attribute name="NoTimbrarReversal"/>
      </xsl:if>

      <!--Variables de Método de Pago y Forma de Pago-->
      <xsl:variable name="metodoDePago">
        <xsl:choose>
          <xsl:when test="$FacturaAdministrativa = 'true'">
            <xsl:value-of select="'PUE'"/>
          </xsl:when>
          <xsl:when test="$configuracionOrganizacionMetodoyFormaDePago = 'true'">
            <xsl:value-of select="'PUE'"/>
          </xsl:when>
          <xsl:when
            test="//w:PostingJournalCollection/w:PostingJournal/w:ChargeCode/w:Code = 'MXFMP'">
            <xsl:value-of
              select="substring-before(//w:PostingJournalCollection/w:PostingJournal[w:ChargeCode/w:Code = 'MXFMP']/w:Description, '-')"
            />
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="'PPD'"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:variable>

      <xsl:variable name="formaDePago">
        <xsl:choose>
          <xsl:when test="$FacturaAdministrativa = 'true'">
            <xsl:value-of select="'03'"/>
          </xsl:when>
          <xsl:when test="$configuracionOrganizacionMetodoyFormaDePago = 'true'">
            <xsl:value-of select="'03'"/>
          </xsl:when>
          <xsl:when
            test="//w:PostingJournalCollection/w:PostingJournal/w:ChargeCode/w:Code = 'MXFMP'">
            <xsl:value-of
              select="format-number(substring-after(//w:PostingJournalCollection/w:PostingJournal[w:ChargeCode/w:Code = 'MXFMP']/w:Description, '-'), '00')"
            />
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="'99'"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:variable>

      <xsl:variable name="paisCode"
        select="//w:TransactionInfo/w:OrganizationAddress/w:Country/w:Code"/>

      <xsl:variable name="pais">
        <xsl:choose>
          <xsl:when test="$paisCode = 'AD'">
            <xsl:value-of select="'AND'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'AE'">
            <xsl:value-of select="'ARE'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'AF'">
            <xsl:value-of select="'AFG'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'AG'">
            <xsl:value-of select="'ATG'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'AI'">
            <xsl:value-of select="'AIA'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'AL'">
            <xsl:value-of select="'ALB'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'AM'">
            <xsl:value-of select="'ARM'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'AN'">
            <xsl:value-of select="'ANT'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'AO'">
            <xsl:value-of select="'AGO'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'AQ'">
            <xsl:value-of select="'ATA'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'AR'">
            <xsl:value-of select="'ARG'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'AS'">
            <xsl:value-of select="'ASM'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'AT'">
            <xsl:value-of select="'AUT'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'AU'">
            <xsl:value-of select="'AUS'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'AW'">
            <xsl:value-of select="'ABW'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'AX'">
            <xsl:value-of select="'ALA'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'AZ'">
            <xsl:value-of select="'AZE'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'BA'">
            <xsl:value-of select="'BIH'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'BB'">
            <xsl:value-of select="'BRB'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'BD'">
            <xsl:value-of select="'BGD'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'BE'">
            <xsl:value-of select="'BEL'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'BF'">
            <xsl:value-of select="'BFA'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'BG'">
            <xsl:value-of select="'BGR'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'BH'">
            <xsl:value-of select="'BHR'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'BI'">
            <xsl:value-of select="'BDI'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'BJ'">
            <xsl:value-of select="'BEN'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'BL'">
            <xsl:value-of select="'BLM'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'BM'">
            <xsl:value-of select="'BMU'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'BN'">
            <xsl:value-of select="'BRN'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'BO'">
            <xsl:value-of select="'BOL'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'BR'">
            <xsl:value-of select="'BRA'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'BS'">
            <xsl:value-of select="'BHS'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'BT'">
            <xsl:value-of select="'BTN'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'BV'">
            <xsl:value-of select="'BVT'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'BW'">
            <xsl:value-of select="'BWA'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'BY'">
            <xsl:value-of select="'BLR'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'BZ'">
            <xsl:value-of select="'BLZ'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'CA'">
            <xsl:value-of select="'CAN'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'CC'">
            <xsl:value-of select="'CCK'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'CF'">
            <xsl:value-of select="'CAF'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'CG'">
            <xsl:value-of select="'COG'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'CH'">
            <xsl:value-of select="'CHE'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'CI'">
            <xsl:value-of select="'CIV'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'CK'">
            <xsl:value-of select="'COK'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'CL'">
            <xsl:value-of select="'CHL'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'CM'">
            <xsl:value-of select="'CMR'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'CN'">
            <xsl:value-of select="'CHN'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'CO'">
            <xsl:value-of select="'COL'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'CR'">
            <xsl:value-of select="'CRI'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'CU'">
            <xsl:value-of select="'CUB'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'CV'">
            <xsl:value-of select="'CPV'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'CX'">
            <xsl:value-of select="'CXR'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'CY'">
            <xsl:value-of select="'CYP'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'CZ'">
            <xsl:value-of select="'CZE'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'DE'">
            <xsl:value-of select="'DEU'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'DJ'">
            <xsl:value-of select="'DJI'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'DK'">
            <xsl:value-of select="'DNK'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'DM'">
            <xsl:value-of select="'DMA'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'DO'">
            <xsl:value-of select="'DOM'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'DZ'">
            <xsl:value-of select="'DZA'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'EC'">
            <xsl:value-of select="'ECU'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'EE'">
            <xsl:value-of select="'EST'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'EG'">
            <xsl:value-of select="'EGY'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'EH'">
            <xsl:value-of select="'ESH'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'ER'">
            <xsl:value-of select="'ERI'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'ES'">
            <xsl:value-of select="'ESP'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'ET'">
            <xsl:value-of select="'ETH'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'FI'">
            <xsl:value-of select="'FIN'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'FJ'">
            <xsl:value-of select="'FJI'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'FK'">
            <xsl:value-of select="'KLK'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'FM'">
            <xsl:value-of select="'FSM'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'FO'">
            <xsl:value-of select="'FRO'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'FR'">
            <xsl:value-of select="'FRA'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'GA'">
            <xsl:value-of select="'GAB'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'GB'">
            <xsl:value-of select="'GBR'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'GD'">
            <xsl:value-of select="'GRD'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'GE'">
            <xsl:value-of select="'GEO'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'GF'">
            <xsl:value-of select="'GUF'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'GG'">
            <xsl:value-of select="'GGY'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'GH'">
            <xsl:value-of select="'GHA'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'GI'">
            <xsl:value-of select="'GIB'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'GL'">
            <xsl:value-of select="'GRL'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'GM'">
            <xsl:value-of select="'GMB'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'GN'">
            <xsl:value-of select="'GIN'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'GP'">
            <xsl:value-of select="'GLP'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'GQ'">
            <xsl:value-of select="'GNQ'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'GR'">
            <xsl:value-of select="'GRC'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'GS'">
            <xsl:value-of select="'SGS'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'GT'">
            <xsl:value-of select="'GTM'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'GU'">
            <xsl:value-of select="'GUM'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'GW'">
            <xsl:value-of select="'GNB'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'GY'">
            <xsl:value-of select="'GUY'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'HK'">
            <xsl:value-of select="'HKG'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'HM'">
            <xsl:value-of select="'HMD'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'HN'">
            <xsl:value-of select="'HND'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'HR'">
            <xsl:value-of select="'HRV'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'HT'">
            <xsl:value-of select="'HTI'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'HU'">
            <xsl:value-of select="'HUN'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'ID'">
            <xsl:value-of select="'IDN'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'IE'">
            <xsl:value-of select="'IRL'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'IL'">
            <xsl:value-of select="'ISR'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'IM'">
            <xsl:value-of select="'IMN'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'IN'">
            <xsl:value-of select="'IND'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'IO'">
            <xsl:value-of select="'IOT'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'IQ'">
            <xsl:value-of select="'IRQ'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'IR'">
            <xsl:value-of select="'IRN'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'IS'">
            <xsl:value-of select="'ISL'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'IT'">
            <xsl:value-of select="'ITA'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'JE'">
            <xsl:value-of select="'JEY'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'JM'">
            <xsl:value-of select="'JAM'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'JO'">
            <xsl:value-of select="'JOR'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'JP'">
            <xsl:value-of select="'JPN'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'KE'">
            <xsl:value-of select="'KEN'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'KG'">
            <xsl:value-of select="'KGZ'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'KH'">
            <xsl:value-of select="'KHM'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'KI'">
            <xsl:value-of select="'KIR'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'KM'">
            <xsl:value-of select="'COM'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'KN'">
            <xsl:value-of select="'KNA'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'KP'">
            <xsl:value-of select="'PRK'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'KR'">
            <xsl:value-of select="'KOR'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'KW'">
            <xsl:value-of select="'KWT'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'KY'">
            <xsl:value-of select="'CYM'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'KZ'">
            <xsl:value-of select="'KAZ'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'LA'">
            <xsl:value-of select="'LAO'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'LB'">
            <xsl:value-of select="'LBN'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'LC'">
            <xsl:value-of select="'LCA'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'LI'">
            <xsl:value-of select="'LIE'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'LK'">
            <xsl:value-of select="'LKA'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'LR'">
            <xsl:value-of select="'LBR'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'LS'">
            <xsl:value-of select="'LSO'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'LT'">
            <xsl:value-of select="'LTU'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'LU'">
            <xsl:value-of select="'LUX'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'LV'">
            <xsl:value-of select="'LVA'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'LY'">
            <xsl:value-of select="'LBY'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'MA'">
            <xsl:value-of select="'MAR'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'MC'">
            <xsl:value-of select="'MCO'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'MD'">
            <xsl:value-of select="'MDA'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'ME'">
            <xsl:value-of select="'MNE'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'MG'">
            <xsl:value-of select="'MDG'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'MH'">
            <xsl:value-of select="'MHL'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'MK'">
            <xsl:value-of select="'MKD'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'ML'">
            <xsl:value-of select="'MLI'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'MM'">
            <xsl:value-of select="'MMR'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'MN'">
            <xsl:value-of select="'MNG'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'MO'">
            <xsl:value-of select="'MAC'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'MQ'">
            <xsl:value-of select="'MTQ'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'MR'">
            <xsl:value-of select="'MRT'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'MS'">
            <xsl:value-of select="'MSR'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'MT'">
            <xsl:value-of select="'MLT'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'MU'">
            <xsl:value-of select="'MUS'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'MV'">
            <xsl:value-of select="'MDV'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'MW'">
            <xsl:value-of select="'MWI'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'MX'">
            <xsl:value-of select="'MEX'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'MY'">
            <xsl:value-of select="'MYS'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'MZ'">
            <xsl:value-of select="'MOZ'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'NA'">
            <xsl:value-of select="'NAM'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'NC'">
            <xsl:value-of select="'NCL'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'NE'">
            <xsl:value-of select="'NER'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'NF'">
            <xsl:value-of select="'NFK'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'NG'">
            <xsl:value-of select="'NGA'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'NI'">
            <xsl:value-of select="'NIC'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'NL'">
            <xsl:value-of select="'NLD'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'NO'">
            <xsl:value-of select="'NOR'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'NP'">
            <xsl:value-of select="'NPL'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'NR'">
            <xsl:value-of select="'NRU'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'NU'">
            <xsl:value-of select="'NIU'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'NZ'">
            <xsl:value-of select="'NZL'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'OM'">
            <xsl:value-of select="'OMN'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'PA'">
            <xsl:value-of select="'PAN'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'PE'">
            <xsl:value-of select="'PER'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'PF'">
            <xsl:value-of select="'PYF'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'PG'">
            <xsl:value-of select="'PNG'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'PH'">
            <xsl:value-of select="'PHL'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'PK'">
            <xsl:value-of select="'PAK'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'PL'">
            <xsl:value-of select="'POL'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'PM'">
            <xsl:value-of select="'SPM'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'PN'">
            <xsl:value-of select="'PCN'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'PR'">
            <xsl:value-of select="'PRI'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'PS'">
            <xsl:value-of select="'PSE'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'PT'">
            <xsl:value-of select="'PRT'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'PW'">
            <xsl:value-of select="'PLW'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'PY'">
            <xsl:value-of select="'PRY'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'QA'">
            <xsl:value-of select="'QAT'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'RE'">
            <xsl:value-of select="'REU'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'RO'">
            <xsl:value-of select="'ROU'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'RS'">
            <xsl:value-of select="'SRB'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'RU'">
            <xsl:value-of select="'RUS'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'RW'">
            <xsl:value-of select="'RWA'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'SA'">
            <xsl:value-of select="'SAU'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'SB'">
            <xsl:value-of select="'SLB'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'SC'">
            <xsl:value-of select="'SYC'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'SD'">
            <xsl:value-of select="'SDN'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'SE'">
            <xsl:value-of select="'SWE'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'SG'">
            <xsl:value-of select="'SGP'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'SH'">
            <xsl:value-of select="'SHN'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'SI'">
            <xsl:value-of select="'SVN'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'SJ'">
            <xsl:value-of select="'SJM'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'SK'">
            <xsl:value-of select="'SVK'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'SL'">
            <xsl:value-of select="'SLE'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'SM'">
            <xsl:value-of select="'SMR'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'SN'">
            <xsl:value-of select="'SEN'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'SO'">
            <xsl:value-of select="'SOM'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'SR'">
            <xsl:value-of select="'SUR'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'ST'">
            <xsl:value-of select="'STP'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'SV'">
            <xsl:value-of select="'SLV'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'SY'">
            <xsl:value-of select="'SYR'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'SZ'">
            <xsl:value-of select="'SWZ'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'TC'">
            <xsl:value-of select="'TCA'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'TD'">
            <xsl:value-of select="'TCD'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'TF'">
            <xsl:value-of select="'ATF'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'TG'">
            <xsl:value-of select="'TGO'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'TH'">
            <xsl:value-of select="'THA'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'TH'">
            <xsl:value-of select="'TZA'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'TJ'">
            <xsl:value-of select="'TJK'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'TK'">
            <xsl:value-of select="'TKL'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'TL'">
            <xsl:value-of select="'TLS'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'TM'">
            <xsl:value-of select="'TKM'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'TN'">
            <xsl:value-of select="'TUN'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'TO'">
            <xsl:value-of select="'TON'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'TR'">
            <xsl:value-of select="'TUR'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'TT'">
            <xsl:value-of select="'TTO'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'TV'">
            <xsl:value-of select="'TUV'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'TW'">
            <xsl:value-of select="'TWN'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'UA'">
            <xsl:value-of select="'UKR'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'UG'">
            <xsl:value-of select="'UGA'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'US'">
            <xsl:value-of select="'USA'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'UY'">
            <xsl:value-of select="'URY'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'UZ'">
            <xsl:value-of select="'UZB'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'VA'">
            <xsl:value-of select="'VAT'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'VC'">
            <xsl:value-of select="'VCT'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'VE'">
            <xsl:value-of select="'VEN'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'VG'">
            <xsl:value-of select="'VGB'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'VI'">
            <xsl:value-of select="'VIR'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'VN'">
            <xsl:value-of select="'VNM'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'VU'">
            <xsl:value-of select="'VUT'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'WF'">
            <xsl:value-of select="'WLF'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'WS'">
            <xsl:value-of select="'WSM'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'YE'">
            <xsl:value-of select="'YEM'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'YT'">
            <xsl:value-of select="'MYT'"/>
          </xsl:when>
          <xsl:when test="$paisCode = 'ZA'">
            <xsl:value-of select="'ZAF'"/>
          </xsl:when>
        </xsl:choose>
      </xsl:variable>

      <xsl:variable name="rfc">
        <xsl:choose>
          <xsl:when test="$pais = 'MEX'">
            <xsl:value-of
              select="translate(//w:OrganizationAddress/w:RegistrationNumberCollection/w:RegistrationNumber[w:Type/w:Code = 'RFC'][w:CountryOfIssue/w:Code = 'MX']/w:Value, ' -', '')"
            />
          </xsl:when>
          <xsl:when test="not($pais = 'MEX')">
            <xsl:value-of select="'XEXX010101000'"/>
          </xsl:when>
        </xsl:choose>
      </xsl:variable>

      <xsl:variable name="RegimenFiscalReceptor">
        <xsl:choose>
          <xsl:when test="$pais = 'MEX'">
            <xsl:value-of
              select="//w:OrganizationAddress/w:RegistrationNumberCollection/w:RegistrationNumber[w:Type/w:Code = 'REG'][w:CountryOfIssue/w:Code = 'MX']/w:Value"
            />
          </xsl:when>
          <xsl:when test="not($pais = 'MEX')">
            <xsl:value-of select="'616'"/>
          </xsl:when>
        </xsl:choose>
      </xsl:variable>

      <xsl:variable name="RelacionadosCFDI"
        select="translate(//w:PostingJournalCollection/w:PostingJournal[w:ChargeCode/w:Code = 'MXUUID']/w:Description, $lowercase, $uppercase)"/>

      <xsl:variable name="TipoRelacion">
        <xsl:value-of select="substring($RelacionadosCFDI, 1, 2)"/>
      </xsl:variable>

      <xsl:variable name="uuidRelacionado">
        <xsl:value-of select="substring-after($RelacionadosCFDI, '-')"/>
      </xsl:variable>

      <!--Variable para crear condicionesDePago-->
      <xsl:choose>
        <xsl:when test="//w:TransactionInfo/w:InvoiceTerm = 'COD'">
          <xsl:variable name="condiciones" select="//w:TransactionInfo/w:InvoiceTerm"/>
          <xsl:variable name="dias" select="//w:TransactionInfo/w:InvoiceTermDays"/>
          <xsl:attribute name="condicionesDePago">
            <xsl:value-of select="concat($condiciones, ' - ', $dias, ' DAYS')"/>
          </xsl:attribute>
        </xsl:when>
      </xsl:choose>

      <!--Detener facturación en caso de que en descripción manden la palabra NT-->
      <xsl:if test="contains(//w:TransactionInfo/w:Description, '- NT')">
        <xsl:attribute name="NoTimbrarPorNC">
          <xsl:value-of select="'detener'"/>
        </xsl:attribute>
      </xsl:if>

      <xsl:attribute name="cantidadLetra">
        <xsl:value-of select="'-'"/>
      </xsl:attribute>

      <xsl:if test="//w:TransactionInfo/w:DueDate">
        <xsl:attribute name="fechaVencimiento">
          <xsl:value-of select="substring-before(//w:TransactionInfo/w:DueDate, 'T')"/>
        </xsl:attribute>
      </xsl:if>

      <!-- Serie y Folio -->
      <xsl:variable name="serie">
        <xsl:choose>
          <xsl:when test="//w:TransactionInfo/w:TransactionType = 'INV'">

            <xsl:value-of select="'CWF'"/>

          </xsl:when>
          <xsl:when test="//w:TransactionInfo/w:TransactionType = 'CRD'">

            <xsl:value-of select="'CWN'"/>

          </xsl:when>
        </xsl:choose>
      </xsl:variable>

      <xsl:variable name="folio">
        <xsl:value-of select="translate(//w:TransactionInfo/w:Number, $uppercase, '')"/>
      </xsl:variable>

      <xsl:attribute name="serie">
        <xsl:value-of select="$serie"/>
      </xsl:attribute>
      <xsl:attribute name="folio">
        <xsl:value-of select="$folio"/>

      </xsl:attribute>

      <xsl:attribute name="tipoDeComprobante">
        <xsl:value-of select="$tipoDeComprobante"/>
      </xsl:attribute>

      <!-- Variables de Moneda y Tipo de Cambio -->
      <xsl:variable name="Moneda" select="//w:TransactionInfo/w:OSCurrency/w:Code"/>

      <xsl:attribute name="Moneda">
        <xsl:value-of select="$Moneda"/>
      </xsl:attribute>

      <xsl:variable name="TipoCambio">
        <xsl:choose>
          <xsl:when test="$Moneda = 'MXN'">
            <xsl:value-of select="'1'"/>
          </xsl:when>
          <xsl:when test="$Moneda != 'MXN'">
            <xsl:value-of
              select="format-number(number(//w:TransactionInfo/w:ExchangeRate), '0.0000')"/>
          </xsl:when>
        </xsl:choose>
      </xsl:variable>

      <xsl:attribute name="TipoCambio">
        <xsl:value-of select="$TipoCambio"/>
      </xsl:attribute>

      <xsl:variable name="pathConcepto"
        select="//w:PostingJournalCollection/w:PostingJournal[not(w:ChargeCode/w:Code) or (w:ChargeCode/w:Code != 'CMT' and w:ChargeCode/w:Code != 'DTA' and w:ChargeCode/w:Code != 'PREVAL' and w:ChargeCode/w:Code != 'MXUUID')]/w:OSAmount"/>

      <xsl:variable name="pathIva"
        select="//w:PostingJournalCollection/w:PostingJournal[not(w:ChargeCode/w:Code) or (w:ChargeCode/w:Code != 'CMT' and w:ChargeCode/w:Code != 'DTA' and w:ChargeCode/w:Code != 'PREVAL')]/w:OSGSTVATAmount"/>

      <xsl:variable name="pathIvaRet"
        select="//w:PostingJournalCollection/w:PostingJournal[not(w:ChargeCode/w:Code) or (w:ChargeCode/w:Code != 'CMT' and w:ChargeCode/w:Code != 'DTA' and w:ChargeCode/w:Code != 'PREVAL')]/w:OSExtraVATAmount"/>

      <xsl:variable name="subtotal">
        <xsl:value-of select="sum($pathConcepto[. &gt; 0]) - sum($pathConcepto[. &lt; 0])"/>
      </xsl:variable>

      <xsl:variable name="descuento">
        <xsl:choose>
          <xsl:when test="$tipoDeComprobante = 'E'">
            <xsl:value-of select="0"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="sum($pathConcepto[. &lt; 0]) * -1"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:variable>

      <xsl:variable name="IVA">
        <xsl:value-of select="sum($pathIva[. &gt; 0]) - sum($pathIva[. &lt; 0])"/>
      </xsl:variable>

      <xsl:variable name="IVARetenidoSuma">
        <xsl:value-of select="sum($pathIvaRet[. &gt; 0]) - sum($pathIvaRet[. &lt; 0])"/>
      </xsl:variable>

      <xsl:variable name="IVASuma">
        <xsl:value-of select="format-number($IVA + $IVARetenidoSuma, '0.00')"/>
      </xsl:variable>

      <xsl:variable name="IVAcero">
        <xsl:value-of
          select="count(//w:PostingJournalCollection/w:PostingJournal[w:ChargeCode/w:Code != 'CMT' and w:ChargeCode/w:Code != 'DTA' and w:ChargeCode/w:Code != 'PREVAL']/w:VATTaxID[w:TaxCode = 'FREEIVA'])"
        />
      </xsl:variable>

      <xsl:variable name="total" select="$subtotal + $IVASuma - $IVARetenidoSuma - $descuento"/>

      <xsl:if test="$descuento &gt; 0 and $tipoDeComprobante = 'I'">
        <xsl:attribute name="descuento">
          <xsl:value-of select="format-number($descuento, '0.00')"/>
        </xsl:attribute>
      </xsl:if>

      <xsl:attribute name="subTotal">
        <xsl:value-of select="format-number($subtotal, '0.00')"/>
      </xsl:attribute>

      <xsl:attribute name="total">
        <xsl:value-of select="format-number($total, '0.00')"/>
      </xsl:attribute>

      <xsl:attribute name="LugarExpedicion">
        <xsl:value-of select="//w:TransactionInfo/w:BranchAddress/w:Postcode"/>
      </xsl:attribute>

      <xsl:attribute name="fecha">
        <xsl:choose>
          <xsl:when test="contains(//w:TransactionInfo/w:DataContext/w:TriggerDate, '.')">
            <xsl:value-of
              select="substring-before(//w:TransactionInfo/w:DataContext/w:TriggerDate, '.')"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="//w:TransactionInfo/w:DataContext/w:TriggerDate"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:attribute>

      <xsl:attribute name="metodoDePago">
        <xsl:value-of select="$metodoDePago"/>
      </xsl:attribute>

      <xsl:attribute name="formaDePago">
        <xsl:value-of select="$formaDePago"/>
      </xsl:attribute>

      <xsl:attribute name="Exportacion">
        <xsl:value-of select="'01'"/>
      </xsl:attribute>

      <!-- Nodo Comprobante relacionados  -->
      <xsl:if test="$TipoRelacion and $uuidRelacionado != ''">
        <CfdiRelacionados>
          <xsl:attribute name="TipoRelacion">
            <xsl:value-of select="$TipoRelacion"/>
          </xsl:attribute>

          <CfdiRelacionado>
            <xsl:attribute name="UUID">
              <xsl:value-of select="$uuidRelacionado"/>
            </xsl:attribute>
          </CfdiRelacionado>

        </CfdiRelacionados>
      </xsl:if>

      <!-- Receptor  -->
      <Receptor>

        <xsl:variable name="rawValue"
          select="translate(//w:OrganizationAddress/w:RegistrationNumberCollection/w:RegistrationNumber[w:CountryOfIssue/w:Code = $paisCode]/w:Value, '- ','')"/>
        <xsl:variable name="NumRegIdTrib">
          <xsl:choose>
            <xsl:when test="number($rawValue) = number($rawValue) and ($pais = 'USA' or $pais = 'CAN')">
              <xsl:value-of select="format-number(number(substring($rawValue,1,9)), '000000000')"/>
            </xsl:when>
            <xsl:when test="($pais != 'USA' and $pais != 'CAN') and //w:OrganizationAddress/w:RegistrationNumberCollection/w:RegistrationNumber[w:CountryOfIssue/w:Code = $paisCode]/w:Value">
              <xsl:value-of select="//w:OrganizationAddress/w:RegistrationNumberCollection/w:RegistrationNumber[w:CountryOfIssue/w:Code = $paisCode]/w:Value"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="'000000000'"/>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:variable>
        
        <xsl:attribute name="rfc">
          <xsl:value-of select="$rfc"/>
        </xsl:attribute>

        <!--translate nombre!-->
        <xsl:variable name="transformNombre"
          select="translate(//w:TransactionInfo/w:OrganizationAddress/w:CompanyName, 'abcdefghijklmnñopqrstuvwxyzáéíóú_', 'ABCDEFGHIJKLMNÑOPQRSTUVWXYZÁÉÍÓÚ')"/>

        <xsl:variable name="transformNombre"
          select="translate(normalize-space($transformNombre), 'ÁÉÍÓÚÜ', 'AEIOUU')"/>

        <xsl:variable name="transformNombre">
          <xsl:choose>
            <xsl:when test="$pais != 'MEX'">
              <xsl:value-of select="$transformNombre"/>
            </xsl:when>
            <xsl:when test="contains($transformNombre, ' SA DE CV')">
              <xsl:value-of select="substring-before($transformNombre, ' SA DE CV')"/>
            </xsl:when>
            <xsl:when test="contains($transformNombre, ' SA DE CV A EN P')">
              <xsl:value-of select="substring-before($transformNombre, ' SA DE CV A EN P')"/>
            </xsl:when>
            <xsl:when test="contains($transformNombre, ' SDE RLDE CV')">
              <xsl:value-of select="substring-before($transformNombre, ' SDE RLDE CV')"/>
            </xsl:when>
            <xsl:when test="contains($transformNombre, ' S DE RL DE CV Y/O SRL DE CV')">
              <xsl:value-of
                select="substring-before($transformNombre, ' S DE RL DE CV Y/O SRL DE CV')"/>
            </xsl:when>
            <xsl:when test="contains($transformNombre, 'S DE RL DE CV')">
              <xsl:value-of select="substring-before($transformNombre, ' S DE RL DE CV')"/>
            </xsl:when>
            <xsl:when test="contains($transformNombre, 'SAPI DE CV')">
              <xsl:value-of select="substring-before($transformNombre, ' SAPI DE CV')"/>
            </xsl:when>
            <xsl:when test="contains($transformNombre, ' SRL')">
              <xsl:value-of select="substring-before($transformNombre, ' SRL')"/>
            </xsl:when>
            <xsl:when test="contains($transformNombre, ' S EN CS')">
              <xsl:value-of select="substring-before($transformNombre, ' S EN CS')"/>
            </xsl:when>
            <xsl:when test="contains($transformNombre, ' SPR DE RL')">
              <xsl:value-of select="substring-before($transformNombre, ' SPR DE RL')"/>
            </xsl:when>
            <xsl:when test="contains($transformNombre, ' SC ')">
              <xsl:value-of select="substring-before($transformNombre, ' SC')"/>
            </xsl:when>
            <xsl:when test="contains($transformNombre, ' S C')">
              <xsl:value-of select="substring-before($transformNombre, ' S C')"/>
            </xsl:when>
            <xsl:when test="contains($transformNombre, ' AC ')">
              <xsl:value-of select="substring-before($transformNombre, ' AC')"/>
            </xsl:when>
            <xsl:when test="contains($transformNombre, ' SAS DE CV')">
              <xsl:value-of select="substring-before($transformNombre, ' SAS DE CV')"/>
            </xsl:when>
            <xsl:when test="contains($transformNombre, ' SA ')">
              <xsl:value-of select="substring-before($transformNombre, ' SA ')"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="$transformNombre"/>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:variable>
        <!--translate-->

        <!--EXCEPCIONES-->
        <xsl:variable name="transformNombre">
          <xsl:choose>
            <xsl:when test="contains($rfc, 'AAF920730F81')">
              <xsl:value-of select="'AAACESA, ALMACENES FISCALIZADOS, S.A. DE C.V.'"/>
            </xsl:when>
            <xsl:when test="contains($rfc, 'CEF111109I74')">
              <xsl:value-of select="'CIA. EXAMINADORA DE FORMALIDADES'"/>
            </xsl:when>
            <xsl:when test="contains($rfc, 'CCO820507BV4')">
              <xsl:value-of select="'CONSERVAS LA COSTEÑA'"/>
            </xsl:when>
            <xsl:when test="contains($rfc, 'CCO820507BV4')">
              <xsl:value-of select="'TEQUILAS DEL SEÑOR'"/>
            </xsl:when>
            <xsl:when test="contains($rfc, 'TAU2105114C2')">
              <xsl:value-of select="'TE.MEX AUTOMOTIVE'"/>
            </xsl:when>
            <xsl:when test="contains($rfc, 'IDE0607196N2')">
              <xsl:value-of select="'I.D.E.A.S'"/>
            </xsl:when>
            <xsl:when test="contains($rfc, 'CMF05122128A')">
              <xsl:value-of select="'CONSTRUCCION, MANTENIMIENTO, FERROVIAS Y SUBSISTEMAS'"/>
            </xsl:when>
            <xsl:when test="contains($rfc, 'SSP160727QY9')">
              <xsl:value-of select="'SSI SCHAEFER PACKAGING'"/>
            </xsl:when>
            <xsl:when test="contains($rfc, 'CMI230912HB3')">
              <xsl:value-of select="'COMERCIALIZADORA MINDUR'"/>
            </xsl:when>
            <xsl:when test="contains($rfc, 'DLC100224LR1')">
              <xsl:value-of select="'NSK BEARINGS MANUFACTURING, MEXICO'"/>
            </xsl:when>
            <xsl:when test="contains($rfc, 'R&amp;S020816EY8')">
              <xsl:value-of select="'ROHDE &amp; SCHWARZ DE MEXICO'"/>
            </xsl:when>
            <xsl:when test="contains($rfc, 'AAE8704011C0')">
              <xsl:value-of select="'ABASTECEDORA DE ARTICULOS ESCOLARES XALOSTOC'"/>
            </xsl:when>
            <xsl:when test="contains($rfc, 'RAS101026PH7')">
              <xsl:value-of select="'ROHDE &amp; SCHWARZ REGIONAL HEADQUARTER LATIN AMERICA'"/>
            </xsl:when>
            <xsl:when test="contains($rfc, 'MWM0502218I9')">
              <xsl:value-of select="'PRESSENSYSTEME SCHULER-MEXIKO'"/>
            </xsl:when>
            <xsl:when test="contains($rfc, 'DSA160121AU7')">
              <xsl:value-of select="'DELANO SCHMIDT &amp; KRANZ'"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="$transformNombre"/>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:variable>

        <xsl:attribute name="Nombre">
          <xsl:value-of select="$transformNombre"/>
        </xsl:attribute>

        <xsl:if test="$rfc = 'K&amp;S041130S83'">
          <xsl:attribute name="Nombre">
            <xsl:value-of select="'KROMBERG &amp; SCHUBERT MEXICO LE'"/>
          </xsl:attribute>
        </xsl:if>

        <xsl:if test="$rfc = 'CAS070910I3A'">
          <xsl:attribute name="Nombre">
            <xsl:value-of select="'DEL CORONA &amp; SCARDIGLI MEXICO'"/>
          </xsl:attribute>
        </xsl:if>

        <xsl:if test="//w:TransactionInfo/w:OrganizationAddress/w:OrganizationCode">
          <xsl:attribute name="identificador">
            <xsl:value-of select="//w:TransactionInfo/w:OrganizationAddress/w:OrganizationCode"/>
          </xsl:attribute>
        </xsl:if>

        <xsl:attribute name="UsoCFDI">
          <xsl:choose>
            <xsl:when test="$pais = 'MEX' and $tipoDeComprobante = 'I'">
              <xsl:value-of
                select="//w:OrganizationAddress/w:RegistrationNumberCollection/w:RegistrationNumber[w:Type/w:Code = 'CFD'][w:CountryOfIssue/w:Code = 'MX']/w:Value"
              />
            </xsl:when>
            <xsl:when test="$pais = 'MEX' and $tipoDeComprobante = 'E'">
              <xsl:value-of select="'G02'"/>
            </xsl:when>
            <xsl:when test="$pais != 'MEX'">
              <xsl:value-of select="'S01'"/>
            </xsl:when>
          </xsl:choose>
        </xsl:attribute>

        <xsl:attribute name="RegimenFiscalReceptor">
          <xsl:value-of select="$RegimenFiscalReceptor"/>
        </xsl:attribute>

        <xsl:attribute name="DomicilioFiscalReceptor">
          <xsl:choose>
            <xsl:when test="$pais = 'MEX' and $rfc != 'XAXX010101000'">
              <xsl:value-of select="//w:TransactionInfo/w:OrganizationAddress/w:Postcode"/>
            </xsl:when>
            <xsl:when test="$rfc = 'XEXX010101000'">
              <xsl:value-of select="//w:TransactionInfo/w:BranchAddress/w:Postcode"/>
            </xsl:when>
          </xsl:choose>
        </xsl:attribute>

        <xsl:if test="$pais != 'MEX'">
          <xsl:attribute name="ResidenciaFiscal">
            <xsl:value-of select="$pais"/>
          </xsl:attribute>
          <xsl:attribute name="NumRegIdTrib">
            <xsl:value-of select="$NumRegIdTrib"/>
          </xsl:attribute>
        </xsl:if>

        <Domicilio>
          <xsl:if test="//w:TransactionInfo/w:OrganizationAddress/w:Address1">
            <xsl:attribute name="calle">
              <xsl:value-of
                select="concat(//w:TransactionInfo/w:OrganizationAddress/w:Address1, ' ', //w:TransactionInfo/w:OrganizationAddress/w:Address2)"
              />
            </xsl:attribute>
          </xsl:if>
          <xsl:if test="//w:TransactionInfo/w:OrganizationAddress/w:Postcode">
            <xsl:attribute name="codigoPostal">
              <xsl:value-of select="//w:TransactionInfo/w:OrganizationAddress/w:Postcode"/>
            </xsl:attribute>
          </xsl:if>

          <xsl:if test="//w:TransactionInfo/w:OrganizationAddress/w:State != ''">
            <xsl:attribute name="estado">
              <xsl:value-of select="//w:TransactionInfo/w:OrganizationAddress/w:State"/>
            </xsl:attribute>
          </xsl:if>

          <xsl:if test="//w:TransactionInfo/w:OrganizationAddress/w:City">
            <xsl:attribute name="municipio">
              <xsl:value-of select="//w:TransactionInfo/w:OrganizationAddress/w:City"/>
            </xsl:attribute>
          </xsl:if>

          <xsl:attribute name="pais">
            <xsl:value-of select="$pais"/>
          </xsl:attribute>
        </Domicilio>

        <EnvioEmail>
          <xsl:variable name="Shipment" select="//w:Job/w:Key"/>

          <xsl:attribute name="email">
            <xsl:value-of select="'facturas.mexico@rohlig.com'"/>
          </xsl:attribute>

          <xsl:attribute name="asunto">
            <xsl:value-of
              select="concat($serie, '-', $folio, ' - Shipment: ', $Shipment, ' - Cliente: ', $transformNombre)"
            />
          </xsl:attribute>

          <xsl:attribute name="adjuntar">
            <xsl:value-of select="'AMBOS'"/>
          </xsl:attribute>

          <xsl:attribute name="mensaje">
            <xsl:value-of select="'Se adjunta CFDi de Rohlig México.'"/>
          </xsl:attribute>

        </EnvioEmail>
      </Receptor>

      <!-- Conceptos  -->
      <Conceptos>

        <xsl:for-each select="//w:PostingJournalCollection/w:PostingJournal">

          <xsl:sort select="w:Job/w:Key" order="descending"/>

          <xsl:variable name="ChargeCodeCode">
            <xsl:choose>
              <xsl:when test="$FacturaAdministrativa = 'true'">
                <xsl:value-of select="w:GLAccount/w:AccountCode"/>
              </xsl:when>
              <xsl:otherwise>
                <xsl:value-of select="w:ChargeCode/w:Code"/>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:variable>

          <xsl:variable name="ChargeTypeCode">
            <xsl:value-of select="w:ChargeCode/w:ChargeType/w:Code"/>
          </xsl:variable>

          <xsl:if
            test="$ChargeCodeCode != 'DTA' and $ChargeCodeCode != 'PREVAL' and $ChargeTypeCode != 'CMT'">

            <xsl:variable name="noIdentificacion">
              <xsl:choose>
                <xsl:when test="$rfc = 'RSL1304114Q7'">
                  <xsl:value-of
                    select="substring(w:Description, string-length(w:Description) - 11, string-length(w:Description))"
                  />
                </xsl:when>
                <xsl:otherwise>
                  <xsl:value-of select="$ChargeCodeCode"/>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:variable>

            <xsl:variable name="descripcion">
              <xsl:choose>
                <xsl:when test="$rfc = 'RSL1304114Q7'">
                  <xsl:value-of
                    select="substring(w:Description, 0, string-length(w:Description) - 11)"/>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:value-of select="translate(w:Description, '|', '')"/>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:variable>



            <Concepto>
              <!-- Variable para el Importe con Escenario especial-->

              <xsl:variable name="Importe">
                <xsl:choose>
                  <xsl:when test="w:OSAmount &lt; 0">
                    <xsl:value-of select="format-number(w:OSAmount * -1, '#.00')"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="format-number(w:OSAmount, '0.00')"/>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:variable>

              <xsl:variable name="ImporteImpuesto">
                <xsl:choose>
                  <xsl:when test="w:OSGSTVATAmount &lt; 0">
                    <xsl:value-of select="format-number(w:OSGSTVATAmount * -1, '#.00')"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="format-number(w:OSGSTVATAmount, '0.00')"/>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:variable>

              <xsl:variable name="Descuento">
                <xsl:choose>
                  <xsl:when test="w:OSAmount &lt; 0 and $tipoDeComprobante = 'I'">
                    <xsl:value-of select="w:OSAmount * -1"/>
                  </xsl:when>
                </xsl:choose>
              </xsl:variable>

              <xsl:variable name="departamentoName" select="w:Department/w:Name"/>

              <xsl:variable name="departamentoCode" select="w:Department/w:Code"/>

              <xsl:attribute name="ClaveProdServ">
                <xsl:value-of select="w:GovernmentReportingChargeCode"/>
              </xsl:attribute>

              <xsl:attribute name="NoIdentificacion">
                <xsl:value-of select="$noIdentificacion"/>
              </xsl:attribute>

              <xsl:attribute name="unidad">
                <xsl:value-of select="'No Aplica'"/>
              </xsl:attribute>

              <xsl:attribute name="ClaveUnidad">
                <xsl:value-of select="'E48'"/>
              </xsl:attribute>

              <xsl:attribute name="Cantidad">
                <xsl:value-of select="'1'"/>
              </xsl:attribute>

              <xsl:attribute name="categoria">
                <xsl:value-of
                  select="concat($departamentoCode, ' - ', $departamentoName, ' - ', $ChargeCodeCode)"
                />
              </xsl:attribute>

              <xsl:attribute name="Descripcion">
                <xsl:value-of select="$descripcion"/>
              </xsl:attribute>

              <xsl:if test="number($Descuento) &gt; 0">
                <xsl:attribute name="Descuento">
                  <xsl:value-of select="format-number($Descuento, '0.00')"/>
                </xsl:attribute>
              </xsl:if>

              <xsl:attribute name="ValorUnitario">
                <xsl:value-of select="format-number($Importe, '0.00')"/>
              </xsl:attribute>

              <xsl:attribute name="Importe">
                <xsl:value-of select="format-number($Importe, '0.00')"/>
              </xsl:attribute>

              <xsl:variable name="TaxRate" select="w:VATTaxID/w:TaxRate"/>

              <xsl:variable name="TaxCode" select="w:VATTaxID/w:TaxCode"/>

              <xsl:variable name="absImpTrans">
                <xsl:choose>
                  <xsl:when test="w:OSGSTVATAmount &lt; 0">
                    <xsl:value-of select="w:OSGSTVATAmount * -1"/>
                  </xsl:when>
                  <xsl:when test="not(w:OSGSTVATAmount)">
                    <xsl:value-of select="0"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="w:OSGSTVATAmount"/>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:variable>

              <xsl:variable name="absImpRet">
                <xsl:choose>
                  <xsl:when test="w:OSExtraVATAmount &lt; 0">
                    <xsl:value-of select="w:OSExtraVATAmount * -1"/>
                  </xsl:when>
                  <xsl:when test="not(w:OSExtraVATAmount)">
                    <xsl:value-of select="0"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="w:OSExtraVATAmount"/>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:variable>

              <xsl:variable name="ImporteTransferido">
                <xsl:choose>
                  <xsl:when test="$absImpRet">
                    <xsl:value-of select="$absImpTrans + $absImpRet"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="$absImpTrans"/>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:variable>

              <xsl:variable name="job" select="w:Job/w:Key"/>

              <xsl:variable name="house">
                <xsl:choose>
                  <xsl:when
                    test="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment/w:SubShipmentCollection/w:SubShipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:WayBillNumber">
                    <xsl:value-of
                      select="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment/w:SubShipmentCollection/w:SubShipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:WayBillNumber"
                    />
                  </xsl:when>
                  <xsl:when
                    test="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:WayBillNumber">
                    <xsl:value-of
                      select="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:WayBillNumber"
                    />
                  </xsl:when>
                </xsl:choose>
              </xsl:variable>

              <xsl:variable name="origin"
                select="concat(//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:PortOfLoading/w:Code, ' / ', //w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:PortOfLoading/w:Name)"/>

              <xsl:variable name="destination"
                select="concat(//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:PortOfDischarge/w:Code, ' / ', //w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:PortOfDischarge/w:Name)"/>

              <xsl:variable name="consignor">
                <xsl:choose>
                  <xsl:when
                    test="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment/w:SubShipmentCollection/w:SubShipment/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsignorDocumentaryAddress']/w:CompanyName">
                    <xsl:value-of
                      select="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment/w:SubShipmentCollection/w:SubShipment/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsignorDocumentaryAddress']/w:CompanyName"
                    />
                  </xsl:when>
                  <xsl:when
                    test="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsignorDocumentaryAddress']/w:CompanyName">
                    <xsl:value-of
                      select="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsignorDocumentaryAddress']/w:CompanyName"
                    />
                  </xsl:when>
                </xsl:choose>
              </xsl:variable>

              <xsl:variable name="consignee">
                <xsl:choose>
                  <xsl:when
                    test="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment/w:SubShipmentCollection/w:SubShipment/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsigneeDocumentaryAddress']/w:CompanyName">
                    <xsl:value-of
                      select="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment/w:SubShipmentCollection/w:SubShipment/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsigneeDocumentaryAddress']/w:CompanyName"
                    />
                  </xsl:when>
                  <xsl:when
                    test="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsigneeDocumentaryAddress']/w:CompanyName">
                    <xsl:value-of
                      select="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsigneeDocumentaryAddress']/w:CompanyName"
                    />
                  </xsl:when>
                </xsl:choose>
              </xsl:variable>

              <xsl:variable name="containers">
                <xsl:for-each
                  select="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:ContainerCollection/w:Container">
                  <xsl:value-of select="concat(w:ContainerNumber, ', ')"/>
                </xsl:for-each>
              </xsl:variable>

              <xsl:variable name="GoodsDescription"
                select="//w:ShipmentCollection/w:Shipment/w:SubShipmentCollection/w:SubShipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:GoodsDescription"/>

              <xsl:variable name="OrderRef">
                <xsl:for-each
                  select="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]//w:LocalProcessing/w:OrderNumberCollection/w:OrderNumber">
                  <xsl:value-of select="concat(w:OrderReference, ', ')"/>
                </xsl:for-each>
              </xsl:variable>


              <xsl:variable name="TaxCode">
                <xsl:value-of select="w:VATTaxID/w:TaxCode"/>
              </xsl:variable>

              <xsl:attribute name="ObjetoImp">
                <xsl:choose>
                  <xsl:when test="$TaxCode = 'EXEMPT'">
                    <xsl:value-of select="'04'"/>
                  </xsl:when>
                  <xsl:when test="$TaxCode = 'NOTREPORT'">
                    <xsl:value-of select="'04'"/>
                  </xsl:when>
                  <xsl:when test="$TaxCode = 'FREEIVA'">
                    <xsl:value-of select="'02'"/>
                  </xsl:when>
                  <xsl:when test="$TaxCode = 'IVA'">
                    <xsl:value-of select="'02'"/>
                  </xsl:when>
                  <xsl:when test="$TaxCode = 'IVARET'">
                    <xsl:value-of select="'02'"/>
                  </xsl:when>
                  <xsl:when test="$TaxCode = 'IVA4'">
                    <xsl:value-of select="'02'"/>
                  </xsl:when>
                </xsl:choose>
              </xsl:attribute>

              <xsl:variable name="valorBaseIVA" select="$Importe"/>
              <xsl:variable name="valorImporteIVA" select="$ImporteImpuesto"/>

              <xsl:variable name="valorBaseIVA4" select="round($Importe div 4 * 100) div 100"/>
              <xsl:variable name="valorImporteIVA4" select="$ImporteImpuesto"/>

              <xsl:variable name="valorBaseFREEIVA4"
                select="round($Importe div 4 * 3 * 100) div 100"/>
              <xsl:variable name="valorImporteFREEIVA4" select="0"/>

              <xsl:variable name="valorBaseFREEIVA" select="$Importe"/>
              <xsl:variable name="valorImporteFREEIVA" select="0"/>

              <xsl:variable name="valorBaseIVARET" select="$Importe"/>
              <xsl:variable name="valorImporteIVARET" select="$ImporteImpuesto"/>

              <xsl:if test="$TaxCode != 'EXEMPT' and $TaxCode != 'NOTREPORT'">
                <Impuestos>
                  <Traslados>
                    <xsl:choose>

                      <xsl:when test="$TaxCode = 'IVA'">
                        <Traslado>
                          <xsl:attribute name="Impuesto">
                            <xsl:value-of select="'002'"/>
                          </xsl:attribute>
                          <xsl:attribute name="Base">
                            <xsl:value-of select="format-number($Importe, '0.00')"/>
                          </xsl:attribute>
                          <xsl:attribute name="TipoFactor">
                            <xsl:value-of select="'Tasa'"/>
                          </xsl:attribute>
                          <xsl:attribute name="TasaOCuota">
                            <xsl:value-of select="'0.160000'"/>
                          </xsl:attribute>
                          <xsl:attribute name="Importe">
                            <xsl:value-of select="format-number($valorImporteIVA, '0.00')"/>
                          </xsl:attribute>
                        </Traslado>
                      </xsl:when>

                      <xsl:when test="$TaxCode = 'IVA4'">
                        <Traslado>
                          <xsl:attribute name="Impuesto">
                            <xsl:value-of select="'002'"/>
                          </xsl:attribute>
                          <xsl:attribute name="Base">
                            <xsl:value-of select="format-number($valorBaseIVA4, '0.00')"/>
                          </xsl:attribute>
                          <xsl:attribute name="TipoFactor">
                            <xsl:value-of select="'Tasa'"/>
                          </xsl:attribute>
                          <xsl:attribute name="TasaOCuota">
                            <xsl:value-of select="'0.160000'"/>
                          </xsl:attribute>
                          <xsl:attribute name="Importe">
                            <xsl:value-of select="format-number($valorImporteIVA4, '0.00')"/>
                          </xsl:attribute>
                        </Traslado>

                        <Traslado>
                          <xsl:attribute name="Impuesto">
                            <xsl:value-of select="'002'"/>
                          </xsl:attribute>
                          <xsl:attribute name="Base">
                            <xsl:value-of select="format-number($valorBaseFREEIVA4, '0.00')"/>
                          </xsl:attribute>
                          <xsl:attribute name="TipoFactor">
                            <xsl:value-of select="'Tasa'"/>
                          </xsl:attribute>
                          <xsl:attribute name="TasaOCuota">
                            <xsl:value-of select="'0.000000'"/>
                          </xsl:attribute>
                          <xsl:attribute name="Importe">
                            <xsl:value-of select="format-number($valorImporteFREEIVA4, '0.00')"/>
                          </xsl:attribute>
                        </Traslado>

                      </xsl:when>

                      <xsl:when test="$TaxCode = 'FREEIVA'">
                        <Traslado>
                          <xsl:attribute name="Impuesto">
                            <xsl:value-of select="'002'"/>
                          </xsl:attribute>
                          <xsl:attribute name="Base">
                            <xsl:value-of select="format-number($valorBaseFREEIVA, '0.00')"/>
                          </xsl:attribute>
                          <xsl:attribute name="TipoFactor">
                            <xsl:value-of select="'Tasa'"/>
                          </xsl:attribute>
                          <xsl:attribute name="TasaOCuota">
                            <xsl:value-of select="'0.000000'"/>
                          </xsl:attribute>
                          <xsl:attribute name="Importe">
                            <xsl:value-of select="format-number($valorImporteFREEIVA, '0.00')"/>
                          </xsl:attribute>
                        </Traslado>
                      </xsl:when>

                      <xsl:when test="$TaxCode = 'IVARET'">
                        <Traslado>
                          <xsl:attribute name="Impuesto">
                            <xsl:value-of select="'002'"/>
                          </xsl:attribute>
                          <xsl:attribute name="Base">
                            <xsl:value-of select="format-number($valorBaseIVARET, '0.00')"/>
                          </xsl:attribute>
                          <xsl:attribute name="TipoFactor">
                            <xsl:value-of select="'Tasa'"/>
                          </xsl:attribute>
                          <xsl:attribute name="TasaOCuota">
                            <xsl:value-of select="'0.160000'"/>
                          </xsl:attribute>
                          <xsl:attribute name="Importe">
                            <xsl:value-of select="format-number($valorImporteIVARET, '0.00')"/>
                          </xsl:attribute>
                        </Traslado>
                      </xsl:when>

                    </xsl:choose>
                  </Traslados>

                  <!-- Impuestos Retenciones -->
                  <xsl:if test="$TaxCode = 'IVARET'">
                    <Retenciones>
                      <Retencion>
                        <xsl:attribute name="Impuesto">
                          <xsl:value-of select="'002'"/>
                        </xsl:attribute>
                        <xsl:attribute name="Base">
                          <xsl:value-of select="format-number($valorBaseIVARET, '0.00')"/>
                        </xsl:attribute>
                        <xsl:attribute name="TipoFactor">
                          <xsl:value-of select="'Tasa'"/>
                        </xsl:attribute>
                        <xsl:attribute name="TasaOCuota">
                          <xsl:value-of select="'0.040000'"/>
                        </xsl:attribute>
                        <xsl:attribute name="Importe">
                          <xsl:value-of select="format-number($valorImporteIVARET * 0.04, '0.00')"/>
                        </xsl:attribute>
                      </Retencion>
                    </Retenciones>
                  </xsl:if>
                </Impuestos>
              </xsl:if>

              <!--Información Adicional-->

              <InformacionAdicional>
                <xsl:element name="impuesto">
                  <xsl:value-of select="$TaxCode"/>
                </xsl:element>

                <xsl:element name="ClaveProdServ">
                  <xsl:value-of select="w:GovernmentReportingChargeCode"/>
                </xsl:element>

                <xsl:element name="ClaveUnidad">
                  <xsl:value-of select="'E48'"/>
                </xsl:element>

                <xsl:element name="Cantidad">
                  <xsl:value-of select="'1'"/>
                </xsl:element>

                <xsl:element name="categoria">
                  <xsl:value-of
                    select="concat($departamentoCode, ' - ', $departamentoName, ' - ', $ChargeCodeCode)"
                  />
                </xsl:element>

                <xsl:element name="Descripcion">
                  <xsl:value-of select="translate(w:Description, '|', '')"/>
                </xsl:element>

                <xsl:element name="ValorUnitario">
                  <xsl:value-of select="format-number($Importe, '#,##0.00')"/>
                </xsl:element>

                <xsl:element name="Importe">
                  <xsl:value-of select="format-number($Importe, '#,##0.00')"/>
                </xsl:element>

                <xsl:element name="Base">
                  <xsl:choose>
                    <xsl:when test="$TaxCode = 'IVA4'">
                      <xsl:value-of select="format-number($Importe div 4, '#,##0.00')"/>
                    </xsl:when>
                    <xsl:when test="$TaxCode = 'IVA'">
                      <xsl:value-of select="format-number($Importe, '#,##0.00')"/>
                    </xsl:when>
                    <xsl:when test="$TaxCode = 'IVARET'">
                      <xsl:value-of select="format-number($Importe, '#,##0.00')"/>
                    </xsl:when>
                    <xsl:when test="$TaxCode = 'FREEIVA'">
                      <xsl:value-of select="format-number($Importe, '#,##0.00')"/>
                    </xsl:when>
                    <xsl:when test="$TaxCode = 'EXEMPT'">
                      <xsl:value-of select="format-number($Importe, '#,##0.00')"/>
                    </xsl:when>
                  </xsl:choose>
                </xsl:element>

                <xsl:element name="job">
                  <xsl:value-of select="w:Job/w:Key"/>
                </xsl:element>
                <xsl:element name="house">
                  <xsl:value-of select="$house"/>
                </xsl:element>
                <xsl:element name="origin">
                  <xsl:value-of select="$origin"/>
                </xsl:element>
                <xsl:element name="destination">
                  <xsl:value-of select="$destination"/>
                </xsl:element>
                <xsl:element name="consignor">
                  <xsl:value-of select="$consignor"/>
                </xsl:element>
                <xsl:element name="consignee">
                  <xsl:value-of select="$consignee"/>
                </xsl:element>
                <xsl:element name="tipoImpuesto">
                  <xsl:choose>
                    <xsl:when test="$TaxCode = 'IVA4'">
                      <xsl:value-of select="'IVA 16% al 25%'"/>
                    </xsl:when>
                    <xsl:when test="$TaxCode = 'IVA'">
                      <xsl:value-of select="'IVA 16%'"/>
                    </xsl:when>
                    <xsl:when test="$TaxCode = 'IVARET'">
                      <xsl:value-of select="'IVA 16% - RET 4%'"/>
                    </xsl:when>
                    <xsl:when test="$TaxCode = 'FREEIVA'">
                      <xsl:value-of select="'TASA 0%'"/>
                    </xsl:when>
                    <xsl:when test="$TaxCode = 'EXEMPT'">
                      <xsl:value-of select="'EXENTO'"/>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="$TaxCode"/>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:element>
                <xsl:element name="ObjetoImp">
                  <xsl:choose>
                    <xsl:when test="$TaxCode = 'EXEMPT'">
                      <xsl:value-of select="'04'"/>
                    </xsl:when>
                    <xsl:when test="$TaxCode = 'NOTREPORT'">
                      <xsl:value-of select="'04'"/>
                    </xsl:when>
                    <xsl:when test="$TaxCode = 'FREEIVA'">
                      <xsl:value-of select="'02'"/>
                    </xsl:when>
                    <xsl:when test="$TaxCode = 'IVA'">
                      <xsl:value-of select="'02'"/>
                    </xsl:when>
                    <xsl:when test="$TaxCode = 'IVARET'">
                      <xsl:value-of select="'02'"/>
                    </xsl:when>
                    <xsl:when test="$TaxCode = 'IVA4'">
                      <xsl:value-of select="'02'"/>
                    </xsl:when>
                  </xsl:choose>
                </xsl:element>
                <xsl:element name="importeImpuesto">
                  <xsl:value-of select="format-number($ImporteTransferido, '#,##0.00')"/>
                </xsl:element>
                <xsl:element name="importeTotal">
                  <xsl:value-of select="format-number($Importe + $ImporteTransferido, '#,##0.00')"/>
                </xsl:element>
                <xsl:element name="containers">
                  <xsl:value-of select="substring($containers, 0, string-length($containers) - 1)"/>
                </xsl:element>
                <xsl:element name="goodsDescription">
                  <xsl:value-of select="$GoodsDescription"/>
                </xsl:element>
                <xsl:element name="OrderRef">
                  <xsl:value-of select="substring($OrderRef, 0, string-length($OrderRef) - 1)"/>
                </xsl:element>
              </InformacionAdicional>
            </Concepto>

          </xsl:if>
        </xsl:for-each>
      </Conceptos>

      <xsl:variable name="familiaImpuestos">
        <xsl:for-each select="//w:PostingJournalCollection/w:PostingJournal">

          <xsl:variable name="job" select="w:Job/w:Key"/>

          <xsl:variable name="origin"
            select="concat(//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:PortOfLoading/w:Code, ' / ', //w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:PortOfLoading/w:Name)"/>

          <xsl:variable name="TaxCode" select="w:VATTaxID/w:TaxCode"/>

          <xsl:value-of select="concat('-', $TaxCode)"/>
        </xsl:for-each>
      </xsl:variable>

      <!-- Impuestos  -->
      <xsl:if
        test="contains($familiaImpuestos, '-IVA') or contains($familiaImpuestos, '-FREEIVA') or contains($familiaImpuestos, '-IVARET') or contains($familiaImpuestos, '4')">
        <Impuestos>
          <xsl:variable name="pathImp" select="
              //w:PostingJournalCollection/w:PostingJournal[
              not(w:ChargeCode/w:Code)
              or
              (w:ChargeCode/w:Code != 'DTA' and w:ChargeCode/w:Code != 'PREVAL' and w:ChargeCode/w:Code != 'CMT')
              ]"/>
          <xsl:if test="number($IVASuma) >= 0">
            <xsl:attribute name="TotalImpuestosTrasladados">
              <xsl:value-of select="format-number($IVASuma, '0.00')"/>
            </xsl:attribute>
          </xsl:if>

          <xsl:if test="$IVARetenidoSuma > 0">
            <xsl:attribute name="TotalImpuestosRetenidos">
              <xsl:value-of select="format-number($IVARetenidoSuma, '0.00')"/>
            </xsl:attribute>
          </xsl:if>

          <xsl:if test="$IVARetenidoSuma > 0">
            <Retenciones>
              <Retencion>
                <xsl:attribute name="Impuesto">
                  <xsl:value-of select="'002'"/>
                </xsl:attribute>
                <xsl:attribute name="Importe">
                  <xsl:value-of select="format-number($IVARetenidoSuma, '0.00')"/>
                </xsl:attribute>
              </Retencion>
            </Retenciones>
          </xsl:if>

          <Traslados>
            <xsl:if test="$IVASuma > 0">
              <!-- IVA 16  -->
              <xsl:if
                test="contains($familiaImpuestos, '-IVA') or contains($familiaImpuestos, '-IVARET')">
                <xsl:variable name="BaseSumIVA">
                  <xsl:choose>
                    <xsl:when
                      test="number(//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVA']/w:OSAmount) &lt; 0">
                      <xsl:value-of
                        select="(sum(//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVA']/w:OSAmount)) * -1"
                      />
                    </xsl:when>
                    <xsl:when
                      test="//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVA']/w:OSAmount">
                      <xsl:value-of
                        select="(sum(//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVA']/w:OSAmount))"
                      />
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="0"/>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:variable>
                <xsl:variable name="BaseSumCAPIVA">
                  <xsl:choose>
                    <xsl:when
                      test="number(//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'CAPIVA']/w:OSAmount) &lt; 0">
                      <xsl:value-of
                        select="(sum(//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'CAPIVA']/w:OSAmount)) * -1"
                      />
                    </xsl:when>
                    <xsl:when
                      test="//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'CAPIVA']/w:OSAmount">
                      <xsl:value-of
                        select="(sum(//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'CAPIVA']/w:OSAmount))"
                      />
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="0"/>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:variable>
                <xsl:variable name="BaseSumIVARET">
                  <xsl:choose>
                    <xsl:when
                      test="number(//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVARET']/w:OSAmount) &lt; 0">
                      <xsl:value-of
                        select="number(sum(//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVARET']/w:OSAmount)) * -1"
                      />
                    </xsl:when>
                    <xsl:when
                      test="//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVARET']/w:OSAmount">
                      <xsl:value-of
                        select="number(sum(//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVARET']/w:OSAmount))"
                      />
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="0"/>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:variable>
                <xsl:variable name="BaseSumIVA4">
                  <xsl:choose>
                    <xsl:when
                      test="number(//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVA4']/w:OSAmount) &lt; 0">

                      <xsl:variable name="rounded-amounts">
                        <xsl:for-each
                          select="//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVA4']">
                          <amt>
                            <xsl:value-of select="round(w:OSAmount * -1 div 4 * 100) div 100"/>
                          </amt>
                        </xsl:for-each>
                      </xsl:variable>

                      <xsl:value-of select="sum(exsl:node-set($rounded-amounts)/amt)"/>

                    </xsl:when>

                    <xsl:when
                      test="//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVA4']/w:OSAmount">

                      <xsl:variable name="rounded-amounts">
                        <xsl:for-each
                          select="//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVA4']">
                          <amt>
                            <xsl:value-of select="round(w:OSAmount div 4 * 100) div 100"/>
                          </amt>
                        </xsl:for-each>
                      </xsl:variable>

                      <xsl:value-of select="sum(exsl:node-set($rounded-amounts)/amt)"/>

                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="0"/>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:variable>

                <Traslado>
                  <xsl:attribute name="Base">
                    <xsl:value-of
                      select="format-number(round(number($BaseSumIVARET + $BaseSumIVA + $BaseSumCAPIVA + $BaseSumIVA4) * 100) div 100, '0.00')"
                    />
                  </xsl:attribute>

                  <xsl:attribute name="Impuesto">
                    <xsl:value-of select="'002'"/>
                  </xsl:attribute>

                  <xsl:attribute name="Importe">
                    <xsl:value-of select="format-number($IVASuma, '0.00')"/>
                  </xsl:attribute>

                  <xsl:attribute name="TasaOCuota">
                    <xsl:value-of select="'0.160000'"/>
                  </xsl:attribute>

                  <xsl:attribute name="TipoFactor">
                    <xsl:value-of select="'Tasa'"/>
                  </xsl:attribute>

                </Traslado>
              </xsl:if>
            </xsl:if>

            <!-- IVA Free  -->
            <xsl:if test="contains($familiaImpuestos, '-FREE') or contains($familiaImpuestos, '4')">
              <xsl:variable name="BaseSumFREEIVA">
                <xsl:value-of
                  select="sum($pathImp[w:VATTaxID/w:TaxCode = 'FREEIVA']/w:OSAmount[not(. = 'NaN')]/abs(.))"
                />
              </xsl:variable>
              <xsl:variable name="BaseSumIVA4">
                <xsl:choose>
                  <xsl:when
                    test="number(//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVA4']/w:OSAmount) &lt; 0">

                    <xsl:variable name="rounded-amounts">
                      <xsl:for-each
                        select="//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVA4']">
                        <amt>
                          <xsl:value-of select="round(w:OSAmount * -1 div 4 * 3 * 100) div 100"/>
                        </amt>
                      </xsl:for-each>
                    </xsl:variable>

                    <xsl:value-of select="sum(exsl:node-set($rounded-amounts)/amt)"/>

                  </xsl:when>

                  <xsl:when
                    test="//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVA4']/w:OSAmount">

                    <xsl:variable name="rounded-amounts">
                      <xsl:for-each
                        select="//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVA4']">
                        <amt>
                          <xsl:value-of select="round(w:OSAmount div 4 * 3 * 100) div 100"/>
                        </amt>
                      </xsl:for-each>
                    </xsl:variable>

                    <xsl:value-of select="sum(exsl:node-set($rounded-amounts)/amt)"/>

                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="0"/>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:variable>

              <Traslado>
                <xsl:attribute name="Base">
                  <xsl:value-of
                    select="format-number(round(number($BaseSumFREEIVA + $BaseSumIVA4) * 100) div 100, '0.00')"
                  />
                </xsl:attribute>

                <xsl:attribute name="Impuesto">
                  <xsl:value-of select="'002'"/>
                </xsl:attribute>

                <xsl:attribute name="Importe">
                  <xsl:value-of select="'0.00'"/>
                </xsl:attribute>

                <xsl:attribute name="TasaOCuota">
                  <xsl:value-of select="'0.000000'"/>
                </xsl:attribute>

                <xsl:attribute name="TipoFactor">
                  <xsl:value-of select="'Tasa'"/>
                </xsl:attribute>
              </Traslado>
            </xsl:if>

          </Traslados>

        </Impuestos>
      </xsl:if>

      <!-- Addendas  -->
      <xsl:if test="$rfc = 'CMA811126AW9'">
        <Addenda>
          <mabe:Factura xmlns:mabe="http://recepcionfe.mabempresa.com/cfd/addenda/v1"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://recepcionfe.mabempresa.com/cfd/addenda/v1 http://recepcionfe.mabempresa.com/cfd/addenda/v1/mabev1.xsd"
            version="1.0">
            <xsl:attribute name="tipoDocumento">
              <xsl:choose>
                <xsl:when test="$tipoDeComprobante = 'I'">
                  <xsl:value-of select="'FACTURA'"/>
                </xsl:when>
                <xsl:when test="$tipoDeComprobante = 'E'">
                  <xsl:value-of select="'NOTA CREDITO'"/>
                </xsl:when>
              </xsl:choose>
            </xsl:attribute>

            <xsl:attribute name="folio">
              <xsl:value-of select="concat($serie, '-', $folio)"/>
            </xsl:attribute>

            <xsl:attribute name="fecha">
              <xsl:value-of
                select="substring-before(//w:TransactionInfo/w:DataContext/w:TriggerDate, 'T')"/>
            </xsl:attribute>

            <xsl:attribute name="ordenCompra">
              <xsl:value-of select="'NA'"/>
            </xsl:attribute>

            <xsl:attribute name="referencia1">
              <xsl:value-of select="'FLETE'"/>
            </xsl:attribute>

            <mabe:Moneda>

              <xsl:attribute name="tipoMoneda">
                <xsl:value-of select="$Moneda"/>
              </xsl:attribute>

              <xsl:if test="$Moneda != 'MXN'">
                <xsl:attribute name="tipoCambio">
                  <xsl:value-of select="$TipoCambio"/>
                </xsl:attribute>
              </xsl:if>

            </mabe:Moneda>

            <mabe:Proveedor>

              <xsl:attribute name="codigo">
                <xsl:value-of select="'3002268'"/>
              </xsl:attribute>

            </mabe:Proveedor>

            <mabe:Entrega plantaEntrega="D004"/>
            
            <mabe:Detalles>

              <xsl:for-each select="//w:PostingJournalCollection/w:PostingJournal">

                <xsl:sort select="w:Job/w:Key" order="descending"/>

                <xsl:variable name="ChargeCodeCode">
                  <xsl:value-of select="w:ChargeCode/w:Code"/>
                </xsl:variable>
                <xsl:variable name="ChargeTypeCode">
                  <xsl:value-of select="w:ChargeCode/w:ChargeType/w:Code"/>
                </xsl:variable>

                <xsl:if
                  test="$ChargeCodeCode != 'DTA' and $ChargeCodeCode != 'PREVAL' and $ChargeTypeCode != 'CMT'">

                  <mabe:Detalle>

                    <xsl:attribute name="noLineaArticulo">
                      <xsl:value-of select="position()"/>
                    </xsl:attribute>

                    <xsl:attribute name="codigoArticulo">
                      <xsl:value-of select="w:ChargeCode/w:Code"/>
                    </xsl:attribute>

                    <xsl:attribute name="descripcion">
                      <xsl:value-of select="w:Description"/>
                    </xsl:attribute>

                    <xsl:attribute name="unidad">
                      <xsl:value-of select="'SER'"/>
                    </xsl:attribute>

                    <xsl:attribute name="cantidad">
                      <xsl:value-of select="'1'"/>
                    </xsl:attribute>

                    <xsl:attribute name="precioSinIva">
                      <xsl:choose>
                        <xsl:when test="w:OSAmount &lt; 0">
                          <xsl:value-of select="format-number(w:OSAmount * -1, '#.00')"/>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="format-number(w:OSAmount, '0.00')"/>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:attribute>

                    <xsl:attribute name="precioConIva">
                      <xsl:choose>
                        <xsl:when test="w:OSAmount &lt; 0">
                          <xsl:value-of select="format-number(w:OSAmount * -1, '#.00')"/>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="format-number(w:OSAmount, '0.00')"/>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:attribute>

                    <xsl:attribute name="importeSinIva">
                      <xsl:choose>
                        <xsl:when test="w:OSTotalAmount &lt; 0">
                          <xsl:value-of select="format-number(w:OSTotalAmount * -1, '#.00')"/>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="format-number(w:OSTotalAmount, '0.00')"/>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:attribute>

                    <xsl:attribute name="importeConIva">
                      <xsl:choose>
                        <xsl:when test="w:OSTotalAmount &lt; 0">
                          <xsl:value-of select="format-number(w:OSTotalAmount * -1, '#.00')"/>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="format-number(w:OSTotalAmount, '0.00')"/>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:attribute>

                  </mabe:Detalle>

                </xsl:if>
              </xsl:for-each>

            </mabe:Detalles>

            <mabe:Subtotal>

              <xsl:attribute name="importe">
                <xsl:value-of select="$subtotal"/>
              </xsl:attribute>

            </mabe:Subtotal>

            <xsl:if
              test="contains($familiaImpuestos, '-IVA') or contains($familiaImpuestos, '-FREEIVA') or contains($familiaImpuestos, '-IVARET') or contains($familiaImpuestos, '4')">

              <xsl:variable name="pathImp"
                select="//w:PostingJournalCollection/w:PostingJournal[w:ChargeCode/w:Code != 'DTA' and w:ChargeCode/w:Code != 'PREVAL' and w:ChargeCode/w:Code != 'CMT']"/>

              <xsl:if test="$IVARetenidoSuma > 0">
                <mabe:Retenciones>
                  <Retencion>
                    <xsl:attribute name="Impuesto">
                      <xsl:value-of select="'002'"/>
                    </xsl:attribute>
                    <xsl:attribute name="Importe">
                      <xsl:value-of select="format-number($IVARetenidoSuma, '0.00')"/>
                    </xsl:attribute>
                  </Retencion>
                </mabe:Retenciones>
              </xsl:if>

              <mabe:Traslados>
                <xsl:if test="$IVASuma > 0">
                  <xsl:if
                    test="contains($familiaImpuestos, '-IVA') or contains($familiaImpuestos, '-IVARET')">
                    <xsl:variable name="BaseSumIVA">
                      <xsl:choose>
                        <xsl:when
                          test="number(//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVA']/w:OSAmount) &lt; 0">
                          <xsl:value-of
                            select="(sum(//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVA']/w:OSAmount)) * -1"
                          />
                        </xsl:when>
                        <xsl:when
                          test="//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVA']/w:OSAmount">
                          <xsl:value-of
                            select="(sum(//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVA']/w:OSAmount))"
                          />
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="0"/>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:variable name="BaseSumCAPIVA">
                      <xsl:choose>
                        <xsl:when
                          test="number(//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'CAPIVA']/w:OSAmount) &lt; 0">
                          <xsl:value-of
                            select="(sum(//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'CAPIVA']/w:OSAmount)) * -1"
                          />
                        </xsl:when>
                        <xsl:when
                          test="//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'CAPIVA']/w:OSAmount">
                          <xsl:value-of
                            select="(sum(//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'CAPIVA']/w:OSAmount))"
                          />
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="0"/>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:variable name="BaseSumIVARET">
                      <xsl:choose>
                        <xsl:when
                          test="number(//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVARET']/w:OSAmount) &lt; 0">
                          <xsl:value-of
                            select="number(sum(//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVARET']/w:OSAmount)) * -1"
                          />
                        </xsl:when>
                        <xsl:when
                          test="//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVARET']/w:OSAmount">
                          <xsl:value-of
                            select="number(sum(//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVARET']/w:OSAmount))"
                          />
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="0"/>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:variable>
                    <xsl:variable name="BaseSumIVA4">
                      <xsl:choose>
                        <xsl:when
                          test="number(//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVA4']/w:OSAmount) &lt; 0">

                          <xsl:variable name="rounded-amounts">
                            <xsl:for-each
                              select="//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVA4']">
                              <amt>
                                <xsl:value-of select="round(w:OSAmount * -1 div 4 * 100) div 100"/>
                              </amt>
                            </xsl:for-each>
                          </xsl:variable>

                          <xsl:value-of select="sum(exsl:node-set($rounded-amounts)/amt)"/>

                        </xsl:when>

                        <xsl:when
                          test="//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVA4']/w:OSAmount">

                          <xsl:variable name="rounded-amounts">
                            <xsl:for-each
                              select="//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVA4']">
                              <amt>
                                <xsl:value-of select="round(w:OSAmount div 4 * 100) div 100"/>
                              </amt>
                            </xsl:for-each>
                          </xsl:variable>

                          <xsl:value-of select="sum(exsl:node-set($rounded-amounts)/amt)"/>

                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="0"/>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:variable>

                    <Traslado>

                      <xsl:attribute name="tipo">
                        <xsl:value-of select="'IVA'"/>
                      </xsl:attribute>

                      <xsl:attribute name="tasa">
                        <xsl:value-of select="'16'"/>
                      </xsl:attribute>

                      <xsl:attribute name="importe">
                        <xsl:value-of select="format-number($IVASuma, '0.00')"/>
                      </xsl:attribute>

                    </Traslado>
                  </xsl:if>
                </xsl:if>

                <!-- use variables in the XPath expression -->
                <xsl:if
                  test="contains($familiaImpuestos, '-FREE') or contains($familiaImpuestos, '4')">
                  <xsl:variable name="BaseSumFREEIVA">
                    <xsl:value-of
                      select="sum($pathImp[w:VATTaxID/w:TaxCode = 'FREEIVA']/w:OSAmount[not(. = 'NaN')]/abs(.))"
                    />
                  </xsl:variable>
                  <xsl:variable name="BaseSumIVA4">
                    <xsl:choose>
                      <xsl:when
                        test="number(//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVA4']/w:OSAmount) &lt; 0">

                        <xsl:variable name="rounded-amounts">
                          <xsl:for-each
                            select="//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVA4']">
                            <amt>
                              <xsl:value-of select="round(w:OSAmount * -1 div 4 * 3 * 100) div 100"
                              />
                            </amt>
                          </xsl:for-each>
                        </xsl:variable>

                        <xsl:value-of select="sum(exsl:node-set($rounded-amounts)/amt)"/>

                      </xsl:when>

                      <xsl:when
                        test="//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVA4']/w:OSAmount">

                        <xsl:variable name="rounded-amounts">
                          <xsl:for-each
                            select="//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVA4']">
                            <amt>
                              <xsl:value-of select="round(w:OSAmount div 4 * 3 * 100) div 100"/>
                            </amt>
                          </xsl:for-each>
                        </xsl:variable>

                        <xsl:value-of select="sum(exsl:node-set($rounded-amounts)/amt)"/>

                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="0"/>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:variable>

                  <Traslado>

                    <xsl:attribute name="tipo">
                      <xsl:value-of select="'IVA'"/>
                    </xsl:attribute>

                    <xsl:attribute name="tasa">
                      <xsl:value-of select="'0.000000'"/>
                    </xsl:attribute>

                    <xsl:attribute name="importe">
                      <xsl:value-of select="'0.00'"/>
                    </xsl:attribute>

                  </Traslado>
                </xsl:if>

              </mabe:Traslados>

            </xsl:if>

            <mabe:Total>

              <xsl:attribute name="importe">
                <xsl:value-of select="$total"/>
              </xsl:attribute>

            </mabe:Total>
          </mabe:Factura>
        </Addenda>
      </xsl:if>

      <Especiales>
        <Header>
          <xsl:attribute name="Impuestos">
            <xsl:value-of select="$familiaImpuestos"/>
          </xsl:attribute>

          <xsl:variable name="job" select="//w:Job/w:Key"/>

          <xsl:attribute name="Job">
            <xsl:value-of select="$job"/>
          </xsl:attribute>

          <xsl:variable name="transportMode">
            <xsl:for-each
              select="//w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:TransportMode">
              <xsl:value-of select="concat(w:Description, ' ')"/>
            </xsl:for-each>
          </xsl:variable>

          <xsl:attribute name="transportMode">
            <xsl:value-of select="$transportMode"/>
          </xsl:attribute>

          <xsl:variable name="house">
            <xsl:choose>
              <xsl:when
                test="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:WayBillNumber">
                <xsl:value-of
                  select="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:WayBillNumber"
                />
              </xsl:when>
              <xsl:when
                test="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job][w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:WayBillNumber">
                <xsl:value-of
                  select="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job][w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:WayBillNumber"
                />
              </xsl:when>
            </xsl:choose>
          </xsl:variable>

          <xsl:attribute name="house">
            <xsl:value-of select="$house"/>
          </xsl:attribute>

          <xsl:attribute name="Origin">
            <xsl:value-of
              select="concat(//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:PortOfLoading/w:Code, ' / ', //w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:PortOfLoading/w:Name)"
            />
          </xsl:attribute>

          <xsl:attribute name="Destination">
            <xsl:value-of
              select="concat(//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:PortOfDischarge/w:Code, ' / ', //w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:PortOfDischarge/w:Name)"
            />
          </xsl:attribute>

          <xsl:variable name="shipper">
            <xsl:choose>
              <xsl:when
                test="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsignorDocumentaryAddress']/w:CompanyName">
                <xsl:value-of
                  select="concat(//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsignorDocumentaryAddress']/w:CompanyName, '~~', //w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsignorDocumentaryAddress']/w:Address1, '~~', //w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsignorDocumentaryAddress']/w:Address2, '~~', //w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsignorDocumentaryAddress']/w:City, ', ', //w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsignorDocumentaryAddress']/w:Country/w:Name)"
                />
              </xsl:when>
              <xsl:when
                test="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsignorDocumentaryAddress']/w:CompanyName">
                <xsl:value-of
                  select="concat(//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsignorDocumentaryAddress']/w:CompanyName, '~~', //w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsignorDocumentaryAddress']/w:Address1, '~~', //w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsignorDocumentaryAddress']/w:Address2, '~~', //w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsignorDocumentaryAddress']/w:City, ', ', //w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsignorDocumentaryAddress']/w:Country/w:Name)"
                />
              </xsl:when>
            </xsl:choose>
          </xsl:variable>

          <xsl:variable name="consignee">
            <xsl:choose>
              <xsl:when
                test="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsigneeDocumentaryAddress']/w:CompanyName">
                <xsl:value-of
                  select="concat(//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsigneeDocumentaryAddress']/w:CompanyName, '~~', //w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsigneeDocumentaryAddress']/w:Address1, '~~', //w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsigneeDocumentaryAddress']/w:Address2, '~~', //w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsigneeDocumentaryAddress']/w:City, ', ', //w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsigneeDocumentaryAddress']/w:Country/w:Name)"
                />
              </xsl:when>
              <xsl:when
                test="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsigneeDocumentaryAddress']/w:CompanyName">
                <xsl:value-of
                  select="concat(//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsigneeDocumentaryAddress']/w:CompanyName, '~~', //w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsigneeDocumentaryAddress']/w:Address1, '~~', //w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsigneeDocumentaryAddress']/w:Address2, '~~', //w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsigneeDocumentaryAddress']/w:City, ', ', //w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsigneeDocumentaryAddress']/w:Country/w:Name)"
                />
              </xsl:when>
            </xsl:choose>
          </xsl:variable>

          <xsl:if test="$shipper != ''">
            <xsl:attribute name="shipper">
              <xsl:value-of select="$shipper"/>
            </xsl:attribute>
          </xsl:if>

          <xsl:if test="$consignee != ''">
            <xsl:attribute name="consignee">
              <xsl:value-of select="$consignee"/>
            </xsl:attribute>
          </xsl:if>

          <xsl:variable name="carrier">
            <xsl:for-each
              select="//w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ShippingLineAddress']">
              <xsl:value-of select="concat(w:CompanyName, ', ')"/>
            </xsl:for-each>
          </xsl:variable>

          <xsl:attribute name="Carrier">
            <xsl:value-of select="$carrier"/>
          </xsl:attribute>

          <xsl:variable name="containers">
            <xsl:for-each
              select="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:ContainerCollection/w:Container">
              <xsl:value-of select="concat(w:ContainerNumber, ', ')"/>
            </xsl:for-each>
          </xsl:variable>

          <xsl:variable name="OrderRef">
            <xsl:for-each select="//w:OrderNumberCollection/w:OrderNumber">
              <xsl:value-of select="concat(w:OrderReference, ', ')"/>
            </xsl:for-each>
          </xsl:variable>

          <xsl:variable name="Gateway">
            <xsl:for-each select="//w:GatewayInfoCollection/w:GatewayInfo/w:Forwarder">
              <xsl:value-of select="concat(w:CompanyName, ', ')"/>
            </xsl:for-each>
          </xsl:variable>

          <xsl:variable name="GoodsDescription"
            select="//w:ShipmentCollection/w:Shipment/w:SubShipmentCollection/w:SubShipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:GoodsDescription"/>

          <xsl:variable name="OrderRef">
            <xsl:for-each
              select="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]//w:LocalProcessing/w:OrderNumberCollection/w:OrderNumber">
              <xsl:value-of select="concat(w:OrderReference, ', ')"/>
            </xsl:for-each>
            <xsl:for-each
              select="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource/w:Key = $job]">
              <xsl:value-of select="concat(w:OwnerRef, ', ')"/>
            </xsl:for-each>
          </xsl:variable>

          <xsl:if test="//w:TransactionInfo/w:Description != ''">
            <xsl:attribute name="TransactionDescription">
              <xsl:value-of select="//w:TransactionInfo/w:Description"/>
            </xsl:attribute>
          </xsl:if>
          <xsl:variable name="department" select="//w:TransactionInfo/w:Department/w:Code"/>
          <xsl:if
            test="$department = 'FIS' or $department = 'FES' or $department = 'BIS' or $department = 'BES'">
            <xsl:attribute name="DepartmentLeyenda">
              <xsl:value-of select="'As agent and on behalf of Hanse Ocean Line Ltd. as carrier'"/>
            </xsl:attribute>
          </xsl:if>

          <xsl:if test="//w:TransactionInfo/w:OrganizationAddress/w:OrganizationCode">
            <xsl:attribute name="CustomerID">
              <xsl:value-of select="//w:TransactionInfo/w:OrganizationAddress/w:OrganizationCode"/>
            </xsl:attribute>
          </xsl:if>

          <xsl:choose>
            <xsl:when test="//w:TransactionInfo/w:JobInvoiceNumber != ''">
              <xsl:attribute name="Consol">
                <xsl:value-of select="//w:TransactionInfo/w:JobInvoiceNumber"/>
              </xsl:attribute>
            </xsl:when>
            <xsl:otherwise>
              <xsl:attribute name="Consol">
                <xsl:value-of
                  select="//w:ShipmentCollection/w:Shipment/w:DataContext/w:DataSourceCollection/w:DataSource/w:Key"
                />
              </xsl:attribute>
            </xsl:otherwise>
          </xsl:choose>

          <xsl:if test="//w:TransactionInfo/w:DataContext/w:EventUser/w:Name">
            <xsl:attribute name="PrintedBy">
              <xsl:value-of select="//w:TransactionInfo/w:DataContext/w:EventUser/w:Name"/>
            </xsl:attribute>
          </xsl:if>

          <xsl:if test="//w:TransactionInfo/w:DataContext/w:EventBranch/w:Name">
            <xsl:attribute name="Office">
              <xsl:value-of select="//w:TransactionInfo/w:DataContext/w:EventBranch/w:Name"/>
            </xsl:attribute>
          </xsl:if>



          <xsl:attribute name="Packages">
            <xsl:choose>

              <xsl:when
                test="contains(//w:ShipmentType/w:Code, 'BCN') or contains(//w:ContainerMode/w:Code, 'BCN')">
                <xsl:value-of select="//w:TotalNoOfPacks"/>
              </xsl:when>

              <xsl:otherwise>
                <xsl:value-of select="sum(//w:OuterPacks)"/>
              </xsl:otherwise>

            </xsl:choose>
          </xsl:attribute>

          <xsl:for-each select="//w:ShipmentCollection/w:Shipment">
            <xsl:variable name="TotalWeight">
              <xsl:choose>
                <xsl:when test="w:SubShipmentCollection/w:SubShipment/w:ManifestedWeight">
                  <xsl:value-of select="w:SubShipmentCollection/w:SubShipment/w:ManifestedWeight"/>
                </xsl:when>
                <xsl:when test="w:ManifestedWeight">
                  <xsl:value-of select="w:ManifestedWeight"/>
                </xsl:when>
              </xsl:choose>
            </xsl:variable>
            <xsl:variable name="TotalWeightUnit">
              <xsl:choose>
                <xsl:when test="w:SubShipmentCollection/w:SubShipment/w:TotalWeightUnit/w:Code">
                  <xsl:value-of
                    select="w:SubShipmentCollection/w:SubShipment/w:TotalWeightUnit/w:Code"/>
                </xsl:when>
                <xsl:when test="w:TotalWeightUnit/w:Code">
                  <xsl:value-of select="w:TotalWeightUnit/w:Code"/>
                </xsl:when>
              </xsl:choose>
            </xsl:variable>
            <xsl:attribute name="Weight">
              <xsl:value-of select="concat($TotalWeight, ' ', $TotalWeightUnit)"/>
            </xsl:attribute>
            <xsl:variable name="TotalVolume">
              <xsl:choose>
                <xsl:when test="w:SubShipmentCollection/w:SubShipment/w:ManifestedVolume">
                  <xsl:value-of select="w:SubShipmentCollection/w:SubShipment/w:ManifestedVolume"/>
                </xsl:when>
                <xsl:when test="w:ManifestedVolume">
                  <xsl:value-of select="w:ManifestedVolume"/>
                </xsl:when>
              </xsl:choose>
            </xsl:variable>
            <xsl:variable name="TotalVolumeUnit">
              <xsl:choose>
                <xsl:when test="w:SubShipmentCollection/w:SubShipment/w:TotalVolumeUnit/w:Code">
                  <xsl:value-of
                    select="w:SubShipmentCollection/w:SubShipment/w:TotalVolumeUnit/w:Code"/>
                </xsl:when>
                <xsl:when test="w:TotalVolumeUnit/w:Code">
                  <xsl:value-of select="w:TotalVolumeUnit/w:Code"/>
                </xsl:when>
              </xsl:choose>
            </xsl:variable>
            <xsl:attribute name="Volume">
              <xsl:value-of select="concat($TotalVolume, ' ', $TotalVolumeUnit)"/>
            </xsl:attribute>

            <xsl:variable name="DocumentedChargeable" select="w:DocumentedChargeable"/>

            <xsl:attribute name="Chargeable">
              <xsl:value-of select="concat($TotalWeight, ' ', $TotalWeightUnit)"/>
            </xsl:attribute>
          </xsl:for-each>


          <xsl:variable name="VesselName" select="concat(//w:VesselName[1], ' / ')"/>
          <xsl:variable name="VoyageFlightNo" select="//w:VoyageFlightNo[1]"/>
          <xsl:attribute name="Vessel">
            <xsl:value-of select="concat($VesselName, $VoyageFlightNo)"/>
          </xsl:attribute>

          <xsl:variable name="HouseBillOfLanding">
            <xsl:value-of select="//w:Shipment/w:WayBillNumber[1]"/>
          </xsl:variable>
          <xsl:attribute name="HouseBillOfLanding">
            <xsl:value-of disable-output-escaping="yes"
              select="translate(translate($HouseBillOfLanding, '&#xA;', ' '), ' ', '')"/>
          </xsl:attribute>

          <xsl:attribute name="ETD">
            <xsl:value-of
              select="substring(//w:DateCollection/w:Date[w:Type = 'Departure']/w:Value, 0, 11)"/>
          </xsl:attribute>

          <xsl:attribute name="ETA">
            <xsl:value-of
              select="substring(//w:DateCollection/w:Date[w:Type = 'Arrival']/w:Value, 0, 11)"/>
          </xsl:attribute>

          <xsl:attribute name="PayRef">
            <xsl:value-of select="//w:TransactionInfo/w:Number"/>
          </xsl:attribute>

          <xsl:variable name="Linea" select="//w:SubShipment/w:BookingConfirmationReference"/>
          <xsl:attribute name="Linea">
            <xsl:value-of select="$Linea"/>
          </xsl:attribute>

          <xsl:variable name="containers">
            <xsl:for-each
              select="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:ContainerCollection/w:Container">
              <xsl:value-of select="concat(w:ContainerNumber, ', ')"/>
            </xsl:for-each>
          </xsl:variable>
          <xsl:attribute name="containers">
            <xsl:value-of select="substring($containers, 0, string-length($containers) - 1)"/>
          </xsl:attribute>

          <xsl:variable name="GoodsDescription"
            select="//w:ShipmentCollection/w:Shipment/w:SubShipmentCollection/w:SubShipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment' or w:Type = 'CustomsDeclaration']/w:Key = $job]/w:GoodsDescription"/>
          <xsl:attribute name="GoodsDescription">
            <xsl:value-of select="$GoodsDescription"/>
          </xsl:attribute>

          <xsl:variable name="FreightTerms" select="//w:ShipmentIncoTerm/w:Code"/>
          <xsl:attribute name="FreightTerms">
            <xsl:value-of select="$FreightTerms"/>
          </xsl:attribute>

          <xsl:attribute name="OrderRef">
            <xsl:value-of select="$OrderRef"/>
          </xsl:attribute>

          <xsl:attribute name="Gateway">
            <xsl:value-of select="$Gateway"/>
          </xsl:attribute>

          <!--
          Se definen los valores de la suma de los DTA, PREVAL y se crea el Grand Total
          -->

          <xsl:variable name="DTA"
            select="sum(//w:PostingJournal[w:ChargeCode/w:Code = 'DTA']/w:OSAmount)"/>
          <xsl:variable name="PREVAL"
            select="sum(//w:PostingJournal[w:ChargeCode/w:Code = 'PREVAL']/w:OSAmount)"/>
          <xsl:attribute name="DTA">
            <xsl:value-of select="format-number($DTA, '0.00')"/>
          </xsl:attribute>
          <xsl:attribute name="PREVAL">
            <xsl:value-of select="format-number($PREVAL, '0.00')"/>
          </xsl:attribute>
          <xsl:attribute name="GrandTotal">
            <xsl:value-of select="format-number($total + $PREVAL + $DTA, '0.00')"/>
          </xsl:attribute>
        </Header>
        <Impuestos>
          <xsl:if test="$IVARetenidoSuma > 0">
            <Impuesto>
              <xsl:attribute name="Impuesto">
                <xsl:value-of select="'IVA RETENIDO'"/>
              </xsl:attribute>
              <xsl:attribute name="Tasa">
                <xsl:value-of select="'4%'"/>
              </xsl:attribute>
              <xsl:attribute name="Moneda">
                <xsl:value-of select="//w:TransactionInfo/w:OSCurrency/w:Code"/>
              </xsl:attribute>
              <xsl:attribute name="Importe">
                <xsl:value-of select="format-number($IVARetenidoSuma, '#,##0.00')"/>
              </xsl:attribute>
            </Impuesto>

          </xsl:if>

          <xsl:if test="$IVASuma > 0">
            <Impuesto>
              <xsl:attribute name="Impuesto">
                <xsl:value-of select="'IVA'"/>
              </xsl:attribute>
              <xsl:attribute name="Tasa">
                <xsl:value-of select="'16%'"/>
              </xsl:attribute>
              <xsl:attribute name="Moneda">
                <xsl:value-of select="//w:TransactionInfo/w:OSCurrency/w:Code"/>
              </xsl:attribute>
              <xsl:attribute name="Importe">
                <xsl:value-of select="format-number($IVASuma, '#,##0.00')"/>
              </xsl:attribute>
            </Impuesto>
          </xsl:if>

          <xsl:if
            test="contains($familiaImpuestos, '-FREE') or contains($familiaImpuestos, '-EXEMPT') or contains($familiaImpuestos, '4')">
            <Impuesto>
              <xsl:attribute name="Impuesto">
                <xsl:value-of select="'IVA EXENTO'"/>
              </xsl:attribute>
              <xsl:attribute name="Tasa">
                <xsl:value-of select="'0%'"/>
              </xsl:attribute>
              <xsl:attribute name="Moneda">
                <xsl:value-of select="//w:TransactionInfo/w:OSCurrency/w:Code"/>
              </xsl:attribute>
              <xsl:attribute name="Importe">
                <xsl:value-of select="'0.00'"/>
              </xsl:attribute>
            </Impuesto>
          </xsl:if>
        </Impuestos>
      </Especiales>

      <Moneda>
        <xsl:attribute name="tipo">
          <xsl:value-of select="//w:TransactionInfo/w:OSCurrency/w:Code"/>
        </xsl:attribute>
        <xsl:attribute name="cambio">
          <xsl:variable name="TotalPesos" select="number(//w:TransactionInfo/w:LocalTotal)"/>
          <xsl:variable name="TotalDolares">
            <xsl:value-of select="number(//w:TransactionInfo/w:OSTotal)"/>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="format-number($TotalPesos div $TotalDolares, '0.0000') = 'NaN'">
              <xsl:value-of select="'1.0000'"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="format-number($TotalPesos div $TotalDolares, '0.0000')"/>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:attribute>
      </Moneda>
    </a:Comprobante>

  </xsl:template>
</xsl:stylesheet>
