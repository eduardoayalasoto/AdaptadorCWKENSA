<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:exsl="http://exslt.org/common"
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xs="http://www.w3.org/2001/XMLSchema"
  exclude-result-prefixes="xs" version="1.0" extension-element-prefixes="exsl"
  xmlns:w="http://www.cargowise.com/Schemas/Universal/2011/11"
  xmlns:a="http://www.tralix.com/cfd/40">
  <xsl:output method="xml" encoding="UTF-8" indent="yes"/>
  <!-- Llave para agrupar cargos combinando código de cargo y código de impuesto -->
  <xsl:key name="ChargeCode" match="//w:PostingJournalCollection/w:PostingJournal"
    use="concat(w:ChargeCode/w:Code, '|', w:VATTaxID/w:TaxCode)"/>
  <xsl:key name="ServicioKey" match="//w:ShipmentCollection/w:Shipment/w:ContainerMode/w:Code"
    use="."/>
  <xsl:key name="MAWBKey"
    match="//w:TransactionInfo/w:ShipmentCollection/w:Shipment/w:WayBillNumber" use="."/>
  <xsl:key name="HAWBKey" match="//w:SubShipmentCollection/w:SubShipment/w:WayBillNumber" use="."/>
  <xsl:key name="uniqueJobs" match="w:PostingJournal/w:Job" use="w:Key"/>
  <xsl:key name="uniqueWayBillNumbers" match="w:Shipment/w:WayBillNumber" use="."/>
  <xsl:key name="uniqueContainers"
    match="//w:SubShipmentCollection/w:SubShipment/w:ContainerCollection/w:Container"
    use="w:ContainerNumber"/>
  <xsl:key name="uniquePackagesCant" match="w:OuterPacks" use="."/>
  <xsl:key name="uniqueWeights" match="w:ManifestedWeight" use="."/>

  <xsl:variable name="country-code-map">
    <map>
      <country code="AD" value="AND"/>
      <country code="AE" value="ARE"/>
      <country code="AF" value="AFG"/>
      <country code="AG" value="ATG"/>
      <country code="AI" value="AIA"/>
      <country code="AL" value="ALB"/>
      <country code="AM" value="ARM"/>
      <country code="AO" value="AGO"/>
      <country code="AQ" value="ATA"/>
      <country code="AR" value="ARG"/>
      <country code="AS" value="ASM"/>
      <country code="AT" value="AUT"/>
      <country code="AU" value="AUS"/>
      <country code="AW" value="ABW"/>
      <country code="AX" value="ALA"/>
      <country code="AZ" value="AZE"/>
      <country code="BA" value="BIH"/>
      <country code="BB" value="BRB"/>
      <country code="BD" value="BGD"/>
      <country code="BE" value="BEL"/>
      <country code="BF" value="BFA"/>
      <country code="BG" value="BGR"/>
      <country code="BH" value="BHR"/>
      <country code="BI" value="BDI"/>
      <country code="BJ" value="BEN"/>
      <country code="BL" value="BLM"/>
      <country code="BM" value="BMU"/>
      <country code="BN" value="BRN"/>
      <country code="BO" value="BOL"/>
      <country code="BQ" value="BES"/>
      <country code="BR" value="BRA"/>
      <country code="BS" value="BHS"/>
      <country code="BT" value="BTN"/>
      <country code="BV" value="BVT"/>
      <country code="BW" value="BWA"/>
      <country code="BY" value="BLR"/>
      <country code="BZ" value="BLZ"/>
      <country code="CA" value="CAN"/>
      <country code="CC" value="CCK"/>
      <country code="CD" value="COD"/>
      <country code="CF" value="CAF"/>
      <country code="CG" value="COG"/>
      <country code="CH" value="CHE"/>
      <country code="CI" value="CIV"/>
      <country code="CK" value="COK"/>
      <country code="CL" value="CHL"/>
      <country code="CM" value="CMR"/>
      <country code="CN" value="CHN"/>
      <country code="CO" value="COL"/>
      <country code="CR" value="CRI"/>
      <country code="CU" value="CUB"/>
      <country code="CV" value="CPV"/>
      <country code="CW" value="CUW"/>
      <country code="CX" value="CXR"/>
      <country code="CY" value="CYP"/>
      <country code="CZ" value="CZE"/>
      <country code="DE" value="DEU"/>
      <country code="DJ" value="DJI"/>
      <country code="DK" value="DNK"/>
      <country code="DM" value="DMA"/>
      <country code="DO" value="DOM"/>
      <country code="DZ" value="DZA"/>
      <country code="EC" value="ECU"/>
      <country code="EE" value="EST"/>
      <country code="EG" value="EGY"/>
      <country code="EH" value="ESH"/>
      <country code="ER" value="ERI"/>
      <country code="ES" value="ESP"/>
      <country code="ET" value="ETH"/>
      <country code="FI" value="FIN"/>
      <country code="FJ" value="FJI"/>
      <country code="FK" value="FLK"/>
      <country code="FM" value="FSM"/>
      <country code="FO" value="FRO"/>
      <country code="FR" value="FRA"/>
      <country code="GA" value="GAB"/>
      <country code="GB" value="GBR"/>
      <country code="GD" value="GRD"/>
      <country code="GE" value="GEO"/>
      <country code="GF" value="GUF"/>
      <country code="GG" value="GGY"/>
      <country code="GH" value="GHA"/>
      <country code="GI" value="GIB"/>
      <country code="GL" value="GRL"/>
      <country code="GM" value="GMB"/>
      <country code="GN" value="GIN"/>
      <country code="GP" value="GLP"/>
      <country code="GQ" value="GNQ"/>
      <country code="GR" value="GRC"/>
      <country code="GS" value="SGS"/>
      <country code="GT" value="GTM"/>
      <country code="GU" value="GUM"/>
      <country code="GW" value="GNB"/>
      <country code="GY" value="GUY"/>
      <country code="HK" value="HKG"/>
      <country code="HM" value="HMD"/>
      <country code="HN" value="HND"/>
      <country code="HR" value="HRV"/>
      <country code="HT" value="HTI"/>
      <country code="HU" value="HUN"/>
      <country code="ID" value="IDN"/>
      <country code="IE" value="IRL"/>
      <country code="IL" value="ISR"/>
      <country code="IM" value="IMN"/>
      <country code="IN" value="IND"/>
      <country code="IO" value="IOT"/>
      <country code="IQ" value="IRQ"/>
      <country code="IR" value="IRN"/>
      <country code="IS" value="ISL"/>
      <country code="IT" value="ITA"/>
      <country code="JE" value="JEY"/>
      <country code="JM" value="JAM"/>
      <country code="JO" value="JOR"/>
      <country code="JP" value="JPN"/>
      <country code="KE" value="KEN"/>
      <country code="KG" value="KGZ"/>
      <country code="KH" value="KHM"/>
      <country code="KI" value="KIR"/>
      <country code="KM" value="COM"/>
      <country code="KN" value="KNA"/>
      <country code="KP" value="PRK"/>
      <country code="KR" value="KOR"/>
      <country code="KW" value="KWT"/>
      <country code="KY" value="CYM"/>
      <country code="KZ" value="KAZ"/>
      <country code="LA" value="LAO"/>
      <country code="LB" value="LBN"/>
      <country code="LC" value="LCA"/>
      <country code="LI" value="LIE"/>
      <country code="LK" value="LKA"/>
      <country code="LR" value="LBR"/>
      <country code="LS" value="LSO"/>
      <country code="LT" value="LTU"/>
      <country code="LU" value="LUX"/>
      <country code="LV" value="LVA"/>
      <country code="LY" value="LBY"/>
      <country code="MA" value="MAR"/>
      <country code="MC" value="MCO"/>
      <country code="MD" value="MDA"/>
      <country code="ME" value="MNE"/>
      <country code="MF" value="MAF"/>
      <country code="MG" value="MDG"/>
      <country code="MH" value="MHL"/>
      <country code="MK" value="MKD"/>
      <country code="ML" value="MLI"/>
      <country code="MM" value="MMR"/>
      <country code="MN" value="MNG"/>
      <country code="MO" value="MAC"/>
      <country code="MP" value="MNP"/>
      <country code="MQ" value="MTQ"/>
      <country code="MR" value="MRT"/>
      <country code="MS" value="MSR"/>
      <country code="MT" value="MLT"/>
      <country code="MU" value="MUS"/>
      <country code="MV" value="MDV"/>
      <country code="MW" value="MWI"/>
      <country code="MX" value="MEX"/>
      <country code="MY" value="MYS"/>
      <country code="MZ" value="MOZ"/>
      <country code="NA" value="NAM"/>
      <country code="NC" value="NCL"/>
      <country code="NE" value="NER"/>
      <country code="NF" value="NFK"/>
      <country code="NG" value="NGA"/>
      <country code="NI" value="NIC"/>
      <country code="NL" value="NLD"/>
      <country code="NO" value="NOR"/>
      <country code="NP" value="NPL"/>
      <country code="NR" value="NRU"/>
      <country code="NU" value="NIU"/>
      <country code="NZ" value="NZL"/>
      <country code="OM" value="OMN"/>
      <country code="PA" value="PAN"/>
      <country code="PE" value="PER"/>
      <country code="PF" value="PYF"/>
      <country code="PG" value="PNG"/>
      <country code="PH" value="PHL"/>
      <country code="PK" value="PAK"/>
      <country code="PL" value="POL"/>
      <country code="PM" value="SPM"/>
      <country code="PN" value="PCN"/>
      <country code="PR" value="PRI"/>
      <country code="PS" value="PSE"/>
      <country code="PT" value="PRT"/>
      <country code="PW" value="PLW"/>
      <country code="PY" value="PRY"/>
      <country code="QA" value="QAT"/>
      <country code="RE" value="REU"/>
      <country code="RO" value="ROU"/>
      <country code="RS" value="SRB"/>
      <country code="RU" value="RUS"/>
      <country code="RW" value="RWA"/>
      <country code="SA" value="SAU"/>
      <country code="SB" value="SLB"/>
      <country code="SC" value="SYC"/>
      <country code="SD" value="SDN"/>
      <country code="SE" value="SWE"/>
      <country code="SG" value="SGP"/>
      <country code="SH" value="SHN"/>
      <country code="SI" value="SVN"/>
      <country code="SJ" value="SJM"/>
      <country code="SK" value="SVK"/>
      <country code="SL" value="SLE"/>
      <country code="SM" value="SMR"/>
      <country code="SN" value="SEN"/>
      <country code="SO" value="SOM"/>
      <country code="SR" value="SUR"/>
      <country code="SS" value="SSD"/>
      <country code="ST" value="STP"/>
      <country code="SV" value="SLV"/>
      <country code="SX" value="SXM"/>
      <country code="SY" value="SYR"/>
      <country code="SZ" value="SWZ"/>
      <country code="TC" value="TCA"/>
      <country code="TD" value="TCD"/>
      <country code="TF" value="ATF"/>
      <country code="TG" value="TGO"/>
      <country code="TH" value="THA"/>
      <country code="TJ" value="TJK"/>
      <country code="TK" value="TKL"/>
      <country code="TL" value="TLS"/>
      <country code="TM" value="TKM"/>
      <country code="TN" value="TUN"/>
      <country code="TO" value="TON"/>
      <country code="TR" value="TUR"/>
      <country code="TT" value="TTO"/>
      <country code="TV" value="TUV"/>
      <country code="TW" value="TWN"/>
      <country code="TZ" value="TZA"/>
      <country code="UA" value="UKR"/>
      <country code="UG" value="UGA"/>
      <country code="UM" value="UMI"/>
      <country code="US" value="USA"/>
      <country code="UY" value="URY"/>
      <country code="UZ" value="UZB"/>
      <country code="VA" value="VAT"/>
      <country code="VC" value="VCT"/>
      <country code="VE" value="VEN"/>
      <country code="VG" value="VGB"/>
      <country code="VI" value="VIR"/>
      <country code="VN" value="VNM"/>
      <country code="VU" value="VUT"/>
      <country code="WF" value="WLF"/>
      <country code="WS" value="WSM"/>
      <country code="XK" value="XKX"/>
      <country code="YE" value="YEM"/>
      <country code="YT" value="MYT"/>
      <country code="ZA" value="ZAF"/>
      <country code="ZM" value="ZMB"/>
      <country code="ZW" value="ZWE"/>
    </map>
  </xsl:variable>

  <xsl:variable name="operator-email-map">
    <map>
      <entry code="AJ" email="mx.ajimenez@kensalogistics.com"/>
      <entry code="AMR" email="mx.amartinez@kensalogistics.com"/>
      <entry code="IZ" email="mx.iramirez@kensalogistics.com"/>
      <entry code="EV" email="mx.evargas@kensalogistics.com"/>
      <entry code="JRE" email="mx.jreyes@kensalogistics.com"/>
      <entry code="MV" email="mx.mvega@kensalogistics.com"/>
      <entry code="OCE" email="mx.ocervantes@kensalogistics.com"/>
      <entry code="OC" email="mx.ogonzalez@kensalogistics.com"/>
      <entry code="ZP" email="mx.zpedraza@kensalogistics.com"/>
      <entry code="SL" email="mx.slopez@kensalogistics.com"/>
      <entry code="JM" email="mx.jmellado@kensalogistics.com"/>
      <entry code="JG" email="mx.jguillen@kensalogistics.com"/>
      <entry code="JL" email="mx.jcluis@kensalogistics.com"/>
      <entry code="MJF" email="mx.mjflores@kensalogistics.com"/>
      <entry code="VA" email="mx.varroyo@kensalogistics.com"/>
      <entry code="NE" email="mx.nescobar@kensalogistics.com"/>
      <entry code="VG" email="mx.vgonzalez@kensalogistics.com"/>
      <entry code="MS" email="mx.msantos@kensalogistics.com"/>
      <entry code="ATU" email="mx.aaceves@kensalogistics.com"/>
      <entry code="LGC" email="mx.lguerrero@kensalogistics.com"/>
      <entry code="YZ" email="mx.yvazquez@kensalogistics.com"/>
      <entry code="CV" email="mx.cvalenzuela@kensalogistics.com"/>
      <entry code="CMO" email="mx.cmorales@kensalogistics.com"/>
      <entry code="GM" email="mx.gmendiola@kensalogistics.com"/>
      <entry code="LLD" email="mx.llopez@kensalogistics.com"/>
      <entry code="KM" email="mx.kmendez@kensalogistics.com"/>
      <entry code="JI" email="mx.jivellez@kensalogistics.com"/>
      <entry code="BLU" email="mx.blujan@kensalogistics.com"/>
      <entry code="CR" email="mx.cramos@kensalogistics.com"/>
      <entry code="DS" email="mx.dsanchez@kensalogistics.com"/>
      <entry code="JA" email="mx.jargueta@kensalogistics.com"/>
      <entry code="ML" email="mx.mlopez@kensalogistics.com"/>
      <entry code="PT" email="mx.ptaboada@kensalogistics.com"/>
      <entry code="RS" email="mx.rsocarras@kensalogistics.com"/>
      <entry code="DT" email="mx.dtellez@kensalogistics.com"/>
      <entry code="AD" email="mx.adiaz@kensalogistics.com"/>
      <entry code="IL" email="mx.ilopez@kensalogistics.com"/>
      <entry code="EVE" email="mx.evelasco@kensalogistics.com"/>
      <entry code="KMA" email="mx.kaguilar@kensalogistics.com"/>
      <entry code="MMZ" email="mx.mmartinez@kensalogistics.com"/>
      <entry code="RGP" email="mx.rgoff@kensalogistics.com"/>
      <entry code="CYN" email="mx.cmendez@kensalogistics.com"/>
      <entry code="EG" email="mx.ugarcia@kensalogistics.com"/>
      <entry code="LC" email="mx.lcontreras@kensalogistics.com"/>
      <entry code="FMH" email="mx.fhernandez@kensalogistics.com"/>
      <entry code="APZ" email="mx.aperez@kensalogistics.com"/>
      <entry code="IMZ" email="mx.imarquez@kensalogistics.com"/>
      <entry code="AI" email="mx.airigoyen@kensalogistics.com"/>
      <entry code="HB" email="mx.hbernal@kensalogistics.com"/>
      <entry code="IP" email="mx.ipineda@kensalogistics.com"/>
      <entry code="YR" email="mx.yrodriguez@kensalogistics.com"/>
      <entry code="GG" email="mx.ggomez@kensalogistics.com"/>
      <entry code="ASN" email="mx.asantillan@kensalogistics.com"/>
      <entry code="VC" email="mx.vcolli@kensalogistics.com"/>
      <entry code="EI" email="mx.eislas@kensalogistics.com"/>
      <entry code="VGA" email="mx.vgarcia@kensalogistics.com"/>
      <entry code="MRZ" email="mx.mramirez@kensalogistics.com"/>
      <entry code="ATO" email="mx.atrujano@kensalogistics.com"/>
      <entry code="SR" email="mx.sruiz@kensalogistics.com"/>
      <entry code="VGZ" email="mx.lgonzalez@kensalogistics.com"/>
      <entry code="AGA" email="mx.agarcia@kensalogistics.com"/>
      <entry code="FG" email="mx.fgrimaldo@kensalogistics.com"/>
      <entry code="FR" email="mx.frodriguez@kensalogistics.com"/>
      <entry code="ID" email="mx.idegante@kensalogistics.com"/>
      <entry code="JC" email="mx.jcruz@kensalogistics.com"/>
      <entry code="PE" email="mx.pestrada@kensalogistics.com"/>
      <entry code="YPG" email="mx.ypuga@kensalogistics.com"/>
    </map>
  </xsl:variable>

  <xsl:template name="charge-description">
    <xsl:param name="chargeCode"/>
    <xsl:param name="glAccount"/>
    <xsl:param name="originalDescription"/>
    <xsl:choose>
      <xsl:when test="$chargeCode = 'CSCF'">
        <xsl:value-of select="'Tarifa de Consultoría de Seguro de Contendores'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'ISPS'">
        <xsl:value-of select="'Código Int. para la Protección de los Buques y de las Instalaciones Portuarias'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'ADM FEE'">
        <xsl:value-of select="'Cargo por Administración'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'COMN'">
        <xsl:value-of select="'Comisones'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'ADPOST'">
        <xsl:value-of select="'Gastos de Envío y Mensajeria'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'AMS'">
        <xsl:value-of select="'AMS'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'CCLR'">
        <xsl:value-of select="'Despacho Aduanal'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'CONTP'">
        <xsl:value-of select="'Contenedor Premium'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'CRSBRD'">
        <xsl:value-of select="'Cruce de Frontera'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'CTDY'">
        <xsl:value-of select="'Custodia'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'DADF'">
        <xsl:value-of select="'Cargo por Documentacion de Aerolínea en Origen'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'DBILL'">
        <xsl:value-of select="'Liberación de BL en destino'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'DCART'">
        <xsl:value-of select="'Entrega en Destino'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'DCDEM'">
        <xsl:value-of select="translate($originalDescription, '&#xA;', ' ')"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'DCDET'">
        <xsl:value-of select="'Detención de Unidad en Destino'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'DDOC'">
        <xsl:value-of select="'Cargo por Documentación en Destino'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'DESC'">
        <xsl:value-of select="'Desconsolidación'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'DFUMI'">
        <xsl:value-of select="'Cargo por Fumigación en Destino'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'DHAND'">
        <xsl:value-of select="'Manejo en Destino'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'DINSP'">
        <xsl:value-of select="'Inspección de Aduana en Destino'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'DNOTE'">
        <xsl:value-of select="$originalDescription"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'DREL'">
        <xsl:value-of select="'Cargo por Liberación en Destino'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'DSTOR'">
        <xsl:value-of select="'Almacenaje en Destino'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'DTHC'">
        <xsl:value-of select="'Cargos por Manejor en Terminal de Destino'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'ECUF'">
        <xsl:value-of select="'Cargo Aduanal EDI'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'EUR1'">
        <xsl:value-of select="'EUR1'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'FNBKCHG'">
        <xsl:value-of select="'Cargos de bancos'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'FREETEXT'">
        <xsl:value-of select="'Texto libre'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'FRTA'">
        <xsl:value-of select="'Flete Internacional Aéreo'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'FRTL'">
        <xsl:value-of select="'Flete Internacional Terrestre'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'FRTO'">
        <xsl:value-of select="translate($originalDescription, '&#xA;', ' ')"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'FSC'">
        <xsl:value-of select="'Cargo por Combustible'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'GRI'">
        <xsl:value-of select="'Incremento General de Tarifa'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'HAZFEE'">
        <xsl:value-of select="'Cargo por Carga Peligrosa'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'IMO'">
        <xsl:value-of select="'IMO 2020.'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'INBI'">
        <xsl:value-of select="'Cargo por INBOND'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'INSUR'">
        <xsl:value-of select="'Cargo por Consultoria de Seguro'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'MANEV'">
        <xsl:value-of select="'Maniobras'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'OAWB'">
        <xsl:value-of select="'Corte de Guía Aéreo'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'OBILL'">
        <xsl:value-of select="'Emisión de BL en Origen'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'OCART'">
        <xsl:value-of select="'Recolección en origen'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'OCDEM'">
        <xsl:value-of select="'Demoras de Contenedor en origen'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'OCDET'">
        <xsl:value-of select="'Detención de Unidad en Origen'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'ODOC'">
        <xsl:value-of select="'Cargo por Documentación en Origen'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'OFUMI'">
        <xsl:value-of select="'Fumigación en Origen'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'OHAND'">
        <xsl:value-of select="'Manejo en Origen'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'OINSP'">
        <xsl:value-of select="'Inspección en Aduana en Origen'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'ONOTE'">
        <xsl:value-of select="$originalDescription"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'OSOLAS'">
        <xsl:value-of select="'Cargo por pesaje VGM SOLAS'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'OSTOR'">
        <xsl:value-of select="'Almacenaje en Origen'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'OSTUF'">
        <xsl:value-of select="'Consolidación'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'OTHC'">
        <xsl:value-of select="'Cargo por Manejo en Terminal de Origen'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'PS'">
        <xsl:value-of select="'Rebate'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'PTRFEE'">
        <xsl:value-of select="'Cargo por Transferencia de Puerto'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'FRTMX'">
        <xsl:value-of select="'Flete Terrestre Local'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'FRTM'">
        <xsl:value-of select="'Servicios de Fletamento'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'FRTCON'">
        <xsl:value-of select="'Flete Terrestre Nacional Consolidado'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'FRTAN'">
        <xsl:value-of select="'Flete Aéreo Nacional'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'FRTON'">
        <xsl:value-of select="'Flete Marítimo Nacional'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'SDAL'">
        <xsl:value-of select="'Servicios de Administración Logistica'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'ANTIC'">
        <xsl:value-of select="'Anticipo de Servicios Logisticos'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'MEDY'">
        <xsl:value-of select="$originalDescription"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'MSAL'">
        <xsl:value-of select="$originalDescription"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'NCDEV'">
        <xsl:value-of select="'Devoluciones, descuentos o bonificaciones'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'PCON'">
        <xsl:value-of select="'Acondicionamiento de Empaque'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'TONU'">
        <xsl:value-of select="'Flete en Falso'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'COMIF'">
        <xsl:value-of select="'Servicios de Coordinación Logística'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'INTM'">
        <xsl:value-of select="'Coordinación de Logística Intermodal'"/>
      </xsl:when>
      <xsl:when test="$chargeCode = 'REL'">
        <xsl:value-of select="'888888'"/>
      </xsl:when>
      <xsl:when test="$glAccount = '630.01.000'">
        <xsl:value-of select="'Intereses'"/>
      </xsl:when>
      <xsl:when test="$glAccount = '710.01.002'">
        <xsl:value-of select="'Otros ingresos'"/>
      </xsl:when>
      <xsl:when test="$glAccount = '401.03.000'">
        <xsl:value-of select="$originalDescription"/>
      </xsl:when>
      <xsl:when test="$glAccount = '425.01.000'">
        <xsl:value-of select="$originalDescription"/>
      </xsl:when>
      <xsl:when test="$glAccount = '401.04.000'">
        <xsl:value-of select="$originalDescription"/>
      </xsl:when>
      <xsl:when test="$glAccount = '425.04.000'">
        <xsl:value-of select="'Devoluciones, descuentos o bonificaciones'"/>
      </xsl:when>
    </xsl:choose>
  </xsl:template>

  <xsl:template match="/">
    <a:Comprobante version="2.0">
      <!--Variables de acondicionamiento-->
      <xsl:variable name="lowercase" select="'abcdefghijklmnopqrstuvwxyz'"/>
      <xsl:variable name="uppercase" select="'ABCDEFGHIJKLMNOPQRSTUVWXYZ'"/>

      <!--Detener facturación en caso de que en descripción manden la palabra NT      -->

      <xsl:variable name="timbrarNC">
        <xsl:choose>
          <xsl:when
            test="//w:PostingJournalCollection/w:PostingJournal[w:ChargeCode/w:Code = 'NCRED']/w:Description">
            <xsl:value-of select="'true'"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="'false'"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:variable>

      <xsl:if test="//w:TransactionInfo/w:TransactionType = 'CRD' and $timbrarNC = 'false'">
        <xsl:attribute name="NoTimbrarPorNC">
          <xsl:value-of select="'detener'"/>
        </xsl:attribute>
      </xsl:if>

      <!--Variables de Método de Pago y Forma de Pago-->

      <xsl:variable name="Relacionados">
        <xsl:choose>
          <xsl:when
            test="string-length(substring-before(//w:PostingJournalCollection/w:PostingJournal[w:ChargeCode/w:Code = 'REL']/w:Description, '-')) = 2">
            <xsl:value-of select="'true'"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="'false'"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:variable>

      <xsl:variable name="TipoRelacion">
        <xsl:choose>
          <xsl:when test="$Relacionados = 'true'">
            <xsl:value-of
              select="substring(//w:PostingJournalCollection/w:PostingJournal[w:ChargeCode/w:Code = 'REL']/w:Description, 1, 2)"
            />
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="'01'"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:variable>

      <xsl:variable name="uuidRelacionado">
        <xsl:choose>
          <xsl:when test="$Relacionados = 'true'">
            <xsl:value-of
              select="substring-after(//w:PostingJournalCollection/w:PostingJournal[w:ChargeCode/w:Code = 'REL']/w:Description, '-')"
            />
          </xsl:when>
        </xsl:choose>
      </xsl:variable>

      <xsl:variable name="MetodoFormaPagoPath"
        select="//w:OrganizationAddress/w:RegistrationNumberCollection/w:RegistrationNumber[w:Type/w:Code = 'GCR'][w:CountryOfIssue/w:Code = 'MX']/w:Value"/>

      <xsl:variable name="metodoDePago">
        <xsl:choose>
          <xsl:when test="contains($MetodoFormaPagoPath, '-')">
            <xsl:value-of select="substring-before($MetodoFormaPagoPath, '-')"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="'PPD'"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:variable>

      <xsl:variable name="formaDePago">
        <xsl:choose>

          <xsl:when test="contains($MetodoFormaPagoPath, '-')">
            <xsl:value-of select="substring-after($MetodoFormaPagoPath, '-')"/>
          </xsl:when>

          <xsl:otherwise>
            <xsl:value-of select="'99'"/>
          </xsl:otherwise>

        </xsl:choose>
      </xsl:variable>

      <xsl:variable name="paisCode"
        select="//w:TransactionInfo/w:OrganizationAddress/w:Country/w:Code"/>

      <xsl:variable name="pais"
        select="string(exsl:node-set($country-code-map)/map/country[@code=$paisCode]/@value)"/>

      <xsl:variable name="rfc">
        <xsl:choose>
          <xsl:when test="$pais = 'MEX'">
            <xsl:value-of
              select="translate(//w:OrganizationAddress/w:RegistrationNumberCollection/w:RegistrationNumber[w:Type/w:Code = 'RFC'][w:CountryOfIssue/w:Code = 'MX']/w:Value, ' -', '')"
            />
          </xsl:when>
          <xsl:when test="not($pais = 'MEX')">
            <xsl:value-of select="'XEXX010101000'"/>
          </xsl:when>
        </xsl:choose>
      </xsl:variable>

      <xsl:variable name="RegimenFiscalReceptor">
        <xsl:choose>
          <xsl:when test="$pais = 'MEX'">
            <xsl:value-of
              select="//w:OrganizationAddress/w:RegistrationNumberCollection/w:RegistrationNumber[w:Type/w:Code = 'GBR'][w:CountryOfIssue/w:Code = 'MX']/w:Value"
            />
          </xsl:when>
          <xsl:when test="not($pais = 'MEX')">
            <xsl:value-of select="'616'"/>
          </xsl:when>
        </xsl:choose>
      </xsl:variable>

      <xsl:variable name="Relacionados">
        <xsl:choose>
          <xsl:when
            test="string-length(substring-before(//w:PostingJournalCollection/w:PostingJournal[w:ChargeCode/w:Code = 'REL']/w:Description, '-')) = 2">
            <xsl:value-of select="'true'"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="'false'"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:variable>

      <xsl:variable name="TipoRelacion">
        <xsl:choose>
          <xsl:when test="$Relacionados = 'true'">
            <xsl:value-of
              select="substring(//w:PostingJournalCollection/w:PostingJournal[w:ChargeCode/w:Code = 'REL']/w:Description, 1, 2)"
            />
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="'01'"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:variable>

      <xsl:variable name="uuidRelacionado">
        <xsl:choose>
          <xsl:when test="$Relacionados = 'true'">
            <xsl:value-of
              select="substring-after(//w:PostingJournalCollection/w:PostingJournal[w:ChargeCode/w:Code = 'REL']/w:Description, '-')"
            />
          </xsl:when>
        </xsl:choose>
      </xsl:variable>

      <!--Variable para crear condicionesDePago-->
      <xsl:choose>
        <xsl:when test="//w:TransactionInfo/w:InvoiceTerm = 'COD'">
          <xsl:variable name="condiciones" select="//w:TransactionInfo/w:InvoiceTerm"/>
          <xsl:variable name="dias" select="//w:TransactionInfo/w:InvoiceTermDays"/>
          <xsl:attribute name="condicionesDePago">
            <xsl:value-of select="concat($condiciones, ' - ', $dias, ' DAYS')"/>
          </xsl:attribute>
        </xsl:when>
      </xsl:choose>

      <xsl:attribute name="cantidadLetra">
        <xsl:value-of select="'-'"/>
      </xsl:attribute>

      <xsl:if test="//w:TransactionInfo/w:DueDate">
        <xsl:attribute name="fechaVencimiento">
          <xsl:value-of select="substring-before(//w:TransactionInfo/w:DueDate, 'T')"/>
        </xsl:attribute>
      </xsl:if>

      <!--Fecha-->
      <xsl:variable name="fechaemision">
        <xsl:choose>
          <xsl:when test="contains(//w:TransactionInfo/w:DataContext/w:TriggerDate, '.')">
            <xsl:value-of
              select="substring-before(substring-before(//w:TransactionInfo/w:DataContext/w:TriggerDate, '.'), 'T')"
            />
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of
              select="substring-before(//w:TransactionInfo/w:DataContext/w:TriggerDate, 'T')"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:variable>

      <!-- Serie y Folio -->
      <xsl:variable name="serie">
        <xsl:choose>
          <xsl:when test="//w:TransactionInfo/w:TransactionType = 'INV'">

            <xsl:value-of select="'B'"/>

          </xsl:when>
          <xsl:when test="//w:TransactionInfo/w:TransactionType = 'CRD'">

            <xsl:value-of select="'NC'"/>

          </xsl:when>
        </xsl:choose>
      </xsl:variable>
      <xsl:variable name="folio">
        <xsl:choose>
          <xsl:when test="contains(//w:TransactionInfo/w:TransactionReference, 'B')">
            <xsl:value-of
              select="number(translate(//w:TransactionInfo/w:TransactionReference, 'B', ''))"/>
          </xsl:when>
          <xsl:when test="contains(//w:TransactionInfo/w:TransactionType, 'CRD')">
            <xsl:value-of select="number(//w:TransactionInfo/w:Number)"/>
          </xsl:when>
        </xsl:choose>
      </xsl:variable>
      <xsl:attribute name="serie">
        <xsl:value-of select="$serie"/>
      </xsl:attribute>
      <xsl:attribute name="folio">
        <xsl:value-of select="$folio"/>

      </xsl:attribute>

      <!-- Leer tipo de documento para desplegar tipo de documento -->
      <xsl:variable name="tipoDeComprobante">
        <xsl:choose>
          <xsl:when test="//w:TransactionInfo/w:TransactionType = 'INV'">
            <xsl:value-of select="'I'"/>
          </xsl:when>
          <xsl:when test="//w:TransactionInfo/w:TransactionType = 'CRD'">
            <xsl:value-of select="'E'"/>
          </xsl:when>
        </xsl:choose>
      </xsl:variable>
      <xsl:attribute name="tipoDeComprobante">
        <xsl:value-of select="$tipoDeComprobante"/>
      </xsl:attribute>

      <!-- Variables de Moneda y Tipo de Cambio -->
      <xsl:variable name="Moneda" select="//w:TransactionInfo/w:OSCurrency/w:Code"/>
      <xsl:attribute name="Moneda">
        <xsl:value-of select="$Moneda"/>
      </xsl:attribute>
      <xsl:variable name="TipoCambio">
        <xsl:choose>
          <xsl:when test="$Moneda = 'MXN'">
            <xsl:value-of select="'1'"/>
          </xsl:when>
          <xsl:when test="$Moneda != 'MXN'">
            <xsl:value-of
              select="format-number(number(//w:TransactionInfo/w:ExchangeRate), '0.0000')"/>
          </xsl:when>
        </xsl:choose>
      </xsl:variable>
      <xsl:attribute name="TipoCambio">
        <xsl:value-of select="$TipoCambio"/>
      </xsl:attribute>

      <!-- 
        Se suman todos los conceptos donde el charge code no sea DTA ni PREVAL = subtotal
      -->
      <xsl:variable name="pathConcepto"
        select="//w:PostingJournalCollection/w:PostingJournal/w:OSAmount"/>

      <xsl:variable name="pathIva"
        select="//w:PostingJournalCollection/w:PostingJournal/w:OSGSTVATAmount"/>

      <xsl:variable name="pathIvaRet">
        <xsl:choose>
          <xsl:when
            test="//w:PostingJournalCollection/w:PostingJournal[w:GLAccount/w:AccountCode = '425.01.000']/w:OSExtraVATAmount">
            <xsl:value-of
              select="//w:PostingJournalCollection/w:PostingJournal[w:GLAccount/w:AccountCode = '425.01.000']/w:OSExtraVATAmount"
            />
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of
              select="//w:PostingJournalCollection/w:PostingJournal[w:ChargeCode/w:Code != 'CMT' and w:ChargeCode/w:Code != 'DTA' and w:ChargeCode/w:Code != 'PREVAL']/w:OSExtraVATAmount"
            />
          </xsl:otherwise>
        </xsl:choose>
      </xsl:variable>

      <xsl:variable name="subtotal">
        <xsl:value-of select="sum($pathConcepto[. &gt; 0]) - sum($pathConcepto[. &lt; 0])"/>
      </xsl:variable>

      <xsl:variable name="descuento">
        <xsl:choose>
          <xsl:when test="$tipoDeComprobante = 'E'">
            <xsl:value-of select="0"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="sum($pathConcepto[. &lt; 0]) * -1"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:variable>

      <xsl:variable name="IVA">
        <xsl:value-of select="sum($pathIva[. &gt; 0]) - sum($pathIva[. &lt; 0])"/>
      </xsl:variable>

      <xsl:variable name="IVARetenidoSuma">
        <xsl:value-of select="sum($pathIvaRet[. &gt; 0]) - sum($pathIvaRet[. &lt; 0])"/>
      </xsl:variable>

      <xsl:variable name="IVASuma">
        <xsl:value-of select="format-number($IVA + $IVARetenidoSuma, '0.00')"/>
      </xsl:variable>

      <xsl:variable name="IVAcero">
        <xsl:value-of
          select="count(//w:PostingJournalCollection/w:PostingJournal[w:ChargeCode/w:Code != 'CMT' and w:ChargeCode/w:Code != 'DTA' and w:ChargeCode/w:Code != 'PREVAL']/w:VATTaxID[w:TaxCode = 'FREEIVA'])"
        />
      </xsl:variable>

      <xsl:variable name="total" select="$subtotal + $IVASuma - $IVARetenidoSuma - $descuento"/>

      <xsl:if test="$descuento &gt; 0 and $tipoDeComprobante = 'I'">
        <xsl:attribute name="descuento">
          <xsl:value-of select="format-number($descuento, '0.00')"/>
        </xsl:attribute>
      </xsl:if>

      <xsl:attribute name="subTotal">
        <xsl:value-of select="format-number($subtotal, '0.00')"/>
      </xsl:attribute>

      <xsl:variable name="subTotal2" select="format-number($subtotal, '0.00')"/>

      <xsl:attribute name="total">
        <xsl:value-of select="format-number($total, '0.00')"/>
      </xsl:attribute>

      <xsl:attribute name="LugarExpedicion">
        <xsl:value-of select="11560"/>
      </xsl:attribute>

      <xsl:attribute name="fecha">
        <xsl:choose>
          <xsl:when test="contains(//w:TransactionInfo/w:DataContext/w:TriggerDate, '.')">
            <xsl:value-of
              select="substring-before(//w:TransactionInfo/w:DataContext/w:TriggerDate, '.')"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="//w:TransactionInfo/w:DataContext/w:TriggerDate"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:attribute>

      <xsl:attribute name="metodoDePago">
        <xsl:value-of select="$metodoDePago"/>
      </xsl:attribute>

      <xsl:attribute name="formaDePago">
        <xsl:value-of select="$formaDePago"/>
      </xsl:attribute>

      <xsl:attribute name="Exportacion">
        <xsl:value-of select="'01'"/>
      </xsl:attribute>

      <!-- Nodo Comprobante relacionados  -->
      <xsl:if
        test="$TipoRelacion and $Relacionados = 'true' and //w:PostingJournalCollection/w:PostingJournal[w:ChargeCode/w:Code = 'REL']/w:Description">
        <CfdiRelacionados>
          <xsl:attribute name="TipoRelacion">
            <xsl:value-of select="$TipoRelacion"/>
          </xsl:attribute>
          <xsl:for-each
            select="//w:PostingJournalCollection/w:PostingJournal[w:ChargeCode/w:Code = 'REL']/w:Description">
            <xsl:variable name="uuidRelacionado" select="substring-after(., '-')"/>
            <CfdiRelacionado>
              <xsl:attribute name="UUID">
                <xsl:value-of select="$uuidRelacionado"/>
              </xsl:attribute>
            </CfdiRelacionado>
          </xsl:for-each>
        </CfdiRelacionados>
      </xsl:if>

      <!-- Nodo Receptor  -->
      <Receptor>
        <!--        <xsl:if test="//w:TransactionInfo/w:OrganizationAddress/w:OrganizationCode = 'HEPDETBOD'">
          <xsl:attribute name="DetenerPorCliente">
            <xsl:value-of select="'HEPDETBOD'"/>
          </xsl:attribute>
        </xsl:if>-->

        <xsl:variable name="NumRegIdTrib">
          <xsl:choose>
            <xsl:when
              test="//w:RegistrationNumberCollection/w:RegistrationNumber[w:CountryOfIssue/w:Code = $paisCode]/w:Value">
              <xsl:value-of
                select="translate(//w:RegistrationNumberCollection/w:RegistrationNumber[w:CountryOfIssue/w:Code = $paisCode]/w:Value, '- ', '')"
              />
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="'000000000'"/>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:variable>

        <xsl:variable name="ResidenciaFiscal">
          <xsl:value-of select="$pais"/>
        </xsl:variable>

        <xsl:attribute name="rfc">
          <xsl:value-of select="$rfc"/>
        </xsl:attribute>

        <!--translate nombre!-->
        <xsl:variable name="transformNombre"
          select="translate(//w:TransactionInfo/w:OrganizationAddress/w:CompanyName, 'abcdefghijklmnñopqrstuvwxyzáéíóú', 'ABCDEFGHIJKLMNÑOPQRSTUVWXYZÁÉÍÓÚ')"/>

        <xsl:variable name="transformNombre"
          select="translate(normalize-space($transformNombre), 'ÁÉÍÓÚ', 'AEIOU')"/>

        <xsl:variable name="transformNombre">
          <xsl:choose>
            <xsl:when test="$pais != 'MEX'">
              <xsl:value-of select="$transformNombre"/>
            </xsl:when>
            <xsl:when test="contains($transformNombre, ' SA DE CV')">
              <xsl:value-of select="substring-before($transformNombre, ' SA DE CV')"/>
            </xsl:when>
            <xsl:when test="contains($transformNombre, ' SA DE CV A EN P')">
              <xsl:value-of select="substring-before($transformNombre, ' SA DE CV A EN P')"/>
            </xsl:when>
            <xsl:when test="contains($transformNombre, ' SDE RLDE CV')">
              <xsl:value-of select="substring-before($transformNombre, ' SDE RLDE CV')"/>
            </xsl:when>
            <xsl:when test="contains($transformNombre, ' S DE RL DE CV Y/O SRL DE CV')">
              <xsl:value-of
                select="substring-before($transformNombre, ' S DE RL DE CV Y/O SRL DE CV')"/>
            </xsl:when>
            <xsl:when test="contains($transformNombre, 'S DE RL DE CV')">
              <xsl:value-of select="substring-before($transformNombre, ' S DE RL DE CV')"/>
            </xsl:when>
            <xsl:when test="contains($transformNombre, 'SAPI DE CV')">
              <xsl:value-of select="substring-before($transformNombre, ' SAPI DE CV')"/>
            </xsl:when>
            <xsl:when test="contains($transformNombre, 'SPR DE RL')">
              <xsl:value-of select="substring-before($transformNombre, ' SPR DE RL')"/>
            </xsl:when>
            <xsl:when test="contains($transformNombre, ' SC')">
              <xsl:value-of select="substring-before($transformNombre, ' SC')"/>
            </xsl:when>
            <xsl:when test="contains($transformNombre, ' S C')">
              <xsl:value-of select="substring-before($transformNombre, ' S C')"/>
            </xsl:when>
            <xsl:when test="contains($transformNombre, ' AC')">
              <xsl:value-of select="substring-before($transformNombre, ' AC')"/>
            </xsl:when>
            <xsl:when test="contains($transformNombre, 'SAS DE CV')">
              <xsl:value-of select="substring-before($transformNombre, ' SAS DE CV')"/>
            </xsl:when>
            <xsl:when test="contains($transformNombre, ' SA')">
              <xsl:value-of select="substring-before($transformNombre, ' SA')"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="$transformNombre"/>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:variable>
        <!--translate-->

        <xsl:variable name="transformNombre">
          <xsl:choose>
            <xsl:when test="$rfc = 'AAF920730F81'">
              <xsl:value-of select="'AAACESA, ALMACENES FISCALIZADOS, S.A. DE C.V.'"/>
            </xsl:when>
            <xsl:when test="$rfc = 'TCA000418IV2'">
              <xsl:value-of select="'TAMPA CARGO SA S'"/>
            </xsl:when>
            <xsl:when test="$rfc = 'CEI230825BBA'">
              <xsl:value-of select="'CREATIO ESPACIOS INTELIGENTES MEXICO'"/>
            </xsl:when>
            <xsl:when test="$rfc = 'SARH5910272R0'">
              <xsl:value-of select="'HECTOR SALAS RUIZ'"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="$transformNombre"/>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:variable>

        <xsl:attribute name="Nombre">
          <xsl:value-of select="$transformNombre"/>
        </xsl:attribute>

        <xsl:if test="//w:TransactionInfo/w:OrganizationAddress/w:OrganizationCode">
          <xsl:attribute name="identificador">
            <xsl:value-of select="//w:TransactionInfo/w:OrganizationAddress/w:OrganizationCode"/>
          </xsl:attribute>
        </xsl:if>

        <xsl:attribute name="UsoCFDI">
          <xsl:choose>
            <xsl:when test="$pais = 'MEX' and $tipoDeComprobante = 'I'">
              <xsl:value-of
                select="//w:OrganizationAddress/w:RegistrationNumberCollection/w:RegistrationNumber[w:Type/w:Code = 'CFD'][w:CountryOfIssue/w:Code = 'MX']/w:Value"
              />
            </xsl:when>
            <xsl:when test="$pais = 'MEX' and $tipoDeComprobante = 'E'">
              <xsl:value-of select="'G02'"/>
            </xsl:when>
            <xsl:when test="$pais != 'MEX'">
              <xsl:value-of select="'S01'"/>
            </xsl:when>
          </xsl:choose>
        </xsl:attribute>

        <xsl:attribute name="RegimenFiscalReceptor">
          <xsl:value-of select="$RegimenFiscalReceptor"/>
        </xsl:attribute>

        <xsl:attribute name="DomicilioFiscalReceptor">
          <xsl:choose>
            <xsl:when test="$pais = 'MEX' and $rfc != 'XAXX010101000'">
              <xsl:value-of select="//w:TransactionInfo/w:OrganizationAddress/w:Postcode"/>
            </xsl:when>


            <xsl:when test="$rfc = 'XEXX010101000'">
              <xsl:value-of select="11560"/>
            </xsl:when>
          </xsl:choose>
        </xsl:attribute>

        <Domicilio>
          <xsl:if test="//w:TransactionInfo/w:OrganizationAddress/w:Address1">
            <xsl:attribute name="calle">
              <xsl:value-of
                select="concat(//w:TransactionInfo/w:OrganizationAddress/w:Address1, ' ', //w:TransactionInfo/w:OrganizationAddress/w:Address2)"
              />
            </xsl:attribute>
          </xsl:if>
          <xsl:if test="//w:TransactionInfo/w:OrganizationAddress/w:Postcode">
            <xsl:attribute name="codigoPostal">
              <xsl:value-of select="//w:TransactionInfo/w:OrganizationAddress/w:Postcode"/>
            </xsl:attribute>
          </xsl:if>

          <xsl:if test="//w:TransactionInfo/w:OrganizationAddress/w:State != ''">
            <xsl:attribute name="estado">
              <xsl:value-of select="//w:TransactionInfo/w:OrganizationAddress/w:State"/>
            </xsl:attribute>
          </xsl:if>

          <xsl:if test="//w:TransactionInfo/w:OrganizationAddress/w:City">
            <xsl:attribute name="municipio">
              <xsl:value-of select="//w:TransactionInfo/w:OrganizationAddress/w:City"/>
            </xsl:attribute>
          </xsl:if>

          <xsl:attribute name="pais">
            <xsl:value-of select="$pais"/>
          </xsl:attribute>
        </Domicilio>

        <EnvioEmail>
          <xsl:variable name="operadorName">
            <xsl:value-of select="//w:TransactionInfo/w:DataContext/w:EventUser/w:Name"/>
          </xsl:variable>
          <xsl:variable name="operadorCode">
            <xsl:value-of select="//w:TransactionInfo/w:DataContext/w:EventUser/w:Code"/>
          </xsl:variable>
          <xsl:variable name="Shipment" select="//w:Job/w:Key"/>

          <!-- Email segun operadores  -->
          <xsl:variable name="correoLookup"
            select="string(exsl:node-set($operator-email-map)/map/entry[@code=$operadorCode]/@email)"/>
          <xsl:variable name="correo">
            <xsl:choose>
              <xsl:when test="string-length($correoLookup) &gt; 0">
                <xsl:value-of select="$correoLookup"/>
              </xsl:when>
              <xsl:otherwise>
                <xsl:value-of select="'mx.dbaruch@kensalogistics.com'"/>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:variable>

          <xsl:attribute name="email">
            <xsl:value-of select="$correo"/>
          </xsl:attribute>

          <xsl:attribute name="asunto">
            <xsl:value-of select="concat('Shipment number - ', $Shipment)"/>
          </xsl:attribute>

          <xsl:attribute name="adjuntar">
            <xsl:value-of select="'AMBOS'"/>
          </xsl:attribute>

          <xsl:attribute name="mensaje">
            <xsl:value-of select="'Se adjunta CFDi de KENSA Logistics, México.'"/>
          </xsl:attribute>

        </EnvioEmail>
      </Receptor>

      <xsl:variable name="ShipmentTypeBCN">
        <xsl:for-each select="//w:ShipmentType">
          <xsl:value-of select="concat('-', w:Code)"/>
        </xsl:for-each>  </xsl:variable>
      <xsl:variable name="ContainerModeBCN">
        <xsl:for-each select="//w:ContainerMode">
          <xsl:value-of select="concat('-', w:Code)"/>
        </xsl:for-each>  </xsl:variable>

      <xsl:choose>
        <xsl:when test="contains(concat($ShipmentTypeBCN, $ContainerModeBCN), 'BCN')">
          <Conceptos>

            <!-- Recorro cada cargo único identificado por la combinación de código e impuesto -->
            <xsl:for-each
              select="//w:PostingJournalCollection/w:PostingJournal[generate-id() = generate-id(key('ChargeCode', concat(w:ChargeCode/w:Code, '|', w:VATTaxID/w:TaxCode))[1])]">

              <xsl:sort select="w:Job/w:Key" order="descending"/>

              <xsl:variable name="ChargeCodeCode">
                <xsl:value-of select="w:ChargeCode/w:Code"/>
              </xsl:variable>
              <xsl:variable name="ChargeTypeCode">
                <xsl:value-of select="w:ChargeCode/w:ChargeType/w:Code"/>
              </xsl:variable>

              <xsl:if
                test="$ChargeCodeCode != 'DTA' and $ChargeCodeCode != 'PREVAL' and $ChargeTypeCode != 'CMT'">

                <Concepto>

                  <!-- Obtengo el código de impuesto para construir la llave compuesta del cargo -->
                  <xsl:variable name="TaxCode" select="w:VATTaxID/w:TaxCode"/>

                  <!-- Construyo la llave del cargo combinando código e impuesto -->
                  <xsl:variable name="ChargeCodeTaxKey"
                    select="concat($ChargeCodeCode, '|', $TaxCode)"/>

                  <!-- Acumulo el importe total de los cargos que comparten la llave compuesta -->
                  <xsl:variable name="codeTotal">
                    <xsl:value-of select="sum(key('ChargeCode', $ChargeCodeTaxKey)/w:OSAmount)"/>
                  </xsl:variable>

                  <xsl:variable name="job" select="w:Job/w:Key"/>

                  <xsl:variable name="TaxRate" select="w:VATTaxID/w:TaxRate"/>

                  <xsl:variable name="origin"
                    select="concat(//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:PortOfLoading/w:Code, ' / ', //w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:PortOfLoading/w:Name)"/>

                  <xsl:variable name="destination"
                    select="concat(//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:PortOfDischarge/w:Code, ' / ', //w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:PortOfDischarge/w:Name)"/>

                  <xsl:variable name="GLAccount" select="w:GLAccount/w:AccountCode"/>

                  <xsl:variable name="descripcionOriginal" select="w:Description"/>

                  <xsl:variable name="ClaveProdServ">
                    <xsl:choose>
                      <xsl:when test="$ChargeCodeCode = 'FSC'">
                        <xsl:value-of select="'78101502'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'COMN'">
                        <xsl:value-of select="'80151600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'DCDET'">
                        <xsl:value-of select="'78101801'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'DADF'">
                        <xsl:value-of select="'78101502'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'OTHC'">
                        <xsl:value-of select="'78121601'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'OHAND'">
                        <xsl:value-of select="'78121601'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'OAWB'">
                        <xsl:value-of select="'78101502'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'CRSBRD'">
                        <xsl:value-of select="'78101806'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'CCLR'">
                        <xsl:value-of select="'80151605'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'DCDEM'">
                        <xsl:value-of select="'78101702'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'OCDEM'">
                        <xsl:value-of select="'78101702'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'DHAND'">
                        <xsl:value-of select="'78121601'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'DCART'">
                        <xsl:value-of select="'78101806'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'OCDET'">
                        <xsl:value-of select="'78101801'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'IMO'">
                        <xsl:value-of select="'78101702'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'OCART'">
                        <xsl:value-of select="'78101806'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'PTRFEE'">
                        <xsl:value-of select="'78101702'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'DBILL'">
                        <xsl:value-of select="'78101702'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'OBILL'">
                        <xsl:value-of select="'78101702'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'FRTL'">
                        <xsl:value-of select="'78101806'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'OSOLAS'">
                        <xsl:value-of select="'80151600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'MANEV'">
                        <xsl:value-of select="'80151600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'ONOTE'">
                        <xsl:value-of select="'80151600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'DDOC'">
                        <xsl:value-of select="'80151600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'FNBKCHG'">
                        <xsl:value-of select="'80151600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'DTHC'">
                        <xsl:value-of select="'78121601'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'DSTOR'">
                        <xsl:value-of select="'78131701'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'GRI'">
                        <xsl:value-of select="'80151600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'ADPOST'">
                        <xsl:value-of select="'78102203'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'PS'">
                        <xsl:value-of select="'80151600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'ODOC'">
                        <xsl:value-of select="'80151600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'FRTO'">
                        <xsl:value-of select="'78101702'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'INBI'">
                        <xsl:value-of select="'80151600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'INSUR'">
                        <xsl:value-of select="'80151600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'OSTOR'">
                        <xsl:value-of select="'78131701'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'DREL'">
                        <xsl:value-of select="'80151600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'OINSP'">
                        <xsl:value-of select="'78141600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'ECUF'">
                        <xsl:value-of select="'80151605'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'ADM FEE'">
                        <xsl:value-of select="'80151600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'OFUMI'">
                        <xsl:value-of select="'78141603'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'CONTP'">
                        <xsl:value-of select="'78101702'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'CTDY'">
                        <xsl:value-of select="'78141602'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'FRTA'">
                        <xsl:value-of select="'78101502'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'DFUMI'">
                        <xsl:value-of select="'78141603'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'DESC'">
                        <xsl:value-of select="'80151600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'EUR1'">
                        <xsl:value-of select="'80151600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'OSTUF'">
                        <xsl:value-of select="'80151600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'HAZFEE'">
                        <xsl:value-of select="'80151600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'DINSP'">
                        <xsl:value-of select="'78141600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'DNOTE'">
                        <xsl:value-of select="'80151600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'AMS'">
                        <xsl:value-of select="'80151600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'COD'">
                        <xsl:value-of select="'78101702'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'FRTMX'">
                        <xsl:value-of select="'78101801'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'FRTCON'">
                        <xsl:value-of select="'78101800'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'FRTAN'">
                        <xsl:value-of select="'78101501'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'FRTON'">
                        <xsl:value-of select="'78101701'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'SDAL'">
                        <xsl:value-of select="'78141501'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'ANTIC'">
                        <xsl:value-of select="'84111506'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'MEDY'">
                        <xsl:value-of select="'78141501'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'REL'">
                        <xsl:value-of select="'888888'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'NCDEV'">
                        <xsl:value-of select="'84111506'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'PCON'">
                        <xsl:value-of select="'78121600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'TONU'">
                        <xsl:value-of select="'78141500'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'COMIF'">
                        <xsl:value-of select="'80151600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'INTM'">
                        <xsl:value-of select="'78141500'"/>
                      </xsl:when>
                      <xsl:when test="$GLAccount = '630.01.000'">
                        <xsl:value-of select="'84101700'"/>
                      </xsl:when>
                      <xsl:when test="$GLAccount = '710.01.002'">
                        <xsl:value-of select="'01010101'"/>
                      </xsl:when>
                      <xsl:when test="$GLAccount = '710.01.002'">
                        <xsl:value-of select="'01010101'"/>
                      </xsl:when>
                      <xsl:when test="$GLAccount = '425.01.000'">
                        <xsl:value-of select="'80151600'"/>
                      </xsl:when>
                      <xsl:when test="$GLAccount = '401.04.000'">
                        <xsl:value-of select="'25101500'"/>
                      </xsl:when>
                      <xsl:when test="$GLAccount = '425.04.000'">
                        <xsl:value-of select="'84111506'"/>
                      </xsl:when>
                    </xsl:choose>
                  </xsl:variable>

                  <xsl:variable name="Desc">
                    <xsl:call-template name="charge-description">
                      <xsl:with-param name="chargeCode" select="$ChargeCodeCode"/>
                      <xsl:with-param name="glAccount" select="$GLAccount"/>
                      <xsl:with-param name="originalDescription" select="$descripcionOriginal"/>
                    </xsl:call-template>
                  </xsl:variable>

                  <!-- Calcula el importe total del cargo según el signo de los movimientos -->
                  <xsl:variable name="Importe">
                    <xsl:choose>
                      <xsl:when test="w:OSAmount &lt; 0">
                        <xsl:value-of
                          select="format-number(sum(key('ChargeCode', $ChargeCodeTaxKey)/w:OSAmount) * -1, '#.00')"
                        />
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of
                          select="format-number(sum(key('ChargeCode', $ChargeCodeTaxKey)/w:OSAmount), '#.00')"
                        />
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:variable>

                  <!-- Determina el impuesto trasladado acumulado para la llave compuesta -->
                  <xsl:variable name="ImporteImpuesto">

                    <!--
                      
                      Comenté esto porque me estaba dando mal redondeo en algunos casos y me fui por la multiplicación
                      
                      <xsl:choose>
                      <xsl:when test="w:OSGSTVATAmount &lt; 0">
                        <xsl:value-of
                          select="format-number(sum(key('ChargeCode', $ChargeCodeTaxKey)/w:OSGSTVATAmount) * -1, '#.00')"
                        />
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of
                          select="format-number(sum(key('ChargeCode', $ChargeCodeTaxKey)/w:OSGSTVATAmount), '0.00')"
                        />
                      </xsl:otherwise>
                    </xsl:choose>-->

                    <xsl:value-of select="format-number($Importe * 0.16, '0.00')"/>
                  </xsl:variable>

                  <!-- Determina la retención acumulada asociada a la llave compuesta del cargo -->
                  <xsl:variable name="ImporteRetencion">
                    <xsl:choose>
                      <xsl:when test="w:OSExtraVATAmount &lt; 0">
                        <xsl:value-of
                          select="format-number(sum(key('ChargeCode', $ChargeCodeTaxKey)/w:OSExtraVATAmount) * -1, '#.00')"
                        />
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of
                          select="format-number(sum(key('ChargeCode', $ChargeCodeTaxKey)/w:OSExtraVATAmount), '0.00')"
                        />
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:variable>

                  <xsl:variable name="departamentoName" select="w:Department/w:Name"/>

                  <xsl:variable name="departamentoCode" select="w:Department/w:Code"/>

                  <xsl:attribute name="ClaveProdServ">
                    <xsl:value-of select="w:GovernmentReportingChargeCode"/>
                  </xsl:attribute>

                  <xsl:attribute name="NoIdentificacion">
                    <xsl:choose>
                      <xsl:when test="$GLAccount = '630.01.000'">
                        <xsl:value-of select="$GLAccount"/>
                      </xsl:when>
                      <xsl:when test="$GLAccount = '710.01.002'">
                        <xsl:value-of select="$GLAccount"/>
                      </xsl:when>
                      <xsl:when test="$GLAccount = '401.03.000'">
                        <xsl:value-of select="$GLAccount"/>
                      </xsl:when>
                      <xsl:when test="$GLAccount = '425.01.000'">
                        <xsl:value-of select="$GLAccount"/>
                      </xsl:when>
                      <xsl:when test="$GLAccount = '401.04.000'">
                        <xsl:value-of select="$GLAccount"/>
                      </xsl:when>
                      <xsl:when test="$GLAccount = '425.04.000'">
                        <xsl:value-of select="$GLAccount"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="$ChargeCodeCode"/>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:attribute>

                  <xsl:attribute name="unidad">
                    <xsl:value-of select="'No Aplica'"/>
                  </xsl:attribute>

                  <xsl:attribute name="ClaveUnidad">
                    <xsl:choose>
                      <xsl:when test="$ChargeCodeCode = 'NCDEV' or contains($GLAccount, '425.0')">
                        <xsl:value-of select="'ACT'"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="'E48'"/>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:attribute>

                  <xsl:attribute name="Cantidad">
                    <xsl:value-of select="'1'"/>
                  </xsl:attribute>

                  <xsl:attribute name="categoria">
                    <xsl:choose>
                      <xsl:when test="$TaxCode = 'FREEIVA'">
                        <xsl:value-of select="'0%'"/>
                      </xsl:when>
                      <xsl:when test="$TaxCode = 'IVA'">
                        <xsl:value-of select="'16%'"/>
                      </xsl:when>
                      <xsl:when test="$TaxCode = 'CAPIVA'">
                        <xsl:value-of select="'16%'"/>
                      </xsl:when>
                      <xsl:when test="$TaxCode = 'IVA4'">
                        <xsl:value-of select="'16% sobre base 25%'"/>
                      </xsl:when>
                      <xsl:when test="$TaxCode = 'FREEIVA'">
                        <xsl:value-of select="'0%'"/>
                      </xsl:when>
                      <xsl:when test="$TaxCode = 'EXEMPT'">
                        <xsl:value-of select="'Exento'"/>
                      </xsl:when>
                      <xsl:when test="$TaxCode = 'NOTREPORT'">
                        <xsl:value-of select="'No objeto de IVA'"/>
                      </xsl:when>
                      <xsl:when test="$TaxCode = 'IVARET'">
                        <xsl:value-of select="'16% - 4% Ret'"/>
                      </xsl:when>
                    </xsl:choose>
                  </xsl:attribute>

                  <xsl:attribute name="Descripcion">
                    <xsl:value-of select="$Desc"/>
                  </xsl:attribute>

                  <xsl:attribute name="ValorUnitario">
                    <xsl:value-of select="format-number($Importe, '0.00')"/>
                  </xsl:attribute>

                  <xsl:attribute name="Importe">
                    <xsl:value-of select="format-number($Importe, '0.00')"/>
                  </xsl:attribute>

                  <xsl:attribute name="ObjetoImp">
                    <xsl:choose>
                      <xsl:when test="$TaxCode = 'EXEMPT'">
                        <xsl:value-of select="'01'"/>
                      </xsl:when>
                      <xsl:when test="$TaxCode = 'NOTREPORT'">
                        <xsl:value-of select="'01'"/>
                      </xsl:when>
                      <xsl:when test="$TaxCode = 'FREEIVA'">
                        <xsl:value-of select="'02'"/>
                      </xsl:when>
                      <xsl:when test="$TaxCode = 'IVA'">
                        <xsl:value-of select="'02'"/>
                      </xsl:when>
                      <xsl:when test="$TaxCode = 'CAPIVA'">
                        <xsl:value-of select="'02'"/>
                      </xsl:when>
                      <xsl:when test="$TaxCode = 'IVARET'">
                        <xsl:value-of select="'02'"/>
                      </xsl:when>
                      <xsl:when test="$TaxCode = 'IVA4'">
                        <xsl:value-of select="'02'"/>
                      </xsl:when>
                    </xsl:choose>
                  </xsl:attribute>

                  <!-- Calcula el impuesto trasladado absoluto para la llave compuesta actual -->
                  <xsl:variable name="absImpTrans">
                    <xsl:choose>
                      <xsl:when test="w:OSGSTVATAmount &lt; 0">
                        <xsl:value-of
                          select="sum(key('ChargeCode', $ChargeCodeTaxKey)/w:OSGSTVATAmount) * -1"/>
                      </xsl:when>
                      <xsl:when test="not(w:OSGSTVATAmount)">
                        <xsl:value-of select="0"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="sum(key('ChargeCode', $ChargeCodeTaxKey)/w:OSGSTVATAmount)"/>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:variable>

                  <xsl:variable name="absImpRet">
                    <xsl:choose>
                      <xsl:when test="w:OSExtraVATAmount &lt; 0">
                        <xsl:value-of select="w:OSExtraVATAmount * -1"/>
                      </xsl:when>
                      <xsl:when test="not(w:OSExtraVATAmount)">
                        <xsl:value-of select="0"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="w:OSExtraVATAmount"/>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:variable>

                  <xsl:variable name="ImporteTransferido">
                    <xsl:choose>
                      <xsl:when test="$absImpRet">
                        <xsl:value-of select="$absImpTrans + $absImpRet"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="$absImpTrans"/>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:variable>

                  <xsl:variable name="house">
                    <xsl:choose>
                      <xsl:when
                        test="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment/w:SubShipmentCollection/w:SubShipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:WayBillNumber">
                        <xsl:value-of
                          select="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment/w:SubShipmentCollection/w:SubShipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:WayBillNumber"
                        />
                      </xsl:when>
                      <xsl:when
                        test="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:WayBillNumber">
                        <xsl:value-of
                          select="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:WayBillNumber"
                        />
                      </xsl:when>
                    </xsl:choose>
                  </xsl:variable>

                  <xsl:variable name="consignor">
                    <xsl:choose>
                      <xsl:when
                        test="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment/w:SubShipmentCollection/w:SubShipment/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsignorDocumentaryAddress']/w:CompanyName">
                        <xsl:value-of
                          select="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment/w:SubShipmentCollection/w:SubShipment/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsignorDocumentaryAddress']/w:CompanyName"
                        />
                      </xsl:when>
                      <xsl:when
                        test="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsignorDocumentaryAddress']/w:CompanyName">
                        <xsl:value-of
                          select="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsignorDocumentaryAddress']/w:CompanyName"
                        />
                      </xsl:when>
                    </xsl:choose>
                  </xsl:variable>

                  <xsl:variable name="consignee">
                    <xsl:choose>
                      <xsl:when
                        test="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment/w:SubShipmentCollection/w:SubShipment/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsigneeDocumentaryAddress']/w:CompanyName">
                        <xsl:value-of
                          select="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment/w:SubShipmentCollection/w:SubShipment/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsigneeDocumentaryAddress']/w:CompanyName"
                        />
                      </xsl:when>
                      <xsl:when
                        test="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsigneeDocumentaryAddress']/w:CompanyName">
                        <xsl:value-of
                          select="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsigneeDocumentaryAddress']/w:CompanyName"
                        />
                      </xsl:when>
                    </xsl:choose>
                  </xsl:variable>

                  <xsl:variable name="containers">
                    <xsl:for-each
                      select="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:ContainerCollection/w:Container">
                      <xsl:value-of select="concat(w:ContainerNumber, ', ')"/>
                    </xsl:for-each>
                  </xsl:variable>

                  <xsl:variable name="GoodsDescription"
                    select="//w:ShipmentCollection/w:Shipment/w:SubShipmentCollection/w:SubShipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:GoodsDescription"/>

                  <xsl:variable name="OrderRef">
                    <xsl:for-each
                      select="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]//w:LocalProcessing/w:OrderNumberCollection/w:OrderNumber">
                      <xsl:value-of select="concat(w:OrderReference, ', ')"/>
                    </xsl:for-each>
                  </xsl:variable>

                  <xsl:variable name="valorBaseIVA" select="$Importe"/>
                  <xsl:variable name="valorImporteIVA" select="$ImporteImpuesto"/>

                  <xsl:variable name="valorBaseIVA4" select="round($Importe div 4 * 100) div 100"/>
                  <xsl:variable name="valorImporteIVA4" select="$ImporteImpuesto"/>

                  <xsl:variable name="valorBaseFREEIVA4"
                    select="round($Importe div 4 * 3 * 100) div 100"/>
                  <xsl:variable name="valorImporteFREEIVA4" select="0"/>

                  <xsl:variable name="valorBaseFREEIVA" select="$Importe"/>
                  <xsl:variable name="valorImporteFREEIVA" select="0"/>

                  <xsl:variable name="valorBaseIVARET" select="$Importe"/>
                  <xsl:variable name="valorImporteTraIVARET"
                    select="$ImporteImpuesto + $ImporteRetencion"/>
                  <xsl:variable name="valorImporteRetIVARET" select="$ImporteRetencion"/>
                  
                  <xsl:attribute name="tax">
                    <xsl:value-of select="$TaxCode"/>
                  </xsl:attribute>
                  
                  <xsl:if test="$TaxCode != 'EXEMPT' and $TaxCode != 'NOTREPORT'">
                    <Impuestos>

                      <Traslados>
                        <xsl:choose>

                          <xsl:when test="$TaxCode = 'IVA' or $TaxCode = 'CAPIVA'">
                            <Traslado>
                              <xsl:attribute name="Impuesto">
                                <xsl:value-of select="'002'"/>
                              </xsl:attribute>
                              <xsl:attribute name="Base">
                                <xsl:value-of select="format-number($Importe, '0.00')"/>
                              </xsl:attribute>
                              <xsl:attribute name="TipoFactor">
                                <xsl:value-of select="'Tasa'"/>
                              </xsl:attribute>
                              <xsl:attribute name="TasaOCuota">
                                <xsl:value-of select="'0.160000'"/>
                              </xsl:attribute>
                              <xsl:attribute name="Importe">
                                <xsl:value-of select="format-number($valorImporteIVA, '0.00')"/>
                              </xsl:attribute>
                            </Traslado>
                          </xsl:when>

                          <xsl:when test="$TaxCode = 'IVA4'">
                            <Traslado>
                              <xsl:attribute name="Impuesto">
                                <xsl:value-of select="'002'"/>
                              </xsl:attribute>
                              <xsl:attribute name="Base">
                                <xsl:value-of select="format-number($valorBaseIVA4, '0.00')"/>
                              </xsl:attribute>
                              <xsl:attribute name="TipoFactor">
                                <xsl:value-of select="'Tasa'"/>
                              </xsl:attribute>
                              <xsl:attribute name="TasaOCuota">
                                <xsl:value-of select="'0.160000'"/>
                              </xsl:attribute>
                              <xsl:attribute name="Importe">
                                <xsl:value-of select="format-number($valorImporteIVA4, '0.00')"/>
                              </xsl:attribute>
                            </Traslado>

                            <Traslado>
                              <xsl:attribute name="Impuesto">
                                <xsl:value-of select="'002'"/>
                              </xsl:attribute>
                              <xsl:attribute name="Base">
                                <xsl:value-of select="format-number($valorBaseFREEIVA4, '0.00')"/>
                              </xsl:attribute>
                              <xsl:attribute name="TipoFactor">
                                <xsl:value-of select="'Tasa'"/>
                              </xsl:attribute>
                              <xsl:attribute name="TasaOCuota">
                                <xsl:value-of select="'0.000000'"/>
                              </xsl:attribute>
                              <xsl:attribute name="Importe">
                                <xsl:value-of select="format-number($valorImporteFREEIVA4, '0.00')"
                                />
                              </xsl:attribute>
                            </Traslado>
                          </xsl:when>

                          <xsl:when test="$TaxCode = 'FREEIVA'">
                            <Traslado>
                              <xsl:attribute name="Impuesto">
                                <xsl:value-of select="'002'"/>
                              </xsl:attribute>
                              <xsl:attribute name="Base">
                                <xsl:value-of select="format-number($valorBaseFREEIVA, '0.00')"/>
                              </xsl:attribute>
                              <xsl:attribute name="TipoFactor">
                                <xsl:value-of select="'Tasa'"/>
                              </xsl:attribute>
                              <xsl:attribute name="TasaOCuota">
                                <xsl:value-of select="'0.000000'"/>
                              </xsl:attribute>
                              <xsl:attribute name="Importe">
                                <xsl:value-of select="format-number($valorImporteFREEIVA, '0.00')"/>
                              </xsl:attribute>
                            </Traslado>
                          </xsl:when>

                          <xsl:when test="$TaxCode = 'IVARET'">
                            <Traslado>
                              <xsl:attribute name="Impuesto">
                                <xsl:value-of select="'002'"/>
                              </xsl:attribute>
                              <xsl:attribute name="Base">
                                <xsl:value-of select="format-number($valorBaseIVARET, '0.00')"/>
                              </xsl:attribute>
                              <xsl:attribute name="TipoFactor">
                                <xsl:value-of select="'Tasa'"/>
                              </xsl:attribute>
                              <xsl:attribute name="TasaOCuota">
                                <xsl:value-of select="'0.160000'"/>
                              </xsl:attribute>
                              <xsl:attribute name="Importe">
                                <xsl:value-of select="format-number($valorImporteTraIVARET, '0.00')"
                                />
                              </xsl:attribute>
                            </Traslado>
                          </xsl:when>

                        </xsl:choose>
                      </Traslados>

                      <!-- Impuestos Retenciones -->
                      <xsl:if test="$TaxCode = 'IVARET'">
                        <Retenciones>
                          <Retencion>
                            <xsl:attribute name="Impuesto">
                              <xsl:value-of select="'002'"/>
                            </xsl:attribute>
                            <xsl:attribute name="Base">
                              <xsl:value-of select="format-number($valorBaseIVARET, '0.00')"/>
                            </xsl:attribute>
                            <xsl:attribute name="TipoFactor">
                              <xsl:value-of select="'Tasa'"/>
                            </xsl:attribute>
                            <xsl:attribute name="TasaOCuota">
                              <xsl:value-of select="'0.040000'"/>
                            </xsl:attribute>
                            <xsl:attribute name="Importe">
                              <xsl:value-of select="format-number($valorImporteRetIVARET, '0.00')"/>
                            </xsl:attribute>
                          </Retencion>
                        </Retenciones>
                      </xsl:if>
                    </Impuestos>
                  </xsl:if>

                  <!--Información Adicional-->

                  <InformacionAdicional>
                    <xsl:element name="impuesto">
                      <xsl:value-of select="$TaxCode"/>
                    </xsl:element>

                    <xsl:element name="ClaveProdServ">
                      <xsl:value-of select="w:GovernmentReportingChargeCode"/>
                    </xsl:element>

                    <xsl:element name="ClaveUnidad">
                      <xsl:choose>
                        <xsl:when test="$ChargeCodeCode = 'NCDEV' or contains($GLAccount, '425.0')">
                          <xsl:value-of select="'ACT'"/>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="'E48'"/>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:element>

                    <xsl:element name="Cantidad">
                      <xsl:value-of select="'1'"/>
                    </xsl:element>

                    <xsl:element name="categoria">
                      <xsl:value-of
                        select="concat($departamentoCode, ' - ', $departamentoName, ' - ', $ChargeCodeCode)"
                      />
                    </xsl:element>

                    <xsl:element name="Descripcion">
                      <xsl:value-of select="translate(w:Description, '|', '')"/>
                    </xsl:element>

                    <xsl:element name="ValorUnitario">
                      <xsl:value-of select="format-number($Importe, '#,##0.00')"/>
                    </xsl:element>

                    <xsl:element name="Importe">
                      <xsl:value-of select="format-number($Importe, '#,##0.00')"/>
                    </xsl:element>

                    <xsl:element name="Base">
                      <xsl:choose>
                        <xsl:when test="$TaxCode = 'IVA4'">
                          <xsl:value-of select="format-number($Importe div 4, '#,##0.00')"/>
                        </xsl:when>
                        <xsl:when test="$TaxCode = 'IVA'">
                          <xsl:value-of select="format-number($Importe, '#,##0.00')"/>
                        </xsl:when>
                        <xsl:when test="$TaxCode = 'IVARET'">
                          <xsl:value-of select="format-number($Importe, '#,##0.00')"/>
                        </xsl:when>
                        <xsl:when test="$TaxCode = 'FREEIVA'">
                          <xsl:value-of select="format-number($Importe, '#,##0.00')"/>
                        </xsl:when>
                        <xsl:when test="$TaxCode = 'EXEMPT'">
                          <xsl:value-of select="format-number($Importe, '#,##0.00')"/>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:element>

                    <xsl:element name="job">
                      <xsl:value-of select="w:Job/w:Key"/>
                    </xsl:element>
                    <xsl:element name="house">
                      <xsl:value-of select="$house"/>
                    </xsl:element>
                    <xsl:element name="origin">
                      <xsl:value-of select="$origin"/>
                    </xsl:element>
                    <xsl:element name="destination">
                      <xsl:value-of select="$destination"/>
                    </xsl:element>
                    <xsl:element name="consignor">
                      <xsl:value-of select="$consignor"/>
                    </xsl:element>
                    <xsl:element name="consignee">
                      <xsl:value-of select="$consignee"/>
                    </xsl:element>
                    <xsl:element name="tipoImpuesto">
                      <xsl:choose>
                        <xsl:when test="$TaxCode = 'IVA4'">
                          <xsl:value-of select="'IVA 16% al 25%'"/>
                        </xsl:when>
                        <xsl:when test="$TaxCode = 'IVA'">
                          <xsl:value-of select="'IVA 16%'"/>
                        </xsl:when>
                        <xsl:when test="$TaxCode = 'IVARET'">
                          <xsl:value-of select="'IVA 16% - RET 4%'"/>
                        </xsl:when>
                        <xsl:when test="$TaxCode = 'FREEIVA'">
                          <xsl:value-of select="'IVA 0%'"/>
                        </xsl:when>
                        <xsl:when test="$TaxCode = 'EXEMPT'">
                          <xsl:value-of select="'EXENTO'"/>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="$TaxCode"/>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:element>
                    <xsl:element name="importeImpuesto">
                      <xsl:value-of select="format-number($ImporteTransferido, '#,##0.00')"/>
                    </xsl:element>

                    <xsl:element name="importeTotal">
                      <xsl:value-of
                        select="format-number($Importe + $ImporteTransferido, '#,##0.00')"/>
                    </xsl:element>

                    <xsl:element name="containers">
                      <xsl:value-of
                        select="substring($containers, 0, string-length($containers) - 1)"/>
                    </xsl:element>
                    <xsl:element name="goodsDescription">
                      <xsl:value-of select="$GoodsDescription"/>
                    </xsl:element>
                    <xsl:element name="OrderRef">
                      <xsl:value-of select="substring($OrderRef, 0, string-length($OrderRef) - 1)"/>
                    </xsl:element>
                  </InformacionAdicional>
                </Concepto>

              </xsl:if>
            </xsl:for-each>
          </Conceptos>
        </xsl:when>
        <xsl:otherwise>
          <Conceptos>
            <!-- Recorro cada cargo para calcular importes utilizando la llave compuesta -->
            <xsl:for-each select="//w:PostingJournalCollection/w:PostingJournal">

              <xsl:sort select="w:Job/w:Key" order="descending"/>

              <xsl:variable name="ChargeCodeCode">
                <xsl:value-of select="w:ChargeCode/w:Code"/>
              </xsl:variable>
              <xsl:variable name="ChargeTypeCode">
                <xsl:value-of select="w:ChargeCode/w:ChargeType/w:Code"/>
              </xsl:variable>

              <xsl:if
                test="$ChargeCodeCode != 'DTA' and $ChargeCodeCode != 'PREVAL' and $ChargeTypeCode != 'CMT'">

                <Concepto>
                  <!-- Obtengo el código de impuesto para construir la llave compuesta del cargo -->
                  <xsl:variable name="TaxCode" select="w:VATTaxID/w:TaxCode"/>

                  <!-- Construyo la llave del cargo combinando código e impuesto -->
                  <xsl:variable name="ChargeCodeTaxKey"
                    select="concat($ChargeCodeCode, '|', $TaxCode)"/>

                  <!-- Acumulo el importe total de los cargos que comparten la llave compuesta -->
                  <xsl:variable name="codeTotal">
                    <xsl:value-of select="sum(key('ChargeCode', $ChargeCodeTaxKey)/w:OSAmount)"/>
                  </xsl:variable>

                  <xsl:variable name="job" select="w:Job/w:Key"/>

                  <xsl:variable name="TaxRate" select="w:VATTaxID/w:TaxRate"/>

                  <xsl:variable name="origin"
                    select="concat(//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:PortOfLoading/w:Code, ' / ', //w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:PortOfLoading/w:Name)"/>

                  <xsl:variable name="destination"
                    select="concat(//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:PortOfDischarge/w:Code, ' / ', //w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:PortOfDischarge/w:Name)"/>

                  <xsl:variable name="GLAccount" select="w:GLAccount/w:AccountCode"/>

                  <xsl:variable name="descripcionOriginal" select="w:Description"/>

                  <xsl:variable name="ClaveProdServ">
                    <xsl:choose>
                      <xsl:when test="$ChargeCodeCode = 'FSC'">
                        <xsl:value-of select="'78101502'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'COMN'">
                        <xsl:value-of select="'80151600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'DCDET'">
                        <xsl:value-of select="'78101801'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'DADF'">
                        <xsl:value-of select="'78101502'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'OTHC'">
                        <xsl:value-of select="'78121601'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'OHAND'">
                        <xsl:value-of select="'78121601'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'OAWB'">
                        <xsl:value-of select="'78101502'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'CRSBRD'">
                        <xsl:value-of select="'78101806'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'CCLR'">
                        <xsl:value-of select="'80151605'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'DCDEM'">
                        <xsl:value-of select="'78101702'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'OCDEM'">
                        <xsl:value-of select="'78101702'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'DHAND'">
                        <xsl:value-of select="'78121601'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'DCART'">
                        <xsl:value-of select="'78101806'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'OCDET'">
                        <xsl:value-of select="'78101801'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'IMO'">
                        <xsl:value-of select="'78101702'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'OCART'">
                        <xsl:value-of select="'78101806'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'PTRFEE'">
                        <xsl:value-of select="'78101702'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'DBILL'">
                        <xsl:value-of select="'78101702'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'OBILL'">
                        <xsl:value-of select="'78101702'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'FRTL'">
                        <xsl:value-of select="'78101806'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'OSOLAS'">
                        <xsl:value-of select="'80151600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'MANEV'">
                        <xsl:value-of select="'80151600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'ONOTE'">
                        <xsl:value-of select="'80151600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'DDOC'">
                        <xsl:value-of select="'80151600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'FNBKCHG'">
                        <xsl:value-of select="'80151600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'DTHC'">
                        <xsl:value-of select="'78121601'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'DSTOR'">
                        <xsl:value-of select="'78131701'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'GRI'">
                        <xsl:value-of select="'80151600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'ADPOST'">
                        <xsl:value-of select="'78102203'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'PS'">
                        <xsl:value-of select="'80151600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'ODOC'">
                        <xsl:value-of select="'80151600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'FRTO'">
                        <xsl:value-of select="'78101702'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'INBI'">
                        <xsl:value-of select="'80151600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'INSUR'">
                        <xsl:value-of select="'80151600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'OSTOR'">
                        <xsl:value-of select="'78131701'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'DREL'">
                        <xsl:value-of select="'80151600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'OINSP'">
                        <xsl:value-of select="'78141600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'ECUF'">
                        <xsl:value-of select="'80151605'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'ADM FEE'">
                        <xsl:value-of select="'80151600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'OFUMI'">
                        <xsl:value-of select="'78141603'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'CONTP'">
                        <xsl:value-of select="'78101702'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'CTDY'">
                        <xsl:value-of select="'78141602'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'FTN'">
                        <xsl:value-of select="'detener facturación'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'FRTA'">
                        <xsl:value-of select="'78101502'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'DFUMI'">
                        <xsl:value-of select="'78141603'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'DESC'">
                        <xsl:value-of select="'80151600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'EUR1'">
                        <xsl:value-of select="'80151600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'OSTUF'">
                        <xsl:value-of select="'80151600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'HAZFEE'">
                        <xsl:value-of select="'80151600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'DINSP'">
                        <xsl:value-of select="'78141600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'DNOTE'">
                        <xsl:value-of select="'80151600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'AMS'">
                        <xsl:value-of select="'80151600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'COD'">
                        <xsl:value-of select="'78101702'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'FRTMX'">
                        <xsl:value-of select="'78101801'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'FRTCON'">
                        <xsl:value-of select="'78101800'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'FRTAN'">
                        <xsl:value-of select="'78101501'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'FRTON'">
                        <xsl:value-of select="'78101701'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'SDAL'">
                        <xsl:value-of select="'78141501'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'ANTIC'">
                        <xsl:value-of select="'84111506'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'MEDY'">
                        <xsl:value-of select="'78141501'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'MSAL'">
                        <xsl:value-of select="'78141501'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'NCDEV'">
                        <xsl:value-of select="'84111506'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'PCON'">
                        <xsl:value-of select="'78121600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'TONU'">
                        <xsl:value-of select="'78141500'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'COMIF'">
                        <xsl:value-of select="'80151600'"/>
                      </xsl:when>
                      <xsl:when test="$ChargeCodeCode = 'INTM'">
                        <xsl:value-of select="'78141500'"/>
                      </xsl:when>
                      <xsl:when test="$GLAccount = '630.01.000'">
                        <xsl:value-of select="'84101700'"/>
                      </xsl:when>
                      <xsl:when test="$GLAccount = '710.01.002'">
                        <xsl:value-of select="'01010101'"/>
                      </xsl:when>
                      <xsl:when test="$GLAccount = '401.03.000'">
                        <xsl:value-of select="'84101700'"/>
                      </xsl:when>
                      <xsl:when test="$GLAccount = '425.01.000'">
                        <xsl:value-of select="'80151600'"/>
                      </xsl:when>
                      <xsl:when test="$GLAccount = '401.04.000'">
                        <xsl:value-of select="'25101500'"/>
                      </xsl:when>
                      <xsl:when test="$GLAccount = '425.01.000'">
                        <xsl:value-of select="'84111506'"/>
                      </xsl:when>
                      <xsl:when test="$GLAccount = '425.04.000'">
                        <xsl:value-of select="'84111506'"/>
                      </xsl:when>
                    </xsl:choose>
                  </xsl:variable>

                  <xsl:variable name="Desc">
                    <xsl:call-template name="charge-description">
                      <xsl:with-param name="chargeCode" select="$ChargeCodeCode"/>
                      <xsl:with-param name="glAccount" select="$GLAccount"/>
                      <xsl:with-param name="originalDescription" select="$descripcionOriginal"/>
                    </xsl:call-template>
                  </xsl:variable>

                  <!-- Formatea el importe del cargo individual según su signo -->
                  <xsl:variable name="Importe">
                    <xsl:choose>
                      <xsl:when test="w:OSAmount &lt; 0">
                        <xsl:value-of select="format-number(w:OSAmount * -1, '#.00')"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="format-number(w:OSAmount, '0.00')"/>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:variable>

                  <!-- Determina el impuesto trasladado reportado por el movimiento individual -->
                  <xsl:variable name="ImporteImpuesto">
                    <xsl:choose>
                      <xsl:when test="w:OSGSTVATAmount &lt; 0">
                        <xsl:value-of select="format-number(w:OSGSTVATAmount * -1, '#.00')"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="format-number(w:OSGSTVATAmount, '0.00')"/>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:variable>

                  <!-- Determina la retención asociada al movimiento individual -->
                  <xsl:variable name="ImporteRetencion">
                    <xsl:choose>
                      <xsl:when test="w:OSExtraVATAmount &lt; 0">
                        <xsl:value-of select="format-number(w:OSExtraVATAmount * -1, '#.00')"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="format-number(w:OSExtraVATAmount, '0.00')"/>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:variable>

                  <xsl:variable name="Descuento">
                    <xsl:choose>
                      <xsl:when test="w:OSAmount &lt; 0 and $tipoDeComprobante = 'I'">
                        <xsl:value-of select="w:OSAmount * -1"/>
                      </xsl:when>
                    </xsl:choose>
                  </xsl:variable>

                  <xsl:variable name="departamentoName" select="w:Department/w:Name"/>

                  <xsl:variable name="departamentoCode" select="w:Department/w:Code"/>

                  <xsl:attribute name="ClaveProdServ">
                    <xsl:value-of select="w:GovernmentReportingChargeCode"/>
                  </xsl:attribute>

                  <xsl:attribute name="NoIdentificacion">
                    <xsl:choose>
                      <xsl:when test="$GLAccount = '630.01.000'">
                        <xsl:value-of select="$GLAccount"/>
                      </xsl:when>
                      <xsl:when test="$GLAccount = '710.01.002'">
                        <xsl:value-of select="$GLAccount"/>
                      </xsl:when>
                      <xsl:when test="$GLAccount = '401.03.000'">
                        <xsl:value-of select="$GLAccount"/>
                      </xsl:when>
                      <xsl:when test="$GLAccount = '425.01.000'">
                        <xsl:value-of select="$GLAccount"/>
                      </xsl:when>
                      <xsl:when test="$GLAccount = '401.04.000'">
                        <xsl:value-of select="$GLAccount"/>
                      </xsl:when>
                      <xsl:when test="$GLAccount = '425.01.000'">
                        <xsl:value-of select="$GLAccount"/>
                      </xsl:when>
                      <xsl:when test="$GLAccount = '425.04.000'">
                        <xsl:value-of select="$GLAccount"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="$ChargeCodeCode"/>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:attribute>

                  <xsl:attribute name="unidad">
                    <xsl:value-of select="'No Aplica'"/>
                  </xsl:attribute>

                  <xsl:attribute name="ClaveUnidad">
                    <xsl:choose>
                      <xsl:when test="$ChargeCodeCode = 'NCDEV' or contains($GLAccount, '425.0')">
                        <xsl:value-of select="'ACT'"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="'E48'"/>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:attribute>

                  <xsl:attribute name="Cantidad">
                    <xsl:value-of select="'1'"/>
                  </xsl:attribute>

                  <xsl:attribute name="categoria">
                    <xsl:choose>
                      <xsl:when test="$TaxCode = 'FREEIVA'">
                        <xsl:value-of select="'0%'"/>
                      </xsl:when>
                      <xsl:when test="$TaxCode = 'IVA'">
                        <xsl:value-of select="'16%'"/>
                      </xsl:when>
                      <xsl:when test="$TaxCode = 'CAPIVA'">
                        <xsl:value-of select="'16%'"/>
                      </xsl:when>
                      <xsl:when test="$TaxCode = 'IVA4'">
                        <xsl:value-of select="'16% sobre base 25%'"/>
                      </xsl:when>
                      <xsl:when test="$TaxCode = 'FREEIVA'">
                        <xsl:value-of select="'0%'"/>
                      </xsl:when>
                      <xsl:when test="$TaxCode = 'EXEMPT'">
                        <xsl:value-of select="'Exento'"/>
                      </xsl:when>
                      <xsl:when test="$TaxCode = 'NOTREPORT'">
                        <xsl:value-of select="'No objeto de IVA'"/>
                      </xsl:when>
                      <xsl:when test="$TaxCode = 'IVARET'">
                        <xsl:value-of select="'16% - 4% Ret'"/>
                      </xsl:when>
                    </xsl:choose>
                  </xsl:attribute>

                  <xsl:attribute name="Descripcion">
                    <xsl:value-of select="$Desc"/>
                  </xsl:attribute>

                  <xsl:if test="number($Descuento) &gt; 0">
                    <xsl:attribute name="Descuento">
                      <xsl:value-of select="format-number($Descuento, '0.00')"/>
                    </xsl:attribute>
                  </xsl:if>

                  <xsl:attribute name="ValorUnitario">
                    <xsl:value-of select="format-number($Importe, '0.00')"/>
                  </xsl:attribute>

                  <xsl:attribute name="Importe">
                    <xsl:value-of select="format-number($Importe, '0.00')"/>
                  </xsl:attribute>

                  <xsl:attribute name="ObjetoImp">
                    <xsl:choose>
                      <xsl:when test="$TaxCode = 'EXEMPT'">
                        <xsl:value-of select="'01'"/>
                      </xsl:when>
                      <xsl:when test="$TaxCode = 'NOTREPORT'">
                        <xsl:value-of select="'01'"/>
                      </xsl:when>
                      <xsl:when test="$TaxCode = 'FREEIVA'">
                        <xsl:value-of select="'02'"/>
                      </xsl:when>
                      <xsl:when test="$TaxCode = 'IVA'">
                        <xsl:value-of select="'02'"/>
                      </xsl:when>
                      <xsl:when test="$TaxCode = 'CAPIVA'">
                        <xsl:value-of select="'02'"/>
                      </xsl:when>
                      <xsl:when test="$TaxCode = 'IVARET'">
                        <xsl:value-of select="'02'"/>
                      </xsl:when>
                      <xsl:when test="$TaxCode = 'IVA4'">
                        <xsl:value-of select="'02'"/>
                      </xsl:when>
                    </xsl:choose>
                  </xsl:attribute>

                  <!-- Calcula el impuesto trasladado del cargo individual en términos absolutos -->
                  <xsl:variable name="absImpTrans">
                    <xsl:choose>
                      <xsl:when test="w:OSGSTVATAmount &lt; 0">
                        <xsl:value-of select="w:OSGSTVATAmount * -1"/>
                      </xsl:when>
                      <xsl:when test="not(w:OSGSTVATAmount)">
                        <xsl:value-of select="0"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="w:OSGSTVATAmount"/>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:variable>

                  <xsl:variable name="absImpRet">
                    <xsl:choose>
                      <xsl:when test="w:OSExtraVATAmount &lt; 0">
                        <xsl:value-of select="w:OSExtraVATAmount * -1"/>
                      </xsl:when>
                      <xsl:when test="not(w:OSExtraVATAmount)">
                        <xsl:value-of select="0"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="w:OSExtraVATAmount"/>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:variable>

                  <xsl:variable name="ImporteTransferido">
                    <xsl:choose>
                      <xsl:when test="$absImpRet">
                        <xsl:value-of select="$absImpTrans + $absImpRet"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="$absImpTrans"/>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:variable>

                  <xsl:variable name="house">
                    <xsl:choose>
                      <xsl:when
                        test="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment/w:SubShipmentCollection/w:SubShipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:WayBillNumber">
                        <xsl:value-of
                          select="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment/w:SubShipmentCollection/w:SubShipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:WayBillNumber"
                        />
                      </xsl:when>
                      <xsl:when
                        test="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:WayBillNumber">
                        <xsl:value-of
                          select="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:WayBillNumber"
                        />
                      </xsl:when>
                    </xsl:choose>
                  </xsl:variable>

                  <xsl:variable name="consignor">
                    <xsl:choose>
                      <xsl:when
                        test="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment/w:SubShipmentCollection/w:SubShipment/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsignorDocumentaryAddress']/w:CompanyName">
                        <xsl:value-of
                          select="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment/w:SubShipmentCollection/w:SubShipment/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsignorDocumentaryAddress']/w:CompanyName"
                        />
                      </xsl:when>
                      <xsl:when
                        test="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsignorDocumentaryAddress']/w:CompanyName">
                        <xsl:value-of
                          select="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsignorDocumentaryAddress']/w:CompanyName"
                        />
                      </xsl:when>
                    </xsl:choose>
                  </xsl:variable>

                  <xsl:variable name="consignee">
                    <xsl:choose>
                      <xsl:when
                        test="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment/w:SubShipmentCollection/w:SubShipment/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsigneeDocumentaryAddress']/w:CompanyName">
                        <xsl:value-of
                          select="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment/w:SubShipmentCollection/w:SubShipment/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsigneeDocumentaryAddress']/w:CompanyName"
                        />
                      </xsl:when>
                      <xsl:when
                        test="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsigneeDocumentaryAddress']/w:CompanyName">
                        <xsl:value-of
                          select="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:SubShipmentCollection/w:SubShipment/w:OrganizationAddressCollection/w:OrganizationAddress[w:AddressType = 'ConsigneeDocumentaryAddress']/w:CompanyName"
                        />
                      </xsl:when>
                    </xsl:choose>
                  </xsl:variable>

                  <xsl:variable name="containers">
                    <xsl:for-each
                      select="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:ContainerCollection/w:Container">
                      <xsl:value-of select="concat(w:ContainerNumber, ', ')"/>
                    </xsl:for-each>
                  </xsl:variable>

                  <xsl:variable name="GoodsDescription"
                    select="//w:ShipmentCollection/w:Shipment/w:SubShipmentCollection/w:SubShipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:GoodsDescription"/>

                  <xsl:variable name="OrderRef">
                    <xsl:for-each
                      select="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]//w:LocalProcessing/w:OrderNumberCollection/w:OrderNumber">
                      <xsl:value-of select="concat(w:OrderReference, ', ')"/>
                    </xsl:for-each>
                  </xsl:variable>

                  <xsl:variable name="valorBaseIVA" select="$Importe"/>
                  <xsl:variable name="valorImporteIVA" select="$ImporteImpuesto"/>

                  <xsl:variable name="valorBaseIVA4" select="round($Importe div 4 * 100) div 100"/>
                  <xsl:variable name="valorImporteIVA4" select="$ImporteImpuesto"/>

                  <xsl:variable name="valorBaseFREEIVA4"
                    select="round($Importe div 4 * 3 * 100) div 100"/>
                  <xsl:variable name="valorImporteFREEIVA4" select="0"/>

                  <xsl:variable name="valorBaseFREEIVA" select="$Importe"/>
                  <xsl:variable name="valorImporteFREEIVA" select="0"/>

                  <xsl:variable name="valorBaseIVARET" select="$Importe"/>
                  <xsl:variable name="valorImporteTraIVARET"
                    select="$ImporteImpuesto + $ImporteRetencion"/>
                  <xsl:variable name="valorImporteRetIVARET" select="$ImporteRetencion"/>

                  <xsl:if test="$TaxCode != 'EXEMPT' and $TaxCode != 'NOTREPORT'">
                    <Impuestos>
                      <Traslados>
                        <xsl:choose>

                          <xsl:when test="$TaxCode = 'IVA' or $TaxCode = 'CAPIVA'">
                            <Traslado>
                              <xsl:attribute name="Impuesto">
                                <xsl:value-of select="'002'"/>
                              </xsl:attribute>
                              <xsl:attribute name="Base">
                                <xsl:value-of select="format-number($Importe, '0.00')"/>
                              </xsl:attribute>
                              <xsl:attribute name="TipoFactor">
                                <xsl:value-of select="'Tasa'"/>
                              </xsl:attribute>
                              <xsl:attribute name="TasaOCuota">
                                <xsl:value-of select="'0.160000'"/>
                              </xsl:attribute>
                              <xsl:attribute name="Importe">
                                <xsl:value-of select="format-number($valorImporteIVA, '0.00')"/>
                              </xsl:attribute>
                            </Traslado>
                          </xsl:when>

                          <xsl:when test="$TaxCode = 'IVA4'">
                            <Traslado>
                              <xsl:attribute name="Impuesto">
                                <xsl:value-of select="'002'"/>
                              </xsl:attribute>
                              <xsl:attribute name="Base">
                                <xsl:value-of select="format-number($valorBaseIVA4, '0.00')"/>
                              </xsl:attribute>
                              <xsl:attribute name="TipoFactor">
                                <xsl:value-of select="'Tasa'"/>
                              </xsl:attribute>
                              <xsl:attribute name="TasaOCuota">
                                <xsl:value-of select="'0.160000'"/>
                              </xsl:attribute>
                              <xsl:attribute name="Importe">
                                <xsl:value-of select="format-number($valorImporteIVA4, '0.00')"/>
                              </xsl:attribute>
                            </Traslado>

                            <Traslado>
                              <xsl:attribute name="Impuesto">
                                <xsl:value-of select="'002'"/>
                              </xsl:attribute>
                              <xsl:attribute name="Base">
                                <xsl:value-of select="format-number($valorBaseFREEIVA4, '0.00')"/>
                              </xsl:attribute>
                              <xsl:attribute name="TipoFactor">
                                <xsl:value-of select="'Tasa'"/>
                              </xsl:attribute>
                              <xsl:attribute name="TasaOCuota">
                                <xsl:value-of select="'0.000000'"/>
                              </xsl:attribute>
                              <xsl:attribute name="Importe">
                                <xsl:value-of select="format-number($valorImporteFREEIVA4, '0.00')"
                                />
                              </xsl:attribute>
                            </Traslado>
                          </xsl:when>

                          <xsl:when test="$TaxCode = 'FREEIVA'">
                            <Traslado>
                              <xsl:attribute name="Impuesto">
                                <xsl:value-of select="'002'"/>
                              </xsl:attribute>
                              <xsl:attribute name="Base">
                                <xsl:value-of select="format-number($valorBaseFREEIVA, '0.00')"/>
                              </xsl:attribute>
                              <xsl:attribute name="TipoFactor">
                                <xsl:value-of select="'Tasa'"/>
                              </xsl:attribute>
                              <xsl:attribute name="TasaOCuota">
                                <xsl:value-of select="'0.000000'"/>
                              </xsl:attribute>
                              <xsl:attribute name="Importe">
                                <xsl:value-of select="format-number($valorImporteFREEIVA, '0.00')"/>
                              </xsl:attribute>
                            </Traslado>
                          </xsl:when>

                          <xsl:when test="$TaxCode = 'IVARET'">
                            <Traslado>
                              <xsl:attribute name="Impuesto">
                                <xsl:value-of select="'002'"/>
                              </xsl:attribute>
                              <xsl:attribute name="Base">
                                <xsl:value-of select="format-number($valorBaseIVARET, '0.00')"/>
                              </xsl:attribute>
                              <xsl:attribute name="TipoFactor">
                                <xsl:value-of select="'Tasa'"/>
                              </xsl:attribute>
                              <xsl:attribute name="TasaOCuota">
                                <xsl:value-of select="'0.160000'"/>
                              </xsl:attribute>
                              <xsl:attribute name="Importe">
                                <xsl:value-of select="format-number($valorImporteTraIVARET, '0.00')"
                                />
                              </xsl:attribute>
                            </Traslado>
                          </xsl:when>

                        </xsl:choose>
                      </Traslados>

                      <!-- Impuestos Retenciones -->
                      <xsl:if test="$TaxCode = 'IVARET'">
                        <Retenciones>
                          <Retencion>
                            <xsl:attribute name="Impuesto">
                              <xsl:value-of select="'002'"/>
                            </xsl:attribute>
                            <xsl:attribute name="Base">
                              <xsl:value-of select="format-number($valorBaseIVARET, '0.00')"/>
                            </xsl:attribute>
                            <xsl:attribute name="TipoFactor">
                              <xsl:value-of select="'Tasa'"/>
                            </xsl:attribute>
                            <xsl:attribute name="TasaOCuota">
                              <xsl:value-of select="'0.040000'"/>
                            </xsl:attribute>
                            <xsl:attribute name="Importe">
                              <xsl:value-of select="format-number($valorImporteRetIVARET, '0.00')"/>
                            </xsl:attribute>
                          </Retencion>
                        </Retenciones>
                      </xsl:if>
                    </Impuestos>
                  </xsl:if>

                  <!--Información Adicional-->

                  <InformacionAdicional>
                    <xsl:element name="impuesto">
                      <xsl:value-of select="$TaxCode"/>
                    </xsl:element>

                    <xsl:element name="ClaveProdServ">
                      <xsl:value-of select="w:GovernmentReportingChargeCode"/>
                    </xsl:element>

                    <xsl:element name="ClaveUnidad">
                      <xsl:choose>
                        <xsl:when test="$ChargeCodeCode = 'NCDEV' or contains($GLAccount, '425.0')">
                          <xsl:value-of select="'ACT'"/>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="'E48'"/>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:element>

                    <xsl:element name="Cantidad">
                      <xsl:value-of select="'1'"/>
                    </xsl:element>

                    <xsl:element name="categoria">
                      <xsl:value-of
                        select="concat($departamentoCode, ' - ', $departamentoName, ' - ', $ChargeCodeCode)"
                      />
                    </xsl:element>

                    <xsl:element name="Descripcion">
                      <xsl:value-of select="translate(w:Description, '|', '')"/>
                    </xsl:element>

                    <xsl:element name="ValorUnitario">
                      <xsl:value-of select="format-number($Importe, '#,##0.00')"/>
                    </xsl:element>

                    <xsl:element name="Importe">
                      <xsl:value-of select="format-number($Importe, '#,##0.00')"/>
                    </xsl:element>

                    <xsl:element name="Base">
                      <xsl:choose>
                        <xsl:when test="$TaxCode = 'IVA4'">
                          <xsl:value-of select="format-number($Importe div 4, '#,##0.00')"/>
                        </xsl:when>
                        <xsl:when test="$TaxCode = 'IVA'">
                          <xsl:value-of select="format-number($Importe, '#,##0.00')"/>
                        </xsl:when>
                        <xsl:when test="$TaxCode = 'IVARET'">
                          <xsl:value-of select="format-number($Importe, '#,##0.00')"/>
                        </xsl:when>
                        <xsl:when test="$TaxCode = 'FREEIVA'">
                          <xsl:value-of select="format-number($Importe, '#,##0.00')"/>
                        </xsl:when>
                        <xsl:when test="$TaxCode = 'EXEMPT'">
                          <xsl:value-of select="format-number($Importe, '#,##0.00')"/>
                        </xsl:when>
                      </xsl:choose>
                    </xsl:element>

                    <xsl:element name="job">
                      <xsl:value-of select="w:Job/w:Key"/>
                    </xsl:element>
                    <xsl:element name="house">
                      <xsl:value-of select="$house"/>
                    </xsl:element>
                    <xsl:element name="origin">
                      <xsl:value-of select="$origin"/>
                    </xsl:element>
                    <xsl:element name="destination">
                      <xsl:value-of select="$destination"/>
                    </xsl:element>
                    <xsl:element name="consignor">
                      <xsl:value-of select="$consignor"/>
                    </xsl:element>
                    <xsl:element name="consignee">
                      <xsl:value-of select="$consignee"/>
                    </xsl:element>
                    <xsl:element name="tipoImpuesto">
                      <xsl:choose>
                        <xsl:when test="$TaxCode = 'IVA4'">
                          <xsl:value-of select="'IVA 16% al 25%'"/>
                        </xsl:when>
                        <xsl:when test="$TaxCode = 'IVA'">
                          <xsl:value-of select="'IVA 16%'"/>
                        </xsl:when>
                        <xsl:when test="$TaxCode = 'IVARET'">
                          <xsl:value-of select="'IVA 16% - RET 4%'"/>
                        </xsl:when>
                        <xsl:when test="$TaxCode = 'FREEIVA'">
                          <xsl:value-of select="'IVA 0%'"/>
                        </xsl:when>
                        <xsl:when test="$TaxCode = 'EXEMPT'">
                          <xsl:value-of select="'EXENTO'"/>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="$TaxCode"/>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:element>
                    <xsl:element name="importeImpuesto">
                      <xsl:value-of select="format-number($ImporteTransferido, '#,##0.00')"/>
                    </xsl:element>

                    <xsl:element name="importeTotal">
                      <xsl:value-of
                        select="format-number($Importe + $ImporteTransferido, '#,##0.00')"/>
                    </xsl:element>

                    <xsl:element name="containers">
                      <xsl:value-of
                        select="substring($containers, 0, string-length($containers) - 1)"/>
                    </xsl:element>
                    <xsl:element name="goodsDescription">
                      <xsl:value-of select="$GoodsDescription"/>
                    </xsl:element>
                    <xsl:element name="OrderRef">
                      <xsl:value-of select="substring($OrderRef, 0, string-length($OrderRef) - 1)"/>
                    </xsl:element>
                  </InformacionAdicional>
                </Concepto>

              </xsl:if>
            </xsl:for-each>
          </Conceptos>
        </xsl:otherwise>
      </xsl:choose>

      <xsl:variable name="exempt">
        <xsl:for-each select="//w:PostingJournalCollection/w:PostingJournal">

          <xsl:variable name="job" select="w:Job/w:Key"/>

          <xsl:variable name="origin"
            select="concat(//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:PortOfLoading/w:Code, ' / ', //w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $job]/w:PortOfLoading/w:Name)"/>

          <xsl:variable name="TaxCode" select="w:VATTaxID/w:TaxCode"/>

          <xsl:value-of select="concat('-', $TaxCode)"/>
        </xsl:for-each>
      </xsl:variable>

      <xsl:if test="contains($exempt, 'IVA')">
        <Impuestos>
          <xsl:variable name="pathImp"
            select="//w:PostingJournalCollection/w:PostingJournal[w:ChargeCode/w:Code != 'DTA' and w:ChargeCode/w:Code != 'PREVAL' and w:ChargeCode/w:Code != 'CMT']"/>
          <xsl:if test="number($IVASuma) >= 0">
            <xsl:attribute name="TotalImpuestosTrasladados">
              <xsl:value-of select="format-number($IVASuma, '0.00')"/>
            </xsl:attribute>
          </xsl:if>

          <xsl:if test="$IVARetenidoSuma > 0">
            <xsl:attribute name="TotalImpuestosRetenidos">
              <xsl:value-of select="format-number($IVARetenidoSuma, '0.00')"/>
            </xsl:attribute>
          </xsl:if>

          <xsl:if test="$IVARetenidoSuma > 0">
            <Retenciones>
              <Retencion>
                <xsl:attribute name="Impuesto">
                  <xsl:value-of select="'002'"/>
                </xsl:attribute>
                <xsl:attribute name="Importe">
                  <xsl:value-of select="format-number($IVARetenidoSuma, '0.00')"/>
                </xsl:attribute>
              </Retencion>
            </Retenciones>
          </xsl:if>

          <Traslados>
            <xsl:if test="$IVASuma > 0">
              <xsl:if test="contains($exempt, 'IVA') or contains($exempt, 'IVARET')">
                <xsl:variable name="BaseSumIVA">
                  <xsl:choose>
                    <xsl:when
                      test="number(//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVA']/w:OSAmount) &lt; 0">
                      <xsl:value-of
                        select="(sum(//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVA']/w:OSAmount)) * -1"
                      />
                    </xsl:when>
                    <xsl:when
                      test="//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVA']/w:OSAmount">
                      <xsl:value-of
                        select="(sum(//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVA']/w:OSAmount))"
                      />
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="0"/>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:variable>
                <xsl:variable name="BaseSumCAPIVA">
                  <xsl:choose>
                    <xsl:when
                      test="number(//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'CAPIVA']/w:OSAmount) &lt; 0">
                      <xsl:value-of
                        select="(sum(//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'CAPIVA']/w:OSAmount)) * -1"
                      />
                    </xsl:when>
                    <xsl:when
                      test="//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'CAPIVA']/w:OSAmount">
                      <xsl:value-of
                        select="(sum(//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'CAPIVA']/w:OSAmount))"
                      />
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="0"/>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:variable>
                <xsl:variable name="BaseSumIVARET">
                  <xsl:choose>
                    <xsl:when
                      test="number(//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVARET']/w:OSAmount) &lt; 0">
                      <xsl:value-of
                        select="number(sum(//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVARET']/w:OSAmount)) * -1"
                      />
                    </xsl:when>
                    <xsl:when
                      test="//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVARET']/w:OSAmount">
                      <xsl:value-of
                        select="number(sum(//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVARET']/w:OSAmount))"
                      />
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="0"/>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:variable>
                <xsl:variable name="BaseSumIVA4">
                  <xsl:choose>
                    <xsl:when
                      test="number(//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVA4']/w:OSAmount) &lt; 0">

                      <xsl:variable name="rounded-amounts">
                        <xsl:for-each
                          select="//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVA4']">
                          <amt>
                            <xsl:value-of select="round(w:OSAmount * -1 div 4 * 100) div 100"/>
                          </amt>
                        </xsl:for-each>
                      </xsl:variable>

                      <xsl:value-of select="sum(exsl:node-set($rounded-amounts)/amt)"/>

                    </xsl:when>

                    <xsl:when
                      test="//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVA4']/w:OSAmount">

                      <xsl:variable name="rounded-amounts">
                        <xsl:for-each
                          select="//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVA4']">
                          <amt>
                            <xsl:value-of select="round(w:OSAmount div 4 * 100) div 100"/>
                          </amt>
                        </xsl:for-each>
                      </xsl:variable>

                      <xsl:value-of select="sum(exsl:node-set($rounded-amounts)/amt)"/>

                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="0"/>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:variable>

                <Traslado>
                  <xsl:attribute name="Base">
                    <xsl:value-of
                      select="format-number(round(number($BaseSumIVARET + $BaseSumIVA + $BaseSumCAPIVA + $BaseSumIVA4) * 100) div 100, '0.00')"
                    />
                  </xsl:attribute>

                  <xsl:attribute name="Impuesto">
                    <xsl:value-of select="'002'"/>
                  </xsl:attribute>

                  <xsl:attribute name="Importe">
                    <xsl:value-of select="format-number($IVASuma, '0.00')"/>
                  </xsl:attribute>

                  <xsl:attribute name="TasaOCuota">
                    <xsl:value-of select="'0.160000'"/>
                  </xsl:attribute>

                  <xsl:attribute name="TipoFactor">
                    <xsl:value-of select="'Tasa'"/>
                  </xsl:attribute>

                </Traslado>
              </xsl:if>
            </xsl:if>

            <!-- use variables in the XPath expression -->
            <xsl:if test="contains($exempt, 'FREE') or contains($exempt, '4')">
              <xsl:variable name="BaseSumFREEIVA">
                <xsl:value-of
                  select="sum($pathImp[w:VATTaxID/w:TaxCode = 'FREEIVA']/w:OSAmount[not(. = 'NaN')]/abs(.))"
                />
              </xsl:variable>
              <xsl:variable name="BaseSumEXEMPT">
                <xsl:value-of
                  select="sum($pathImp[w:VATTaxID/w:TaxCode = 'EXEMPT']/w:OSAmount[not(. = 'NaN')]/abs(.))"
                />
              </xsl:variable>
              <xsl:variable name="BaseSumIVA4">
                <xsl:choose>
                  <xsl:when
                    test="number(//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVA4']/w:OSAmount) &lt; 0">

                    <xsl:variable name="rounded-amounts">
                      <xsl:for-each
                        select="//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVA4']">
                        <amt>
                          <xsl:value-of select="round(w:OSAmount * -1 div 4 * 3 * 100) div 100"/>
                        </amt>
                      </xsl:for-each>
                    </xsl:variable>

                    <xsl:value-of select="sum(exsl:node-set($rounded-amounts)/amt)"/>

                  </xsl:when>

                  <xsl:when
                    test="//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVA4']/w:OSAmount">

                    <xsl:variable name="rounded-amounts">
                      <xsl:for-each
                        select="//w:PostingJournalCollection/w:PostingJournal[w:VATTaxID/w:TaxCode = 'IVA4']">
                        <amt>
                          <xsl:value-of select="round(w:OSAmount div 4 * 3 * 100) div 100"/>
                        </amt>
                      </xsl:for-each>
                    </xsl:variable>

                    <xsl:value-of select="sum(exsl:node-set($rounded-amounts)/amt)"/>

                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="0"/>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:variable>

              <Traslado>
                <!--<xsl:attribute name="BaseSumFREEIVA">
                  <xsl:value-of select="$BaseSumFREEIVA"/>
                </xsl:attribute>
                <xsl:attribute name="BaseSumEXEMPT">
                  <xsl:value-of select="$BaseSumEXEMPT"/>
                </xsl:attribute>
                <xsl:attribute name="BaseSumIVA4">
                  <xsl:value-of select="$BaseSumIVA4"/>
                </xsl:attribute>-->

                <xsl:attribute name="Base">
                  <xsl:value-of
                    select="format-number(round(number($BaseSumFREEIVA + $BaseSumEXEMPT + $BaseSumIVA4) * 100) div 100, '0.00')"
                  />
                </xsl:attribute>

                <xsl:attribute name="Impuesto">
                  <xsl:value-of select="'002'"/>
                </xsl:attribute>

                <xsl:attribute name="Importe">
                  <xsl:value-of select="'0.00'"/>
                </xsl:attribute>

                <xsl:attribute name="TasaOCuota">
                  <xsl:value-of select="'0.000000'"/>
                </xsl:attribute>

                <xsl:attribute name="TipoFactor">
                  <xsl:value-of select="'Tasa'"/>
                </xsl:attribute>
              </Traslado>
            </xsl:if>

          </Traslados>

        </Impuestos>
      </xsl:if>

      <!-- Tipp de Documento Stellantis -->
      <xsl:variable name="tdoc">
        <xsl:choose>
          <xsl:when test="//w:TransactionInfo/w:TransactionType = 'INV'">

            <xsl:value-of select="'FA'"/>

          </xsl:when>
          <xsl:when test="//w:TransactionInfo/w:TransactionType = 'CRD'">

            <xsl:value-of select="'CR'"/>

          </xsl:when>
        </xsl:choose>
      </xsl:variable>

      <!--Addenda STELLANTIS-->
      <xsl:if test="$rfc = 'CME720930GM9'">
        <Addenda>
          <TOB:factura xmlns:TOB="http://www.dfdchryslerdemexico.com.mx/Addenda/TOB"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" tipoDocumento="TOB"
            TipoDocumentoFiscal="{$tdoc}" version="1.0" folioFiscal="{concat($serie, '-', $folio)}"
            fecha="{$fechaemision}" montoTotal="{format-number($total, '0.00')}"
            referenciaProveedor="44639"
            xsi:schemaLocation="http://www.dfdchryslerdemexico.com.mx/Addenda/TOB http://www.dfdchryslerdemexico.com.mx/Addenda/TOB/TOB.XSD">
            <TOB:moneda tipoMoneda="{$Moneda}" tipoCambio="{$TipoCambio}"/>
            <TOB:proveedor codigo="44639" nombre="KENSA LOGISTICS MEXICO"/>
            <TOB:destino
              codigo="{//w:ShipmentCollection/w:Shipment/w:ContainerCollection/w:Container/w:AdditionalServiceCollection/w:AdditionalService/w:ServiceNote}"
              nombre="{//w:PostingJournalCollection/w:PostingJournal[w:ChargeCode/w:Code = 'FREETEXT']/w:Description}"/>
            <TOB:otrosCargos codigo="V5" monto="{format-number($total - $subTotal2, '0.00')}"/>
          </TOB:factura>
        </Addenda>
      </xsl:if>

      <Especiales>
        <Header>

          <xsl:attribute name="Impuestos">
            <xsl:value-of select="$exempt"/>
          </xsl:attribute>

          <xsl:attribute name="ResidenciaFiscal">
            <xsl:value-of select="//w:TransactionInfo/w:OrganizationAddress/w:Country/w:Name"/>
          </xsl:attribute>

          <xsl:attribute name="ReferenciaCliente">
            <xsl:variable name="shp" select="//w:TransactionInfo/w:Description"/>
            <xsl:for-each
              select="//w:ShipmentCollection/w:Shipment[w:DataContext/w:DataSourceCollection/w:DataSource[w:Type = 'ForwardingShipment']/w:Key = $shp]//w:LocalProcessing/w:OrderNumberCollection/w:OrderNumber">
              <xsl:value-of select="concat(w:OrderReference, ' ')"/>
            </xsl:for-each>
          </xsl:attribute>

          <!-- Variable Periodic Invoice -->
          <xsl:variable name="PI">

            <xsl:value-of select="//w:TransactionInfo/w:Description"/>

          </xsl:variable>

          <xsl:attribute name="PINV">
            <xsl:value-of select="$PI = 'AR PERIODIC INVOICE'"/>
          </xsl:attribute>


          <xsl:choose>
            <!-- Verifica si el valor de Description es igual a "AR PERIODIC INVOICE" -->
            <xsl:when test="$PI = 'AR PERIODIC INVOICE'">
              <!-- Si es igual, asigna el valor de SHP2 -->
              <xsl:attribute name="shp">
                <xsl:for-each
                  select="//w:PostingJournalCollection/w:PostingJournal/w:Job[generate-id() = generate-id(key('uniqueJobs', w:Key)[1])]">
                  <xsl:value-of select="w:Key"/>
                  <xsl:if test="position() != last()">, </xsl:if>
                </xsl:for-each>
              </xsl:attribute>
            </xsl:when>

            <!-- Si no es igual, deja el valor original de Description -->
            <xsl:otherwise>
              <xsl:attribute name="shp">
                <xsl:value-of select="//w:TransactionInfo/w:Description"/>
              </xsl:attribute>
            </xsl:otherwise>
          </xsl:choose>


          <xsl:attribute name="Containers">
            <xsl:for-each select="
                //w:SubShipmentCollection/w:SubShipment/w:ContainerCollection/w:Container[
                generate-id() = generate-id(key('uniqueContainers', w:ContainerNumber)[1])
                ]">
              <xsl:value-of select="concat(w:ContainerNumber, ' ')"/>
            </xsl:for-each>
          </xsl:attribute>


          <!--
		 <xsl:variable name="uniqueContainers">
  <xsl:for-each select="//w:SubShipmentCollection/w:SubShipment/w:ContainerCollection/w:Container">
    <xsl:if test="not(. = preceding::w:ContainerNumber)">
      <xsl:value-of select="concat(w:ContainerNumber, ' ')"/>
    </xsl:if>
  </xsl:for-each>
</xsl:variable>

<xsl:attribute name="Containers">
  <xsl:value-of select="$uniqueContainers"/>
</xsl:attribute>
-->



          <xsl:attribute name="Servicio">
            <xsl:for-each select="//w:ShipmentCollection/w:Shipment">
              <xsl:variable name="currentCode" select="w:ContainerMode/w:Code"/>
              <xsl:if
                test="generate-id($currentCode) = generate-id(key('ServicioKey', $currentCode)[1])">
                <xsl:value-of select="$currentCode"/>
              </xsl:if>
            </xsl:for-each>
          </xsl:attribute>

          <xsl:if test="//w:TransactionInfo/w:OrganizationAddress/w:OrganizationCode">
            <xsl:attribute name="CustomerID">
              <xsl:value-of select="//w:TransactionInfo/w:OrganizationAddress/w:OrganizationCode"/>
            </xsl:attribute>
          </xsl:if>
          <xsl:if test="//w:TransactionInfo/w:Job/w:Key">
            <xsl:attribute name="Shipment">
              <xsl:value-of select="//w:TransactionInfo/w:Job/w:Key"/>
            </xsl:attribute>
          </xsl:if>
          <xsl:if test="//w:TransactionInfo/w:DataContext/w:EventUser/w:Name">
            <xsl:attribute name="PrintedBy">
              <xsl:value-of select="//w:TransactionInfo/w:DataContext/w:EventUser/w:Name"/>
            </xsl:attribute>
          </xsl:if>
          <xsl:if test="//w:TransactionInfo/w:DataContext/w:EventBranch/w:Name">
            <xsl:attribute name="Office">
              <xsl:value-of select="//w:TransactionInfo/w:DataContext/w:EventBranch/w:Name"/>
            </xsl:attribute>
          </xsl:if>
          <xsl:for-each select="//w:OrganizationAddress">
            <xsl:variable name="AdressType" select="w:AddressType"/>
            <xsl:if test="$AdressType = 'ConsignorDocumentaryAddress'">
              <xsl:attribute name="Shipper">
                <xsl:value-of select="w:CompanyName"/>
              </xsl:attribute>
            </xsl:if>
            <xsl:if test="$AdressType = 'ConsigneeDocumentaryAddress'">
              <xsl:attribute name="Consignee">
                <xsl:value-of select="w:CompanyName"/>
              </xsl:attribute>
            </xsl:if>
          </xsl:for-each>
          <!--<xsl:variable name="GoodsDescription"><xsl:for-each select="//w:RateLineCollection/w:RateLine/w:GoodsDescription"><xsl:if test=".[not(. = preceding::*)]"><xsl:value-of select="concat(., ', ')"/></xsl:if></xsl:for-each></xsl:variable>-->
          <xsl:attribute name="GoodsDescription">
            <xsl:value-of
              select="//w:Shipment/w:CarrierDocumentsOverride/w:AWBHeader/w:RateLineCollection/w:RateLine/w:GoodsDescription"
            />
          </xsl:attribute>





          <xsl:choose>
            <!-- Verifica si el valor de PI es igual a "AR PERIODIC INVOICE" -->
            <xsl:when test="$PI = 'AR PERIODIC INVOICE'">
              <!-- Calcular la suma total de PackagesCant evitando duplicados -->
              <xsl:variable name="totalSum"
                select="sum(//w:OuterPacks[generate-id() = generate-id(key('uniquePackagesCant', .)[1])])"/>

              <!-- Iterar sobre cada SubShipment -->
              <xsl:for-each select="//w:SubShipment">
                <xsl:variable name="PackagesCant" select="w:OuterPacks"/>

                <!-- Solo mostrar la suma una vez (en la primera iteración) -->
                <xsl:if test="position() = 1">
                  <xsl:attribute name="Packages">
                    <xsl:value-of select="$totalSum"/>
                  </xsl:attribute>
                </xsl:if>
              </xsl:for-each>
            </xsl:when>

            <!-- Si la condición no se cumple, usar la lógica original -->
            <xsl:otherwise>
              <xsl:for-each select="//w:SubShipment">
                <xsl:variable name="PackagesCant" select="w:OuterPacks"/>
                <xsl:variable name="PackagesType" select="w:OuterPacksPackageType/w:Code"/>
                <xsl:attribute name="Packages">
                  <xsl:value-of select="concat($PackagesCant, ' ', $PackagesType)"/>
                </xsl:attribute>
              </xsl:for-each>
            </xsl:otherwise>
          </xsl:choose>




          <xsl:for-each select="//w:ShipmentCollection/w:Shipment">
            <xsl:variable name="TotalWeight"
              select="w:SubShipmentCollection/w:SubShipment/w:ManifestedWeight"/>
            <xsl:variable name="TotalWeightUnit" select="w:TotalWeightUnit/w:Code"/>
            <xsl:attribute name="Weight">
              <xsl:value-of select="concat($TotalWeight, ' ', $TotalWeightUnit)"/>
            </xsl:attribute>
            <xsl:variable name="TotalVolume"
              select="w:SubShipmentCollection/w:SubShipment/w:ManifestedVolume"/>
            <xsl:variable name="TotalVolumeUnit" select="w:TotalVolumeUnit/w:Code"/>
            <xsl:attribute name="Volume">
              <xsl:value-of select="concat($TotalVolume, ' ', $TotalVolumeUnit)"/>
            </xsl:attribute>
            <xsl:variable name="DocumentedChargeable" select="w:DocumentedChargeable"/>
            <xsl:attribute name="Chargeable">
              <xsl:value-of select="concat($DocumentedChargeable, ' ', $TotalWeightUnit)"/>
            </xsl:attribute>
            <xsl:variable name="VesselName" select="concat(w:VesselName, ' / ')"/>
            <xsl:variable name="VoyageFlightNo" select="concat(w:VoyageFlightNo, ' / ')"/>
            <xsl:variable name="LloydsIMO" select="w:LloydsIMO"/>
            <xsl:variable name="VesVoyLlo" select="concat($VesselName, $VoyageFlightNo, $LloydsIMO)"/>
            <xsl:attribute name="Vessel">
              <xsl:value-of select="$VesVoyLlo"/>
            </xsl:attribute>

            <xsl:variable name="MAWB">
              <xsl:for-each select="//w:TransactionInfo/w:ShipmentCollection/w:Shipment">
                <xsl:variable name="currentWayBillNumber" select="w:WayBillNumber"/>
                <xsl:if
                  test="w:WayBillType/w:Code = 'MWB' and generate-id($currentWayBillNumber) = generate-id(key('MAWBKey', $currentWayBillNumber)[1])">
                  <xsl:value-of select="concat($currentWayBillNumber, ', ')"/>
                </xsl:if>
              </xsl:for-each>
            </xsl:variable>

            <!--<xsl:variable name="MAWB">
              <xsl:for-each select="//w:TransactionInfo/w:ShipmentCollection/w:Shipment">
                <xsl:variable name="TipoMAWB">
                  <xsl:value-of select="w:WayBillType/w:Code"/>
                </xsl:variable>
                <xsl:if test="$TipoMAWB = 'MWB'">
                  <xsl:value-of select="w:WayBillNumber"/>
                </xsl:if>
              </xsl:for-each>
            </xsl:variable>-->




            <xsl:attribute name="MAWB">
              <xsl:value-of select="$MAWB"/>
            </xsl:attribute>

            <xsl:variable name="HAWB">
              <xsl:for-each select="//w:SubShipmentCollection/w:SubShipment">
                <xsl:variable name="currentWayBillNumber" select="w:WayBillNumber"/>
                <xsl:if
                  test="w:WayBillType/w:Code = 'HWB' and generate-id($currentWayBillNumber) = generate-id(key('HAWBKey', $currentWayBillNumber)[1])">
                  <xsl:value-of select="concat($currentWayBillNumber, ', ')"/>
                </xsl:if>
              </xsl:for-each>
            </xsl:variable>

            <!--<xsl:variable name="HAWB">
              <xsl:for-each select="//w:SubShipmentCollection/w:SubShipment">
                <xsl:variable name="TipoHAWB">
                  <xsl:value-of select="w:WayBillType/w:Code"/>
                </xsl:variable>
                <xsl:if test="$TipoHAWB = 'HWB'">
                  <xsl:value-of select="w:WayBillNumber"/>
                </xsl:if>
              </xsl:for-each>
            </xsl:variable>-->



            <xsl:attribute name="HAWB">
              <xsl:value-of select="$HAWB"/>
            </xsl:attribute>




            <xsl:variable name="HouseBillOfLanding">
              <xsl:value-of select="..//w:Shipment/w:WayBillNumber"/>
            </xsl:variable>
            <xsl:choose>
              <!-- Verifica si el valor de Description es igual a "AR PERIODIC INVOICE" -->
              <xsl:when test="//w:TransactionInfo/w:Description = 'AR PERIODIC INVOICE'">
                <!-- Si es igual, asigna el valor de HouseBillOfLanding -->
                <xsl:attribute name="HouseBillOfLanding">

                  <xsl:for-each
                    select="//w:Shipment/w:WayBillNumber[generate-id() = generate-id(key('uniqueWayBillNumbers', .)[1])]">
                    <xsl:value-of select="."/>
                    <xsl:if test="position() != last()">, </xsl:if>
                  </xsl:for-each>

                </xsl:attribute>
              </xsl:when>

              <!-- Si no es igual, deja el valor original de Description -->
              <xsl:otherwise>
                <xsl:attribute name="HouseBillOfLanding">
                  <xsl:value-of
                    select="translate(translate($HouseBillOfLanding, '&#xA;', ' '), ' ', '')"/>
                </xsl:attribute>
              </xsl:otherwise>
            </xsl:choose>




            <xsl:attribute name="Origin">
              <xsl:value-of select="concat(w:PortOfLoading/w:Name, ' - ', w:PortOfLoading/w:Code)"/>
            </xsl:attribute>
            <xsl:attribute name="Destination">
              <xsl:value-of
                select="concat(w:PortOfDischarge/w:Name, ' - ', w:PortOfDischarge/w:Code)"/>
            </xsl:attribute>
            <xsl:variable name="ETD">
              <xsl:value-of select="..//w:DateCollection/w:Date[w:Type = 'Departure']/w:Value"/>
            </xsl:variable>
            <xsl:attribute name="ETD">
              <xsl:value-of select="$ETD"/>
            </xsl:attribute>
            <xsl:variable name="ETA">
              <xsl:value-of select="..//w:DateCollection/w:Date[w:Type = 'Arrival']/w:Value"/>
            </xsl:variable>
            <xsl:attribute name="ETA">
              <xsl:value-of select="$ETA"/>
            </xsl:attribute>
          </xsl:for-each>

          <xsl:choose>
            <!-- Verifica si la condición es la que deseas (ajusta según tu necesidad) -->
            <xsl:when test="$PI = 'AR PERIODIC INVOICE'">
              <!-- Calcular la suma total de Weight evitando duplicados -->
              <xsl:variable name="totalWeightSum"
                select="sum(//w:SubShipmentCollection/w:SubShipment/w:ManifestedWeight[generate-id() = generate-id(key('uniqueWeights', .)[1])])"/>

              <!-- Iterar sobre cada Shipment -->
              <xsl:for-each select="//w:ShipmentCollection/w:Shipment">
                <xsl:variable name="TotalWeightUnit" select="w:TotalWeightUnit/w:Code"/>

                <!-- Solo mostrar la suma una vez (en la primera iteración) -->
                <xsl:if test="position() = 1">
                  <xsl:attribute name="Weight">
                    <xsl:value-of select="concat($totalWeightSum, ' ', $TotalWeightUnit)"/>
                  </xsl:attribute>
                </xsl:if>
              </xsl:for-each>
            </xsl:when>


          </xsl:choose>

          <xsl:attribute name="PayRef">
            <xsl:value-of select="//w:TransactionInfo/w:Number"/>
          </xsl:attribute>
          <xsl:choose>
            <xsl:when test="//w:TransactionInfo/w:TransactionType = 'INV'">
              <xsl:attribute name="TipoDocumento">
                <xsl:value-of select="'Invoice ID'"/>
              </xsl:attribute>
            </xsl:when>
            <xsl:when test="//w:TransactionInfo/w:TransactionType = 'CRD'">
              <xsl:attribute name="TipoDocumento">
                <xsl:value-of select="'Credit Note ID'"/>
              </xsl:attribute>
            </xsl:when>
          </xsl:choose>
          <!--
          Se definen los valores de la suma de los DTA, PREVAL y se crea el Grand Total
          -->
          <xsl:variable name="DTA"
            select="sum(//w:PostingJournal[w:ChargeCode/w:Code = 'DTA']/w:OSAmount)"/>
          <xsl:variable name="PREVAL"
            select="sum(//w:PostingJournal[w:ChargeCode/w:Code = 'PREVAL']/w:OSAmount)"/>
          <xsl:attribute name="DTA">
            <xsl:value-of select="format-number($DTA, '0.00')"/>
          </xsl:attribute>
          <xsl:attribute name="PREVAL">
            <xsl:value-of select="format-number($PREVAL, '0.00')"/>
          </xsl:attribute>
          <xsl:attribute name="GrandTotal">
            <xsl:value-of select="format-number($total + $PREVAL + $DTA, '0.00')"/>
          </xsl:attribute>
        </Header>
      </Especiales>
      <Moneda>
        <xsl:attribute name="tipo">
          <xsl:value-of select="//w:TransactionInfo/w:OSCurrency/w:Code"/>
        </xsl:attribute>
        <xsl:attribute name="cambio">
          <xsl:variable name="TotalPesos" select="number(//w:TransactionInfo/w:LocalTotal)"/>
          <xsl:variable name="TotalDolares">
            <xsl:value-of select="number(//w:TransactionInfo/w:OSTotal)"/>
          </xsl:variable>
          <xsl:choose>
            <xsl:when test="format-number($TotalPesos div $TotalDolares, '0.0000') = 'NaN'">
              <xsl:value-of select="'1.0000'"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="format-number($TotalPesos div $TotalDolares, '0.0000')"/>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:attribute>
      </Moneda>
    </a:Comprobante>
  </xsl:template>
</xsl:stylesheet>
